var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.041,1,0.634]],["body/components/AppComponent.html",[0,0.063,1,0.979,2,0.706,3,0.269,4,0.236,5,0.632,6,0.584,7,0.632,8,0.236,9,2.338,10,0.494,11,1.258,12,1.357,13,0.897,14,0.897,15,2.922,16,0.706,17,0.646,18,0.904,19,0.979,20,0.979,21,0.979,22,3.904,23,0.904,24,3.985,25,0.904,26,3.985,27,0.269,28,0.483,29,1.17,30,2.506,31,5.371,32,1.67,33,4.651,34,0.904,35,3.344,36,3.344,37,5.371,38,3.985,39,2.23,40,1.078,41,2.786,42,1,43,0.03,44,0.65,45,0.769,46,1.95,47,0.632,48,0.684,49,0.979,50,1.063,51,3.985,52,2.786,53,2.607,54,2.786,55,3.044,56,2.786,57,2.786,58,2.786,59,2.786,60,0.851,61,2.043,62,1.501,63,1.08,64,0.374,65,2.786,66,2.786,67,2.922,68,2.043,69,2.043,70,2.786,71,1.501,72,2.338,73,1.823,74,2.338,75,0.589,76,2.338,77,2.043,78,2.338,79,0.269,80,0.412,81,2.043,82,1.08,83,2.786,84,3.411,85,3.985,86,3.344,87,3.001,88,3.985,89,0.897,90,3.985,91,3.985,92,3.985,93,3.985,94,3.985,95,3.985,96,3.344,97,2.922,98,0.632,99,0.835,100,0.904,101,0.374,102,1.152,103,0.632,104,0.632,105,0.538,106,0.584,107,1.056,108,0.538,109,0.632,110,0.538,111,0.632,112,0.904,113,0.904,114,0.538,115,0.632,116,0.632,117,0.632,118,0.538,119,0.538,120,0.646,121,0.632,122,0.494,123,0.904,124,0.538,125,0.632,126,0.538,127,0.538,128,0.632,129,0.632,130,0.538,131,0.584,132,0.538,133,0.538,134,0.494,135,0.632,136,0.494,137,0.584,138,0.632,139,0.018,140,0.018]],["title/directives/AuthDirective.html",[101,0.441,134,0.582]],["body/directives/AuthDirective.html",[3,0.389,4,0.342,8,0.342,10,0.715,11,0.987,16,0.907,17,0.83,27,0.389,28,0.62,40,1.177,43,0.03,49,1.14,50,1.238,60,0.757,63,1.565,64,0.542,75,0.597,79,0.389,80,0.597,101,0.754,131,0.846,134,0.907,139,0.023,140,0.023,141,3.388,142,4.96,143,5.62,144,2.152,145,5.62,146,5.91,147,5.91,148,3.322,149,5.118,150,5.118,151,4.036,152,3.349,153,4.036,154,5.118,155,4.036,156,5.118,157,3.754,158,1.833,159,1.992,160,2.641,161,2.96,162,2.641,163,4.036,164,4.036,165,3.388,166,4.036,167,4.036,168,4.036,169,4.036]],["title/components/AvailablePlacesComponent.html",[0,0.041,105,0.634]],["body/components/AvailablePlacesComponent.html",[0,0.05,1,0.425,2,0.718,3,0.212,4,0.187,5,0.5,6,0.461,7,0.5,8,0.187,10,0.39,11,1.222,12,1.314,13,0.425,14,0.425,16,0.593,17,0.543,18,0.76,19,0.425,20,0.425,21,0.425,23,0.76,25,0.76,27,0.212,28,0.405,29,1.117,30,2.235,32,0.79,34,0.76,40,1.108,42,0.79,43,0.03,44,0.548,45,0.99,47,0.76,48,0.54,49,1.029,50,1.117,53,2.191,60,0.813,63,0.854,64,0.295,67,1.615,68,1.615,75,0.326,79,0.212,80,0.326,89,0.425,98,0.5,99,0.701,100,0.76,101,0.295,102,1.028,103,0.5,104,0.5,105,0.874,106,1.179,107,0.92,108,0.425,109,0.5,110,0.425,111,0.5,112,0.76,113,0.76,114,0.425,115,0.5,116,0.5,117,0.5,118,0.425,119,0.425,120,0.543,121,0.5,122,0.39,123,0.76,124,0.425,125,0.5,126,0.874,127,0.874,128,1.397,129,0.5,130,0.425,131,0.461,132,0.425,133,0.425,134,0.39,135,0.5,136,0.39,137,0.461,138,0.5,139,0.015,140,0.015,144,1.874,170,2.881,171,4.899,172,4.281,173,1.615,174,1.804,175,2.652,176,2.456,177,2.456,178,2.972,179,3.401,180,4.089,181,4.725,182,4.089,183,3.401,184,3.401,185,2.963,186,2.81,187,1.848,188,3.349,189,2.764,190,2.201,191,1.848,192,2.456,193,1.848,194,2.81,195,1.848,196,1.848,197,2.456,198,1.848,199,2.405,200,2.201,201,2.81,202,1.848,203,2.81,204,1.848,205,1.848,206,1.615,207,2.81,208,2.81,209,1.44,210,1.848,211,1.44,212,1.615,213,2.191,214,1.848,215,1.848,216,1.848,217,1.615,218,1.848,219,1.44,220,1.848,221,1.848,222,2.81,223,1.615,224,1.848,225,2.972,226,3.321,227,2.972,228,2.81,229,1.615,230,1.848,231,1.699,232,1.848,233,1.848,234,1.848,235,1.615,236,1.848,237,1.848,238,1.848,239,1.44,240,1.848,241,1.848,242,1.615,243,1.615,244,1.44,245,2.81,246,2.81,247,1.848,248,1.848,249,1.848,250,1.44,251,2.81,252,2.201,253,1.848,254,1.848,255,2.201,256,1.848,257,1.44,258,2.81,259,2.81,260,2.81,261,1.848,262,1.848,263,1.848,264,1.615,265,2.201,266,1.848,267,1.848,268,1.848,269,2.652,270,1.848,271,2.456,272,2.81,273,3.349,274,1.98,275,2.81,276,2.456]],["title/components/CardComponent.html",[0,0.041,108,0.634]],["body/components/CardComponent.html",[0,0.068,1,0.739,2,0.877,3,0.369,4,0.325,5,0.869,6,0.802,7,0.869,8,0.325,10,0.678,11,1.298,12,1.404,13,0.739,14,0.739,16,0.877,17,0.803,18,0.869,19,0.739,20,0.739,21,0.739,23,1.123,25,1.123,29,0.802,43,0.029,44,0.664,60,0.566,64,0.514,75,0.566,79,0.369,80,0.566,89,0.739,98,0.869,99,1.037,100,1.123,101,0.514,102,1.315,103,0.869,104,0.869,105,0.739,106,0.802,107,1.244,108,1.118,109,0.869,110,0.739,111,0.869,112,1.123,113,1.123,114,0.739,115,0.869,116,0.869,117,0.869,118,0.739,119,0.739,120,0.803,121,0.869,122,0.678,123,1.123,124,0.739,125,0.869,126,0.739,127,0.739,128,0.869,129,0.869,130,0.739,131,0.802,132,0.739,133,0.739,134,0.678,135,0.869,136,0.678,137,0.802,138,0.869,139,0.022,140,0.022,277,3.214,278,4.948,279,4.948,280,4.948]],["title/components/ComplexFormComponent.html",[0,0.041,110,0.634]],["body/components/ComplexFormComponent.html",[0,0.052,1,0.446,2,0.616,3,0.223,4,0.354,5,0.525,6,0.485,7,0.525,8,0.196,10,0.41,11,1.23,12,1.324,13,0.446,14,0.446,16,0.616,17,0.677,18,0.789,19,0.446,20,0.446,21,0.446,23,0.789,25,0.789,27,0.223,28,0.421,29,0.485,34,0.789,40,0.806,43,0.03,44,0.657,47,0.789,48,0.854,49,0.446,50,0.485,60,0.514,62,2.501,64,0.311,75,0.342,79,0.223,80,0.342,82,1.619,89,0.446,98,0.525,99,0.728,100,0.789,101,0.311,102,1.054,103,0.525,104,0.525,105,0.446,106,0.485,107,0.948,108,0.446,109,0.525,110,0.896,111,1.231,112,0.789,113,0.789,114,0.446,115,0.525,116,0.525,117,0.525,118,0.446,119,0.446,120,1.077,121,0.525,122,0.41,123,0.789,124,0.446,125,0.525,126,0.446,127,0.446,128,0.525,129,0.525,130,0.446,131,0.485,132,0.446,133,0.446,134,0.41,135,0.525,136,0.41,137,0.485,138,0.525,139,0.015,140,0.015,158,1.579,231,1.457,269,2.275,281,3.039,282,3.039,283,3.039,284,1.514,285,3.207,286,3.505,287,2.918,288,2.918,289,4.644,290,3.406,291,2.314,292,2.314,293,4.553,294,3.898,295,5.304,296,5.429,297,5.374,298,2.918,299,3.477,300,4.553,301,3.898,302,4.177,303,3.063,304,3.477,305,3.477,306,3.898,307,4.644,308,3.406,309,3.477,310,4.644,311,4.644,312,3.477,313,4.177,314,5.581,315,4.644,316,2.314,317,2.55,318,1.514,319,1.514,320,1.942,321,2.314,322,2.314,323,2.314,324,2.314,325,1.514,326,2.314,327,1.942,328,2.314,329,3.477,330,3.477,331,3.477,332,3.477,333,3.477,334,3.477,335,2.918,336,3.477,337,3.477,338,2.918,339,3.477,340,2.918,341,3.477,342,3.477,343,2.55,344,3.477,345,3.477,346,3.477,347,3.477,348,3.477,349,3.477,350,3.477,351,3.477,352,3.477,353,3.477,354,3.477,355,2.918,356,2.918,357,3.477,358,2.918]],["title/components/ErrorModalComponent.html",[0,0.041,21,0.634]],["body/components/ErrorModalComponent.html",[0,0.062,1,0.621,2,0.781,3,0.31,4,0.273,5,0.731,6,0.675,7,0.731,8,0.273,10,0.571,11,1.278,12,1.38,13,0.621,14,0.621,16,0.781,17,0.715,18,1.001,19,0.621,20,0.621,21,1.043,23,1.001,25,1.001,27,0.31,28,0.534,29,1.255,30,2.669,34,1.001,40,1.129,43,0.03,44,0.609,47,0.731,48,0.791,49,0.621,50,0.675,53,2.885,60,0.744,63,1.249,64,0.432,69,4.393,75,0.476,79,0.31,80,0.476,89,0.621,98,0.731,99,0.924,100,1.001,101,0.432,102,1.228,103,0.731,104,0.731,105,0.621,106,0.675,107,1.141,108,0.621,109,0.731,110,0.621,111,0.731,112,1.001,113,1.001,114,0.621,115,0.731,116,0.731,117,0.731,118,1.043,119,0.621,120,0.715,121,0.731,122,0.571,123,1.001,124,0.621,125,0.731,126,0.621,127,0.621,128,0.731,129,0.731,130,0.621,131,0.675,132,0.621,133,0.621,134,0.571,135,0.731,136,0.571,137,0.675,138,0.731,139,0.019,140,0.019,144,1.674,158,2.284,359,3.919,360,2.703,361,3.701,362,3.701,363,3.701,364,5.027,365,2.72,366,5.408,367,2.885,368,4.41,369,4.41,370,3.221,371,3.221,372,3.221,373,3.221,374,3.221,375,4.41]],["title/injectables/ErrorService.html",[30,1.621,376,1.769]],["body/injectables/ErrorService.html",[3,0.417,4,0.366,8,0.366,13,0.834,27,0.417,28,0.647,29,1.214,30,2.636,32,1.551,34,1.212,39,2.248,40,1.168,42,1.551,43,0.03,44,0.523,45,0.834,47,1.212,48,1.311,49,1.03,50,1.119,60,0.639,64,0.58,79,0.417,80,0.639,139,0.024,140,0.024,144,1.93,199,2.861,359,4.071,364,3.626,376,2.877,377,3.169,378,3.626,379,5.797,380,6.056,381,5.341,382,4.321,383,5.341,384,4.321,385,4.321,386,5.341,387,4.321,388,3.626,389,4.321,390,4.321]],["title/components/FavoritePlacesComponent.html",[0,0.041,114,0.634]],["body/components/FavoritePlacesComponent.html",[0,0.049,1,0.415,2,0.708,3,0.208,4,0.183,5,0.489,6,0.451,7,0.489,8,0.183,10,0.382,11,1.218,12,1.31,13,0.415,14,0.415,16,0.583,17,0.534,18,0.747,19,0.415,20,0.415,21,0.415,23,0.747,25,0.747,27,0.208,28,0.399,29,1.109,30,2.21,32,0.773,34,0.747,40,1.101,42,0.773,43,0.03,44,0.542,45,0.981,47,0.747,48,0.529,49,1.021,50,1.109,53,2.155,60,0.807,63,0.835,64,0.289,67,1.58,68,1.58,75,0.319,79,0.208,80,0.319,89,0.415,98,0.489,99,0.69,100,0.747,101,0.289,102,1.016,103,0.489,104,0.489,105,0.415,106,0.451,107,0.907,108,0.415,109,0.489,110,0.415,111,0.489,112,0.747,113,0.747,114,0.864,115,1.27,116,0.489,117,0.489,118,0.415,119,0.415,120,0.534,121,0.489,122,0.382,123,0.747,124,0.415,125,0.489,126,0.864,127,0.864,128,1.392,129,0.489,130,0.415,131,0.451,132,0.415,133,0.415,134,0.382,135,0.489,136,0.382,137,0.451,138,0.489,139,0.014,140,0.014,144,1.862,170,2.866,173,1.58,174,1.774,175,2.616,176,2.415,177,2.415,178,2.932,179,3.355,180,4.442,181,4.696,182,4.049,183,3.355,184,3.355,185,2.93,187,1.808,189,2.598,191,1.808,192,2.415,193,1.808,194,2.764,195,1.808,196,1.808,197,2.415,198,1.808,199,2.381,201,2.764,202,1.808,203,2.764,204,1.808,205,1.808,206,1.58,207,2.764,208,2.764,209,1.409,210,1.808,211,1.409,212,1.58,213,2.155,214,1.808,215,1.808,216,1.808,217,1.58,218,1.808,219,1.409,220,1.808,221,1.808,222,2.764,223,1.58,224,1.808,225,2.932,226,3.284,227,2.932,228,2.764,229,1.58,230,1.808,231,1.676,232,1.808,233,1.808,234,1.808,235,1.58,236,1.808,237,1.808,238,1.808,239,1.409,240,1.808,241,1.808,242,1.58,243,1.58,244,1.409,245,2.764,246,3.355,247,1.808,248,1.808,249,1.808,250,1.409,251,2.764,253,1.808,256,1.808,257,1.409,258,2.764,259,2.764,260,2.764,261,1.808,262,1.808,263,1.808,264,1.58,266,1.808,267,1.808,269,2.616,270,1.808,271,2.415,272,2.764,274,2.647,275,2.764,276,2.415,325,1.409,391,4.873,392,4.258,393,3.293,394,3.293,395,2.154,396,2.154,397,2.154,398,1.808,399,2.154,400,2.154,401,2.154,402,2.154,403,2.154,404,2.154,405,1.808,406,4.477]],["title/components/HeaderComponent.html",[0,0.041,19,0.634]],["body/components/HeaderComponent.html",[0,0.066,1,0.713,2,0.856,3,0.356,4,0.313,5,0.838,6,0.774,7,0.838,8,0.313,10,0.654,11,1.294,12,1.399,13,0.713,14,1.144,15,4.192,16,0.856,17,0.784,18,0.838,19,1.103,20,0.713,21,0.713,23,1.097,25,1.097,29,0.774,43,0.029,44,0.652,60,0.546,64,0.496,75,0.546,79,0.356,80,0.546,89,0.713,98,0.838,99,1.013,100,1.097,101,0.496,102,1.297,103,0.838,104,0.838,105,0.713,106,0.774,107,1.223,108,0.713,109,0.838,110,0.713,111,0.838,112,1.097,113,1.097,114,0.713,115,0.838,116,0.838,117,0.838,118,0.713,119,0.713,120,0.784,121,0.838,122,0.654,123,1.097,124,0.713,125,0.838,126,0.713,127,0.713,128,0.838,129,0.838,130,0.713,131,0.774,132,0.713,133,0.713,134,0.654,135,0.838,136,0.654,137,0.774,138,0.838,139,0.021,140,0.021,407,3.1,408,4.834,409,4.834,410,4.834,411,5.716,412,4.834,413,4.057,414,4.057,415,3.545]],["title/interfaces/Lesson.html",[87,1.941,416,1.377]],["body/interfaces/Lesson.html",[3,0.462,4,0.407,8,0.407,27,0.462,28,0.689,39,2.58,43,0.029,44,0.76,45,1.17,46,2.63,79,0.462,81,4.601,87,3.364,139,0.025,140,0.025,416,2.011,417,2.836,418,4.026]],["title/components/LessonComponent.html",[0,0.041,20,0.634]],["body/components/LessonComponent.html",[0,0.061,1,0.605,2,0.767,3,0.302,4,0.266,5,0.711,6,0.656,7,0.711,8,0.266,10,0.555,11,1.274,12,1.376,13,0.605,14,0.956,15,3.174,16,0.767,17,0.867,18,0.982,19,0.605,20,1.031,21,0.605,23,0.982,25,0.982,27,0.302,28,0.524,29,0.656,34,0.982,35,4.487,40,1.169,43,0.03,44,0.6,45,0.605,47,0.711,48,0.769,49,0.605,50,0.656,60,0.791,64,0.421,71,1.688,75,0.463,79,0.302,80,0.463,82,1.678,86,4.708,87,3.582,89,0.605,98,0.711,99,0.907,100,0.982,101,0.421,102,1.213,103,0.711,104,0.711,105,0.605,106,0.656,107,1.125,108,1.031,109,0.711,110,0.605,111,0.711,112,0.982,113,0.982,114,0.605,115,0.711,116,0.711,117,0.711,118,0.605,119,0.605,120,0.702,121,0.711,122,0.555,123,0.982,124,0.605,125,0.711,126,0.605,127,0.605,128,0.711,129,0.711,130,0.605,131,0.656,132,0.605,133,0.605,134,0.555,135,0.711,136,0.555,137,0.656,138,0.711,139,0.019,140,0.019,158,1.423,367,2.832,419,2.63,420,3.244,421,4.957,422,4.327,423,4.327,424,4.957,425,5.61,426,2.832,427,2.832,428,4.327,429,4.327,430,4.327,431,3.133,432,3.636,433,4.327,434,4.327,435,3.133,436,2.832,437,3.133,438,2.63,439,2.832,440,3.133,441,4.327]],["title/components/ModalComponent.html",[0,0.041,118,0.634]],["body/components/ModalComponent.html",[0,0.065,1,0.686,2,0.835,3,0.343,4,0.301,5,0.807,6,0.745,7,0.807,8,0.301,10,0.63,11,1.289,12,1.394,13,0.686,14,0.686,16,0.835,17,0.765,18,0.807,19,0.686,20,0.686,21,0.686,23,1.07,25,1.07,27,0.343,28,0.571,29,0.745,34,1.07,40,0.909,43,0.029,44,0.64,47,0.807,48,1.157,49,0.686,50,0.745,60,0.526,64,0.477,75,0.526,79,0.343,80,0.526,89,0.686,98,0.807,99,0.987,100,1.07,101,0.477,102,1.278,103,0.807,104,0.807,105,0.686,106,0.745,107,1.2,108,0.686,109,0.807,110,0.686,111,0.807,112,1.07,113,1.07,114,0.686,115,0.807,116,0.807,117,0.807,118,1.086,119,0.686,120,0.765,121,0.807,122,0.63,123,1.07,124,0.686,125,0.807,126,0.686,127,0.686,128,0.807,129,0.807,130,0.686,131,0.745,132,0.686,133,0.686,134,0.63,135,0.807,136,0.63,137,0.745,138,0.807,139,0.021,140,0.021,144,1.76,174,2.539,359,3.46,361,3.956,362,3.956,363,3.956,442,2.984,443,5.288,444,5.288,445,5.631,446,3.555,447,4.714,448,3.555,449,2.984,450,3.555,451,3.555]],["title/components/NewRequestComponent.html",[0,0.041,119,0.634]],["body/components/NewRequestComponent.html",[0,0.063,1,0.637,2,0.795,3,0.318,4,0.28,5,0.749,6,0.692,7,0.749,8,0.28,10,0.585,11,1.281,12,1.383,13,0.637,14,0.637,16,0.795,17,0.728,18,1.018,19,0.637,20,0.637,21,0.637,23,1.018,25,1.018,27,0.318,28,0.543,29,0.692,34,1.018,40,0.983,43,0.029,44,0.617,47,0.749,48,0.811,60,0.753,64,0.443,75,0.488,79,0.318,80,0.488,89,0.637,98,0.749,99,0.94,100,1.018,101,0.443,102,1.24,103,0.749,104,0.749,105,1.054,106,0.94,107,1.156,108,0.637,109,0.749,110,0.637,111,0.749,112,1.018,113,1.018,114,1.054,115,1.018,116,0.749,117,0.749,118,0.637,119,1.054,120,0.995,121,0.749,122,0.585,123,1.018,124,0.637,125,0.749,126,0.637,127,0.637,128,1.156,129,0.749,130,0.637,131,0.692,132,0.637,133,0.637,134,0.585,135,0.749,136,0.585,137,0.692,138,0.749,139,0.02,140,0.02,170,2.697,172,2.422,392,2.422,426,2.935,436,2.935,452,4.499,453,2.771,454,4.587,455,4.486,456,4.486,457,4.422,458,5.465,459,4.486,460,3.302,461,4.486,462,3.302,463,4.486,464,3.29,465,2.935,466,4.486,467,4.486,468,3.765,469,4.486]],["title/components/NewTaskComponent.html",[0,0.041,122,0.582]],["body/components/NewTaskComponent.html",[0,0.057,1,0.53,2,0.699,3,0.265,4,0.233,5,0.623,6,0.575,7,0.623,8,0.233,10,0.487,11,1.256,12,1.354,13,0.53,14,0.53,16,0.699,17,0.64,18,0.895,19,0.53,20,0.53,21,0.53,23,0.895,25,0.895,27,0.265,28,0.478,29,0.575,34,0.895,40,1.183,43,0.03,44,0.559,46,1.653,47,0.623,48,0.674,49,1.105,50,1.2,60,0.746,63,1.065,64,0.369,71,1.479,75,0.406,79,0.265,80,0.406,89,0.53,98,0.623,99,0.826,100,0.895,101,0.369,102,1.144,103,0.623,104,0.623,105,0.53,106,0.575,107,1.047,108,0.53,109,0.623,110,0.53,111,0.623,112,0.895,113,0.895,114,0.53,115,0.623,116,0.623,117,0.623,118,0.53,119,0.53,120,0.95,121,0.623,122,0.893,123,0.895,124,0.53,125,0.623,126,0.53,127,0.53,128,0.623,129,0.623,130,0.53,131,0.575,132,0.53,133,0.53,134,0.487,135,0.623,136,0.487,137,0.575,138,0.623,139,0.017,140,0.017,144,1.85,148,2.728,152,2.58,157,2.892,159,2.489,160,1.797,199,2.945,231,1.653,290,3.698,318,1.797,365,1.791,420,3.019,426,2.58,436,2.58,457,3.917,465,2.58,470,5.198,471,5.198,472,2.305,473,2.29,474,4.614,475,3.309,476,3.309,477,4.614,478,4.614,479,4.614,480,2.485,481,3.019,482,3.299,483,3.943,484,3.943,485,2.746,486,2.746,487,2.746,488,2.746,489,3.309,490,2.746,491,2.892,492,2.746,493,2.746,494,2.014,495,2.746,496,2.746,497,2.746,498,2.305,499,2.746,500,2.746,501,2.728,502,2.746,503,3.384,504,2.746,505,1.355,506,1.247,507,2.746,508,2.746,509,2.746,510,2.746,511,3.309,512,3.943,513,3.943]],["title/interfaces/NewTaskData.html",[416,1.377,514,1.941]],["body/interfaces/NewTaskData.html",[3,0.428,4,0.376,8,0.376,27,0.428,28,0.658,39,2.627,43,0.029,45,1.21,46,1.861,79,0.566,139,0.024,140,0.024,365,2.848,416,2.277,417,2.625,473,2.017,480,2.391,501,3.707,503,4.483,505,3.095,506,2.017,514,3.211,515,2.905,516,2.391,517,2.391,518,2.391,519,2.905]],["title/components/NotFoundComponent.html",[0,0.041,124,0.634]],["body/components/NotFoundComponent.html",[0,0.066,1,0.705,2,0.851,3,0.352,4,0.31,5,0.83,6,0.766,7,0.83,8,0.31,10,0.648,11,1.293,12,1.397,13,0.705,14,0.705,16,0.851,17,0.779,18,1.09,19,0.705,20,0.705,21,0.705,23,1.09,25,1.09,29,0.766,43,0.029,44,0.649,60,0.71,64,0.49,71,1.968,75,0.541,79,0.352,80,0.541,89,0.705,98,0.83,99,1.006,100,1.09,101,0.49,102,1.292,103,0.83,104,0.83,105,0.705,106,0.766,107,1.217,108,0.705,109,0.83,110,0.705,111,0.83,112,1.09,113,1.09,114,0.705,115,0.83,116,0.83,117,0.83,118,0.705,119,0.705,120,0.779,121,0.83,122,0.648,123,1.09,124,1.098,125,0.83,126,0.705,127,0.705,128,0.83,129,0.83,130,0.705,131,0.766,132,0.705,133,0.705,134,0.648,135,0.83,136,0.648,137,0.766,138,0.83,139,0.021,140,0.021,276,4.45,420,3.507,520,3.067,521,3.067,522,3.067,523,4.8,524,4.8,525,4.8,526,4.175,527,4.029,528,4.8,529,4.8,530,4.8]],["title/interfaces/Place.html",[189,1.769,416,1.377]],["body/interfaces/Place.html",[3,0.436,4,0.384,8,0.384,27,0.436,28,0.665,39,2.538,43,0.029,45,1.251,46,2.58,79,0.436,139,0.024,140,0.024,170,2.234,189,2.96,308,4.701,365,2.795,416,1.898,417,2.676,531,3.799,532,6.154,533,6.154,534,6.154,535,4.612,536,4.527,537,4.527]],["title/components/PlacesComponent.html",[0,0.041,126,0.634]],["body/components/PlacesComponent.html",[0,0.063,1,0.645,2,0.802,3,0.322,4,0.283,5,0.759,6,0.701,7,0.759,8,0.283,10,0.593,11,1.282,12,1.385,13,0.645,14,0.645,16,0.802,17,0.734,18,0.759,19,0.645,20,0.645,21,0.645,23,1.027,25,1.027,27,0.322,28,0.548,29,0.701,32,1.201,34,1.027,40,1.06,42,1.201,43,0.03,44,0.665,45,0.645,47,0.759,48,0.821,49,0.645,50,0.701,60,0.669,64,0.449,75,0.495,79,0.322,80,0.495,89,0.645,97,3.318,98,0.759,99,0.948,100,1.027,101,0.449,102,1.247,103,0.759,104,0.759,105,0.645,106,0.701,107,1.164,108,0.645,109,0.759,110,0.645,111,0.759,112,1.027,113,1.027,114,0.645,115,0.759,116,0.759,117,0.759,118,0.645,119,0.645,120,0.734,121,0.759,122,0.593,123,1.027,124,0.645,125,0.759,126,1.06,127,0.645,128,1.397,129,0.759,130,0.645,131,0.701,132,0.645,133,0.645,134,0.593,135,0.759,136,0.593,137,0.701,138,0.759,139,0.02,140,0.02,158,1.519,170,2.833,176,3.318,177,3.318,186,3.797,189,3.258,217,2.453,426,2.96,436,2.96,439,2.96,538,2.807,539,5.74,540,4.525,541,4.525,542,3.344,543,3.344,544,3.344,545,4.525,546,4.525]],["title/components/PlacesContainerComponent.html",[0,0.041,127,0.634]],["body/components/PlacesContainerComponent.html",[0,0.065,1,0.687,2,0.836,3,0.343,4,0.302,5,0.808,6,0.746,7,0.808,8,0.302,10,0.631,11,1.29,12,1.394,13,0.687,14,0.687,16,0.836,17,0.858,18,0.808,19,0.687,20,0.687,21,0.687,23,1.071,25,1.071,27,0.343,28,0.571,29,0.746,40,0.91,43,0.029,44,0.641,60,0.527,64,0.478,75,0.527,79,0.343,80,0.527,89,0.687,98,0.808,99,0.989,100,1.071,101,0.478,102,1.279,103,0.808,104,0.808,105,0.687,106,0.746,107,1.201,108,0.687,109,0.808,110,0.687,111,0.808,112,1.071,113,1.071,114,0.687,115,0.808,116,0.808,117,0.808,118,0.687,119,0.687,120,0.765,121,0.808,122,0.631,123,1.071,124,0.687,125,0.808,126,0.687,127,1.087,128,1.395,129,0.808,130,0.687,131,0.746,132,0.687,133,0.687,134,0.631,135,0.808,136,0.631,137,0.746,138,0.808,139,0.021,140,0.021,158,1.617,170,2.612,219,3.463,365,2.791,367,3.088,427,2.33,439,2.33,547,4.442,548,2.989,549,3.96,550,4.719,551,4.719,552,4.719]],["title/directives/SafeLinkDirective.html",[101,0.441,136,0.582]],["body/directives/SafeLinkDirective.html",[3,0.38,4,0.334,8,0.334,10,0.699,11,0.973,12,0.826,16,0.894,17,0.818,27,0.38,28,0.611,32,1.417,34,1.145,40,1.073,42,1.417,43,0.03,44,0.478,45,0.761,47,0.895,48,0.968,49,0.973,50,1.057,60,0.583,63,1.529,64,0.529,75,0.583,79,0.38,80,0.583,82,1.529,101,0.746,136,0.894,137,1.057,139,0.022,140,0.022,144,1.851,158,2.525,162,2.581,225,2.893,231,2.331,306,4.918,449,3.311,553,4.918,554,4.298,555,3.311,556,5.56,557,5.56,558,5.044,559,5.044,560,5.56,561,3.945,562,2.893,563,5.044,564,3.945,565,4.233,566,4.233,567,3.945,568,3.311,569,3.945,570,3.311,571,5.044,572,3.945,573,3.311,574,2.893,575,5.044,576,5.044,577,5.044,578,5.044,579,3.945]],["title/components/SimpleFormComponent.html",[0,0.041,130,0.634]],["body/components/SimpleFormComponent.html",[0,0.059,1,0.469,2,0.639,3,0.234,4,0.206,5,0.552,6,0.51,7,0.552,8,0.206,10,0.431,11,1.238,12,1.339,13,0.469,14,0.469,16,0.639,17,0.772,18,0.819,19,0.469,20,0.469,21,0.469,23,0.819,25,0.819,27,0.234,28,0.437,29,0.51,34,0.819,36,3.029,40,1.028,43,0.03,44,0.521,47,0.819,48,1.056,49,0.696,50,1.065,60,0.636,63,0.943,64,0.326,75,0.36,79,0.234,80,0.36,82,2.065,89,0.469,98,0.552,99,0.756,100,0.819,101,0.326,102,1.081,103,0.552,104,0.552,105,0.469,106,0.51,107,0.977,108,0.469,109,0.552,110,0.469,111,0.552,112,0.819,113,0.819,114,0.469,115,0.552,116,0.552,117,0.552,118,0.469,119,0.469,120,0.919,121,0.552,122,0.431,123,0.819,124,0.469,125,0.552,126,0.469,127,0.469,128,0.552,129,0.552,130,0.918,131,1.155,132,0.469,133,0.469,134,0.431,135,0.552,136,0.431,137,0.51,138,0.552,139,0.016,140,0.016,144,1.432,174,1.944,175,2.816,185,3.115,192,2.647,206,1.784,223,1.784,231,1.804,269,3.115,281,3.608,284,1.592,285,3.349,286,3.611,287,3.029,288,3.029,290,3.491,293,3.611,294,4.471,295,4.268,296,4.268,297,3.996,298,3.029,300,4.471,301,3.029,317,3.156,318,1.592,319,2.361,325,1.592,327,2.041,580,3.608,581,3.608,582,4.303,583,5.085,584,5.085,585,2.432,586,2.432,587,2.432,588,3.609,589,2.647,590,3.156,591,2.432,592,2.432,593,2.432,594,2.432,595,2.432,596,2.432,597,1.438,598,3.156,599,3.156,600,2.041,601,2.432,602,2.041,603,2.432,604,2.432,605,2.432,606,2.432,607,2.432,608,2.432,609,2.432,610,2.432,611,2.432,612,3.609,613,3.609,614,3.609,615,2.432,616,2.432,617,2.432,618,2.432,619,2.432,620,2.432,621,2.432,622,3.609,623,3.609,624,3.609,625,2.432,626,2.432,627,2.432,628,2.432,629,2.432,630,2.432,631,2.432,632,2.432,633,4.761,634,4.761,635,4.761,636,3.609,637,3.609,638,3.609,639,3.609]],["title/interfaces/Task.html",[416,1.377,473,1.492]],["body/interfaces/Task.html",[3,0.416,4,0.365,8,0.365,27,0.416,28,0.646,39,2.636,43,0.03,45,1.239,46,2.537,79,0.558,139,0.023,140,0.023,365,2.824,416,2.236,417,2.549,473,2.423,480,3.259,501,3.676,503,3.162,505,3.069,506,1.958,514,2.549,515,2.821,516,2.322,517,2.322,518,2.322,519,3.959]],["title/components/TaskComponent.html",[0,0.041,132,0.634]],["body/components/TaskComponent.html",[0,0.062,1,0.204,2,0.515,3,0.102,4,0.089,5,0.552,6,0.509,7,0.552,8,0.089,10,0.187,11,1.064,12,1.13,13,0.635,14,1.041,16,0.325,17,0.394,18,0.416,19,0.204,20,0.204,21,0.204,23,0.416,25,0.416,27,0.102,28,0.222,29,0.221,32,0.658,34,0.416,39,1.399,40,1.053,42,0.379,43,0.03,44,0.352,45,0.469,47,0.932,48,1.056,49,0.941,50,0.937,60,0.722,62,2.999,63,0.409,64,0.142,72,0.886,73,0.69,74,0.886,75,0.662,76,0.886,77,0.774,78,3.882,79,0.102,80,0.573,82,1.591,89,0.204,96,3.445,98,0.239,99,0.384,100,0.659,101,0.52,102,0.659,103,0.239,104,0.239,105,0.204,106,0.812,107,0.552,108,0.56,109,0.239,110,0.56,111,0.747,112,0.416,113,0.416,114,0.204,115,0.239,116,0.239,117,0.239,118,0.204,119,0.56,120,0.585,121,0.239,122,0.187,123,0.416,124,0.204,125,0.239,126,0.204,127,0.204,128,0.552,129,0.239,130,0.56,131,0.689,132,0.56,133,0.204,134,0.515,135,0.239,136,0.515,137,0.221,138,0.239,139,0.008,140,0.008,142,1.539,144,0.809,148,0.624,152,1.2,157,0.774,158,0.479,159,1.434,160,0.69,161,0.774,162,2.153,174,0.988,175,1.591,185,1.901,197,2.646,199,1.434,226,1.345,227,2.646,235,2.646,239,2.686,242,1.345,243,1.345,244,1.2,250,1.2,257,1.2,264,2.646,268,1.539,271,1.345,274,1.084,282,0.69,283,0.69,285,2.133,355,1.539,356,0.886,358,1.539,367,1.2,376,0.988,388,3.995,398,1.539,405,1.539,413,1.539,427,0.69,432,1.783,438,0.886,439,0.69,452,1.345,454,1.539,457,1.345,464,3.491,465,1.2,473,1.864,475,1.539,476,1.539,481,2.928,482,1.2,505,1.781,506,2.216,516,2.088,517,1.31,518,1.565,526,1.345,549,1.539,554,0.774,562,1.345,566,1.539,568,3.445,570,0.886,573,2.438,580,0.69,581,0.69,597,1.945,598,2.413,599,2.413,640,0.886,641,3.29,642,1.591,643,4.105,644,2.905,645,3.29,646,3.29,647,3.29,648,3.29,649,3.882,650,1.834,651,2.905,652,2.905,653,2.905,654,2.905,655,2.905,656,2.905,657,1.834,658,1.055,659,1.834,660,1.055,661,0.886,662,1.055,663,1.055,664,1.055,665,1.055,666,1.055,667,1.055,668,1.834,669,1.055,670,1.834,671,1.055,672,1.834,673,1.055,674,1.834,675,1.834,676,1.055,677,1.055,678,1.055,679,1.055,680,1.055,681,2.041,682,1.834,683,3.611,684,1.834,685,2.438,686,1.055,687,1.834,688,1.055,689,0.886,690,1.055,691,1.055,692,1.055,693,4.626,694,2.427,695,1.055,696,1.055,697,1.055,698,1.834,699,1.834,700,1.055,701,1.055,702,1.834,703,1.591,704,0.886,705,0.886,706,3.611,707,3.608,708,3.658,709,1.055,710,0.774,711,3.876,712,1.055,713,3.253,714,1.055,715,1.055,716,0.886,717,2.761,718,2.905,719,2.041,720,1.055,721,1.055,722,1.055,723,1.055,724,1.055,725,1.055,726,1.055,727,1.055,728,5.327,729,3.608,730,2.905,731,1.834,732,1.834,733,2.438,734,3.445,735,1.834,736,4.105,737,1.834,738,1.834,739,2.905,740,1.834,741,1.834,742,2.905,743,1.834,744,2.905,745,1.345,746,1.539,747,1.539,748,2.905,749,1.539,750,1.539,751,2.646,752,1.539,753,1.834,754,2.905,755,1.834,756,1.834,757,1.539,758,1.834,759,2.646,760,2.905,761,1.834,762,1.834,763,1.834,764,1.834,765,1.834,766,1.834,767,1.055,768,1.055,769,1.539,770,3.028,771,3.028,772,2.905,773,1.834,774,1.2,775,1.834,776,1.834,777,1.539,778,1.834,779,1.834,780,1.834,781,2.905,782,1.834,783,1.834,784,1.834,785,1.834,786,1.539,787,1.834,788,1.834,789,1.834,790,1.834,791,1.834,792,2.905,793,3.608,794,2.905,795,2.905,796,1.834,797,1.834,798,1.834,799,1.834,800,2.905,801,2.905,802,1.834,803,1.539,804,1.345,805,2.431,806,2.905,807,2.905,808,1.834,809,1.055,810,1.055,811,1.055,812,2.905,813,1.834,814,1.834,815,3.028,816,1.834,817,1.834,818,1.834,819,4.105,820,1.834,821,1.834,822,1.834,823,1.539,824,1.834,825,1.834,826,1.834,827,1.539,828,1.834,829,2.905,830,1.834,831,1.834,832,1.834,833,1.539,834,1.834,835,1.834,836,1.834,837,1.834,838,1.834,839,1.834,840,1.834,841,1.539,842,1.834,843,1.834,844,1.834,845,1.834,846,1.834,847,1.834,848,3.01,849,1.834,850,1.834,851,1.834,852,1.834,853,1.834,854,1.834,855,3.608,856,1.834,857,3.028,858,1.834,859,1.539,860,2.905,861,1.834,862,1.834,863,1.834,864,1.539,865,1.834,866,2.905,867,1.834,868,1.834,869,1.834,870,1.834,871,3.608,872,2.438,873,1.834,874,1.834,875,1.834,876,1.834,877,1.834,878,1.834,879,1.834,880,1.539,881,1.834,882,2.438,883,2.905,884,1.834,885,1.834,886,4.105,887,3.608,888,1.834,889,3.608,890,1.834,891,1.834,892,1.834,893,1.834,894,1.834,895,1.834,896,2.905,897,1.834,898,1.834,899,1.834,900,1.834,901,1.539,902,1.834,903,1.539,904,1.834,905,1.834,906,1.834,907,1.834,908,1.834,909,1.834,910,1.834,911,1.055,912,1.055]],["title/injectables/TaskService.html",[159,1.621,376,1.769]],["body/injectables/TaskService.html",[3,0.305,4,0.268,8,0.268,13,0.61,27,0.305,28,0.527,32,2.021,34,0.988,39,2.462,40,1.189,42,2.021,43,0.03,44,0.682,45,1.086,46,2.088,47,1.32,48,1.382,49,0.84,50,0.912,60,0.737,61,2.319,62,1.703,64,0.424,79,0.305,80,0.468,82,1.226,89,1.086,101,0.424,120,0.513,139,0.019,140,0.019,144,1.658,148,2.945,159,2.149,161,2.319,165,2.654,199,1.561,231,1.825,365,1.436,376,1.703,377,2.319,473,2.758,480,3.21,501,1.869,505,2.149,514,3.173,516,2.891,519,2.069,661,3.655,717,4.504,913,2.654,914,4.981,915,4.355,916,4.355,917,4.355,918,5.367,919,4.355,920,4.355,921,4.355,922,4.355,923,3.162,924,4.355,925,3.162,926,4.355,927,3.162,928,3.162,929,4.355,930,4.981,931,3.162,932,4.355,933,4.355,934,3.162,935,4.355,936,4.355,937,3.162,938,3.162,939,2.319,940,3.162,941,3.162,942,3.162,943,3.162,944,3.162,945,3.162,946,3.162,947,4.355,948,3.162,949,3.162,950,3.162,951,3.162,952,2.654,953,4.355,954,3.162,955,4.355,956,3.162,957,3.655,958,3.162,959,3.162,960,3.162]],["title/components/TasksComponent.html",[0,0.041,133,0.634]],["body/components/TasksComponent.html",[0,0.045,1,0.363,2,0.525,3,0.181,4,0.159,5,0.427,6,0.394,7,0.427,8,0.159,10,0.333,11,1.194,12,1.281,13,0.363,14,0.363,16,0.525,17,0.481,18,0.673,19,0.363,20,0.363,21,0.363,22,3.078,23,0.673,25,0.673,27,0.181,28,0.359,29,0.394,32,0.675,34,0.673,39,1.422,40,1.116,42,0.675,43,0.03,44,0.504,45,0.363,46,1.242,47,0.832,48,0.462,49,1.116,50,1.194,55,1.23,60,0.712,61,1.379,62,1.596,63,0.729,64,0.252,71,1.013,75,0.278,79,0.354,80,0.278,82,2.27,84,1.379,89,1.036,97,2.173,98,0.427,99,0.621,100,0.673,101,0.252,102,0.945,103,0.427,104,0.427,105,0.363,106,0.394,107,0.832,108,0.363,109,0.427,110,0.363,111,0.427,112,0.673,113,0.673,114,0.363,115,0.427,116,0.427,117,0.427,118,0.363,119,0.363,120,0.735,121,0.427,122,0.333,123,0.673,124,0.363,125,0.427,126,0.363,127,0.363,128,0.427,129,0.427,130,0.363,131,0.394,132,0.803,133,0.803,134,0.333,135,0.427,136,0.333,137,0.394,138,0.427,139,0.013,140,0.013,144,1.97,148,2.168,152,1.939,159,2.055,160,1.23,162,2.4,178,2.173,199,2.576,231,2.304,285,1.111,340,1.578,420,2.4,432,3.827,473,2.057,480,2.439,481,3.513,482,2.724,489,3.493,491,2.173,494,3.529,498,1.578,505,1.463,506,2.185,511,3.078,517,1.596,518,2.242,562,1.379,597,1.111,681,2.487,683,4.038,685,2.487,705,3.078,710,1.379,719,3.493,833,1.578,952,4.038,957,2.487,961,1.379,962,2.963,963,2.963,964,4.163,965,4.529,966,4.812,967,3.668,968,4.529,969,5.036,970,2.963,971,1.88,972,2.963,973,1.88,974,2.963,975,1.88,976,1.88,977,2.963,978,1.88,979,1.88,980,1.88,981,1.88,982,1.88,983,2.963,984,1.88,985,2.963,986,2.963,987,2.963,988,2.963,989,2.963,990,2.963,991,2.487,992,4.163,993,2.963,994,2.963,995,2.963,996,4.812,997,2.963,998,2.963,999,2.963,1000,2.963,1001,2.963,1002,4.529,1003,2.963,1004,2.963,1005,1.88,1006,2.963,1007,1.88,1008,1.88,1009,3.493,1010,1.88,1011,3.078,1012,3.078,1013,1.88,1014,1.88,1015,1.88,1016,1.88,1017,1.88,1018,1.88,1019,2.963,1020,1.88,1021,1.88,1022,1.88,1023,1.88,1024,1.88,1025,1.88,1026,1.88,1027,1.88,1028,1.88,1029,1.88,1030,1.88,1031,1.88,1032,1.88,1033,3.668,1034,1.88,1035,1.88,1036,1.88,1037,1.88,1038,1.88,1039,3.668,1040,1.88,1041,1.88,1042,1.88,1043,1.88,1044,1.88,1045,1.379,1046,3.078,1047,1.578,1048,1.578,1049,1.578,1050,1.379,1051,1.578,1052,2.963,1053,2.963,1054,2.963]],["title/pipes/TemperaturePipe.html",[642,2.149,694,1.941]],["body/pipes/TemperaturePipe.html",[3,0.333,4,0.292,8,0.292,10,0.611,16,0.819,17,0.902,32,1.239,34,0.783,39,2.249,40,0.665,42,1.239,43,0.03,44,0.631,45,0.665,47,0.783,49,0.665,50,1.298,60,0.51,64,0.463,79,0.333,80,0.51,82,2.019,139,0.02,140,0.02,174,1.858,308,4.378,325,3.64,642,3.023,649,3.877,694,3.079,703,2.257,903,2.895,1055,2.895,1056,5.209,1057,2.895,1058,4.62,1059,5.97,1060,6.341,1061,6.196,1062,6.097,1063,3.449,1064,3.449,1065,4.62,1066,3.449,1067,3.449,1068,3.449,1069,3.449,1070,3.449,1071,3.449,1072,3.449,1073,3.449,1074,5.97,1075,3.449,1076,3.449,1077,5.563,1078,4.62,1079,4.62,1080,4.62,1081,5.563,1082,5.209,1083,5.209,1084,3.449]],["title/coverage.html",[1085,3.751]],["body/coverage.html",[0,0.08,1,0.576,8,0.253,9,2.506,19,0.576,20,0.576,21,0.576,30,1.474,43,0.03,45,0.807,55,1.953,69,2.19,87,1.765,101,0.562,105,0.576,108,0.576,110,0.576,114,0.576,118,0.576,119,0.576,120,0.484,122,0.529,124,0.576,126,0.576,127,0.576,130,0.576,132,0.576,133,0.576,134,0.529,136,0.529,139,0.018,140,0.018,141,2.506,159,1.474,170,2.82,171,2.506,172,2.19,173,3.069,189,1.608,209,1.953,211,1.953,213,1.953,219,1.953,274,3.999,277,2.506,281,3.607,282,2.738,283,2.738,284,3.607,303,2.19,319,3.161,359,3.161,360,2.506,376,2.254,378,2.506,391,2.506,392,2.19,407,2.506,416,2.195,418,2.506,419,2.506,442,2.506,452,3.069,453,2.506,470,2.506,471,2.506,472,2.506,473,1.356,514,1.765,515,3.161,516,1.608,520,2.506,521,2.506,522,2.506,531,2.506,538,2.506,547,2.506,548,2.506,553,2.506,554,2.19,555,2.506,565,2.506,574,3.069,580,3.161,581,3.161,589,2.19,590,2.19,640,2.506,642,1.953,694,1.765,704,5.174,913,2.506,939,2.19,961,3.543,1045,2.19,1050,2.19,1055,2.506,1085,2.506,1086,2.986,1087,2.986,1088,2.986,1089,4.831,1090,2.506,1091,2.506,1092,6.507,1093,3.512,1094,3.512,1095,4.184,1096,5.235,1097,4.184,1098,5.235,1099,2.986,1100,2.986,1101,2.986,1102,4.184,1103,2.986,1104,2.506,1105,3.512,1106,2.506,1107,2.506,1108,2.506,1109,2.506,1110,2.506,1111,2.506,1112,2.506,1113,2.506,1114,2.506,1115,2.506,1116,2.506,1117,2.506,1118,2.986,1119,2.506,1120,2.506,1121,2.506,1122,2.506,1123,2.986,1124,2.986]],["title/dependencies.html",[774,2.582,1125,2.307]],["body/dependencies.html",[43,0.03,64,0.654,71,2.626,139,0.025,140,0.025,318,3.19,597,2.882,689,4.092,774,3.19,1126,6.584,1127,4.876,1128,5.745,1129,4.822,1130,4.876,1131,4.876,1132,4.876,1133,4.876,1134,4.876,1135,4.876]],["title/miscellaneous/functions.html",[1136,1.481,1137,3.312]],["body/miscellaneous/functions.html",[27,0.453,32,2.16,42,2.16,43,0.028,44,0.728,45,1.16,139,0.025,140,0.025,281,3.678,282,3.075,283,3.075,284,4.168,303,4.123,317,4.742,320,3.945,580,3.075,581,3.075,589,4.123,590,4.123,600,3.945,602,3.945,786,5.048,1136,2.531,1137,3.945,1138,5.621,1139,4.7]],["title/index.html",[27,0.265,338,2.307,1140,2.749]],["body/index.html",[0,0.068,2,0.695,4,0.332,14,1.128,43,0.022,49,0.97,73,2.567,75,0.58,77,2.877,106,0.822,120,0.636,139,0.022,140,0.022,212,2.877,250,2.567,257,2.567,343,3.686,414,3.292,415,2.877,468,3.292,506,1.782,526,2.877,703,2.567,708,4.536,710,3.686,734,3.292,745,2.877,751,2.877,759,3.686,769,4.654,777,3.292,848,2.877,857,4.654,859,3.292,864,3.292,880,3.292,1129,3.292,1141,3.923,1142,5.545,1143,3.923,1144,6.046,1145,3.923,1146,5.026,1147,3.923,1148,3.923,1149,6.046,1150,6.185,1151,3.923,1152,5.026,1153,3.923,1154,3.923,1155,3.923,1156,3.923,1157,5.026,1158,3.923,1159,3.923,1160,3.292,1161,5.545,1162,3.923,1163,3.923,1164,3.923,1165,3.923,1166,3.923,1167,3.923,1168,3.923,1169,3.923,1170,3.923,1171,3.923,1172,3.923,1173,3.923,1174,3.923,1175,5.026,1176,5.545,1177,3.923,1178,3.923,1179,3.923,1180,3.923,1181,5.545,1182,3.923,1183,6.185,1184,3.923,1185,5.026,1186,3.923,1187,3.923,1188,3.923,1189,3.923,1190,3.923,1191,3.923,1192,3.923,1193,3.923,1194,2.877,1195,3.923]],["title/modules.html",[804,3.278]],["body/modules.html",[43,0.026,139,0.026,140,0.026,804,3.874]],["title/overview.html",[1194,3.278]],["body/overview.html",[2,0.913,43,0.026,75,0.762,139,0.026,140,0.026,377,3.779,417,3.046,694,3.046,716,4.324,1194,3.779,1196,5.153,1197,5.933,1198,5.153]],["title/properties.html",[28,0.478,1125,2.307]],["body/properties.html",[28,0.635,43,0.028,139,0.026,140,0.026,415,3.845,1199,5.243]],["title/miscellaneous/typealiases.html",[1136,1.481,1200,3.946]],["body/miscellaneous/typealiases.html",[27,0.494,43,0.028,45,0.989,139,0.026,140,0.026,506,2.329,515,3.355,516,3.186,517,2.762,518,2.762,1136,2.762,1201,5.127,1202,5.127]],["title/miscellaneous/variables.html",[1136,1.481,1203,3.312]],["body/miscellaneous/variables.html",[0,0.042,2,0.396,6,0.469,14,1.035,17,0.55,27,0.216,43,0.03,44,0.669,45,1.13,46,2.587,49,1.112,50,1.227,55,2.218,62,2.459,73,1.464,75,0.501,81,4.051,82,2.002,84,1.64,89,0.432,99,0.469,120,0.363,122,0.396,139,0.015,140,0.015,209,2.218,211,2.218,213,2.218,229,1.64,231,1.914,239,2.218,244,1.464,254,1.877,274,2.419,285,1.322,319,1.464,335,1.877,343,1.64,365,2.509,427,1.464,464,3.001,465,1.464,480,3.046,481,1.464,482,1.464,491,1.64,494,2.486,501,3.266,505,2.726,506,2.345,517,1.205,518,1.205,519,3.614,527,1.877,535,1.877,574,3.348,597,2.419,598,2.486,599,2.486,703,2.218,706,3.434,708,1.64,713,2.845,733,2.845,745,1.64,746,1.877,747,1.877,749,1.877,750,1.877,751,1.64,752,1.877,757,1.877,759,1.64,770,2.845,771,2.845,774,1.464,803,1.877,815,1.877,823,3.434,827,1.877,841,2.845,848,3.001,872,1.877,882,3.434,901,1.877,939,2.486,961,1.64,991,1.877,1009,2.845,1011,2.845,1012,2.845,1045,2.486,1046,3.434,1047,1.877,1048,1.877,1049,1.877,1050,2.486,1051,1.877,1057,1.877,1090,1.877,1091,2.845,1093,1.877,1094,3.434,1104,1.877,1105,3.434,1106,1.877,1107,2.845,1108,2.845,1109,1.877,1110,1.877,1111,2.845,1112,2.845,1113,1.877,1114,1.877,1115,1.877,1116,2.845,1117,3.434,1119,1.877,1120,2.845,1121,1.877,1122,2.845,1136,1.205,1160,1.877,1203,1.877,1204,2.237,1205,2.237,1206,4.092,1207,2.237,1208,3.389,1209,3.389,1210,2.237,1211,2.237,1212,2.237,1213,2.237,1214,2.237,1215,2.237,1216,2.237,1217,2.237,1218,2.237,1219,2.237,1220,2.237,1221,2.237,1222,2.237,1223,2.237,1224,2.237,1225,3.389,1226,5.363,1227,3.389,1228,3.389,1229,3.389,1230,3.389,1231,2.237,1232,3.389,1233,3.389,1234,3.389,1235,2.237,1236,2.237,1237,2.237,1238,2.237,1239,2.237,1240,2.237,1241,5.524,1242,5.524,1243,5.524,1244,2.237,1245,2.237,1246,2.237,1247,2.237,1248,3.389,1249,2.237,1250,3.389,1251,2.237,1252,2.237,1253,2.237,1254,4.092,1255,2.237,1256,2.237,1257,2.237,1258,2.237,1259,2.237,1260,2.237,1261,4.092,1262,2.237,1263,2.237,1264,2.237,1265,2.237,1266,2.237,1267,2.237,1268,2.237,1269,2.237,1270,2.237,1271,2.237,1272,2.237,1273,3.389,1274,2.237,1275,2.237,1276,2.237,1277,3.389,1278,2.237,1279,2.237,1280,2.237,1281,2.237,1282,2.237,1283,3.389,1284,3.389,1285,2.237,1286,3.389,1287,2.237,1288,2.237,1289,2.237,1290,2.237,1291,2.237]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":274,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1199,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":716,"title":{},"body":{"components/TaskComponent.html":{},"overview.html":{}}}],["12",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":1196,"title":{},"body":{"overview.html":{}}}],["19",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{}}}],["19'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["19.2.0",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["19.2.8",{"_index":1145,"title":{},"body":{"index.html":{}}}],["2",{"_index":1197,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["2025",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["31",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":1080,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["4",{"_index":1198,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1079,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["6",{"_index":636,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["64;injectable",{"_index":784,"title":{},"body":{"components/TaskComponent.html":{}}}],["64;optional",{"_index":809,"title":{},"body":{"components/TaskComponent.html":{}}}],["64;self",{"_index":810,"title":{},"body":{"components/TaskComponent.html":{}}}],["64;skipself",{"_index":811,"title":{},"body":{"components/TaskComponent.html":{}}}],["7.8.0",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1078,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["_error",{"_index":379,"title":{},"body":{"injectables/ErrorService.html":{}}}],["a.id.localecompare(b.id",{"_index":1003,"title":{},"body":{"components/TasksComponent.html":{}}}],["a19",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["a19.interceptor.ts",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["a[appsafelink",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["abstractcontrol",{"_index":317,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{},"miscellaneous/functions.html":{}}}],["accept",{"_index":765,"title":{},"body":{"components/TaskComponent.html":{}}}],["access",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessible",{"_index":893,"title":{},"body":{"components/TaskComponent.html":{}}}],["accessing",{"_index":985,"title":{},"body":{"components/TasksComponent.html":{}}}],["accessors",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/SimpleFormComponent.html":{}}}],["activated",{"_index":889,"title":{},"body":{"components/TaskComponent.html":{}}}],["activatedroute",{"_index":494,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["activatedroute.parammap.get('lessonid",{"_index":1047,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["activatedroutesnapshot",{"_index":1009,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["activepermission",{"_index":914,"title":{},"body":{"injectables/TaskService.html":{}}}],["actual_component",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["add",{"_index":511,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["adding",{"_index":268,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["addition",{"_index":813,"title":{},"body":{"components/TaskComponent.html":{}}}],["additional",{"_index":1190,"title":{},"body":{"index.html":{}}}],["address",{"_index":306,"title":{},"body":{"components/ComplexFormComponent.html":{},"directives/SafeLinkDirective.html":{}}}],["addtask",{"_index":915,"title":{},"body":{"injectables/TaskService.html":{}}}],["addtask(task",{"_index":922,"title":{},"body":{"injectables/TaskService.html":{}}}],["advanced",{"_index":793,"title":{},"body":{"components/TaskComponent.html":{}}}],["afterviewinit",{"_index":443,"title":{},"body":{"components/ModalComponent.html":{}}}],["again",{"_index":270,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["agree",{"_index":354,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["alias",{"_index":565,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{}}}],["aliases",{"_index":1201,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":841,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":239,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["alt",{"_index":537,"title":{},"body":{"interfaces/Place.html":{}}}],["always",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":689,"title":{},"body":{"components/TaskComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":700,"title":{},"body":{"components/TaskComponent.html":{}}}],["angular/forms",{"_index":318,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["another",{"_index":778,"title":{},"body":{"components/TaskComponent.html":{}}}],["ans",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":850,"title":{},"body":{"components/TaskComponent.html":{}}}],["apihost",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["appauth",{"_index":142,"title":{},"body":{"directives/AuthDirective.html":{},"components/TaskComponent.html":{}}}],["appauth]'},{'name",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1091,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":749,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":759,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationstate",{"_index":835,"title":{},"body":{"components/TaskComponent.html":{}}}],["applies",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{}}}],["apps",{"_index":798,"title":{},"body":{"components/TaskComponent.html":{}}}],["appsafelink",{"_index":566,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["array",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{}}}],["artifacts",{"_index":1168,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1002,"title":{},"body":{"components/TasksComponent.html":{}}}],["ascending",{"_index":1054,"title":{},"body":{"components/TasksComponent.html":{}}}],["asigment",{"_index":397,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["assets/dummy",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["assets/mf",{"_index":433,"title":{},"body":{"components/LessonComponent.html":{}}}],["associate",{"_index":905,"title":{},"body":{"components/TaskComponent.html":{}}}],["associated",{"_index":909,"title":{},"body":{"components/TaskComponent.html":{}}}],["async",{"_index":184,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["asyncvalidators",{"_index":588,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["atribute",{"_index":570,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["attribute",{"_index":748,"title":{},"body":{"components/TaskComponent.html":{}}}],["attributes",{"_index":754,"title":{},"body":{"components/TaskComponent.html":{}}}],["auth",{"_index":164,"title":{},"body":{"directives/AuthDirective.html":{}}}],["authdirective",{"_index":134,"title":{"directives/AuthDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["authenticated",{"_index":894,"title":{},"body":{"components/TaskComponent.html":{}}}],["authentication",{"_index":854,"title":{},"body":{"components/TaskComponent.html":{}}}],["automatically",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["availableplacescomponent",{"_index":105,"title":{"components/AvailablePlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["avatar",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lesson.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":233,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["aware",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["b",{"_index":1001,"title":{},"body":{"components/TasksComponent.html":{}}}],["b.id.localecompare(a.id",{"_index":1004,"title":{},"body":{"components/TasksComponent.html":{}}}],["back",{"_index":529,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["basis",{"_index":758,"title":{},"body":{"components/TaskComponent.html":{}}}],["before",{"_index":887,"title":{},"body":{"components/TaskComponent.html":{}}}],["beginning",{"_index":987,"title":{},"body":{"components/TasksComponent.html":{}}}],["behavior",{"_index":750,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["best",{"_index":344,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["between",{"_index":244,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["beyond",{"_index":796,"title":{},"body":{"components/TaskComponent.html":{}}}],["biding",{"_index":733,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["binding",{"_index":739,"title":{},"body":{"components/TaskComponent.html":{}}}],["bit",{"_index":337,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["blocking",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["board",{"_index":334,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["boolean",{"_index":930,"title":{},"body":{"injectables/TaskService.html":{}}}],["break",{"_index":718,"title":{},"body":{"components/TaskComponent.html":{}}}],["browser",{"_index":1129,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":769,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["buildthis",{"_index":1165,"title":{},"body":{"index.html":{}}}],["buld",{"_index":836,"title":{},"body":{"components/TaskComponent.html":{}}}],["button",{"_index":838,"title":{},"body":{"components/TaskComponent.html":{}}}],["c",{"_index":1082,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["called",{"_index":760,"title":{},"body":{"components/TaskComponent.html":{}}}],["canactivate",{"_index":890,"title":{},"body":{"components/TaskComponent.html":{}}}],["cancel",{"_index":512,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["candeactivate",{"_index":898,"title":{},"body":{"components/TaskComponent.html":{}}}],["candeactivatefn",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canleaveeditpage",{"_index":1108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["canload",{"_index":902,"title":{},"body":{"components/TaskComponent.html":{}}}],["canmatch",{"_index":884,"title":{},"body":{"components/TaskComponent.html":{}}}],["canmatchfn",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":278,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["card.component.html",{"_index":279,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":280,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":108,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["case",{"_index":683,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["catch",{"_index":261,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["cel",{"_index":1060,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["certain",{"_index":896,"title":{},"body":{"components/TaskComponent.html":{}}}],["chache",{"_index":1069,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["chance",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":729,"title":{},"body":{"components/TaskComponent.html":{}}}],["changes",{"_index":991,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["characters",{"_index":637,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["check",{"_index":332,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["child",{"_index":1023,"title":{},"body":{"components/TasksComponent.html":{}}}],["childpath",{"_index":1030,"title":{},"body":{"components/TasksComponent.html":{}}}],["choose",{"_index":1188,"title":{},"body":{"index.html":{}}}],["city",{"_index":310,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["class",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["classes",{"_index":823,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["clearerror",{"_index":380,"title":{},"body":{"injectables/ErrorService.html":{}}}],["cli",{"_index":1144,"title":{},"body":{"index.html":{}}}],["click",{"_index":568,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["click)=\"onclick",{"_index":741,"title":{},"body":{"components/TaskComponent.html":{}}}],["clickcount",{"_index":643,"title":{},"body":{"components/TaskComponent.html":{}}}],["clicking",{"_index":837,"title":{},"body":{"components/TaskComponent.html":{}}}],["close",{"_index":457,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["code",{"_index":343,"title":{},"body":{"components/ComplexFormComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["collection",{"_index":467,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["combine",{"_index":755,"title":{},"body":{"components/TaskComponent.html":{}}}],["come",{"_index":1187,"title":{},"body":{"index.html":{}}}],["command",{"_index":1181,"title":{},"body":{"index.html":{}}}],["communicate",{"_index":842,"title":{},"body":{"components/TaskComponent.html":{}}}],["comparisons",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compile",{"_index":1166,"title":{},"body":{"index.html":{}}}],["complements",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":257,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["completed",{"_index":685,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["completely",{"_index":868,"title":{},"body":{"components/TaskComponent.html":{}}}],["complex",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["complexformcomponent",{"_index":110,"title":{"components/ComplexFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component.entereddate().length",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component.enteredsummary().length",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component.enteredtitle().length",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component.ts",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["components/header/header.component",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["components/lesson/lesson.component",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["components/task/task.model",{"_index":938,"title":{},"body":{"injectables/TaskService.html":{}}}],["computed",{"_index":432,"title":{},"body":{"components/LessonComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["concrete",{"_index":822,"title":{},"body":{"components/TaskComponent.html":{}}}],["conditional",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conditionally",{"_index":1025,"title":{},"body":{"components/TasksComponent.html":{}}}],["conditions",{"_index":355,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{}}}],["configuration",{"_index":766,"title":{},"body":{"components/TaskComponent.html":{}}}],["confirm",{"_index":339,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["confirm('are",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmpassword",{"_index":302,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["confirmpassword?.value",{"_index":324,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["conjunction",{"_index":808,"title":{},"body":{"components/TaskComponent.html":{}}}],["console.error(error.message",{"_index":266,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["console.log('intercepted",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(this.form.value",{"_index":327,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["const",{"_index":231,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":148,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["container",{"_index":549,"title":{},"body":{"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{}}}],["container'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["container.component",{"_index":220,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["container.component.html",{"_index":550,"title":{},"body":{"components/PlacesContainerComponent.html":{}}}],["container.component.scss",{"_index":551,"title":{},"body":{"components/PlacesContainerComponent.html":{}}}],["container.component.ts",{"_index":548,"title":{},"body":{"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:11",{"_index":552,"title":{},"body":{"components/PlacesContainerComponent.html":{}}}],["container/places",{"_index":219,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["control",{"_index":786,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/functions.html":{}}}],["control.get('confirmpassword",{"_index":322,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["control.get('password",{"_index":321,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["control.value",{"_index":603,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["control.value.includes",{"_index":601,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["controls",{"_index":806,"title":{},"body":{"components/TaskComponent.html":{}}}],["convert",{"_index":712,"title":{},"body":{"components/TaskComponent.html":{}}}],["converted",{"_index":840,"title":{},"body":{"components/TaskComponent.html":{}}}],["coverage",{"_index":1085,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":465,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":780,"title":{},"body":{"components/TaskComponent.html":{}}}],["currentchildroute",{"_index":964,"title":{},"body":{"components/TasksComponent.html":{}}}],["cursed",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":693,"title":{},"body":{"components/TaskComponent.html":{}}}],["cycle",{"_index":610,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["data",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["data.ts",{"_index":1094,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":853,"title":{},"body":{"components/TaskComponent.html":{}}}],["date",{"_index":503,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{}}}],["date().gettime().tostring",{"_index":948,"title":{},"body":{"injectables/TaskService.html":{}}}],["date:'fulldate",{"_index":731,"title":{},"body":{"components/TaskComponent.html":{}}}],["date:\\'fulldate",{"_index":910,"title":{},"body":{"components/TaskComponent.html":{}}}],["datepipe",{"_index":641,"title":{},"body":{"components/TaskComponent.html":{}}}],["debouncetime",{"_index":596,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["decides",{"_index":885,"title":{},"body":{"components/TaskComponent.html":{}}}],["declare",{"_index":814,"title":{},"body":{"components/TaskComponent.html":{}}}],["declared",{"_index":775,"title":{},"body":{"components/TaskComponent.html":{}}}],["decorator",{"_index":785,"title":{},"body":{"components/TaskComponent.html":{}}}],["default",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["delete",{"_index":877,"title":{},"body":{"components/TaskComponent.html":{}}}],["deletes",{"_index":878,"title":{},"body":{"components/TaskComponent.html":{}}}],["delivers",{"_index":782,"title":{},"body":{"components/TaskComponent.html":{}}}],["dependencies",{"_index":774,"title":{"dependencies.html":{}},"body":{"components/TaskComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dependency",{"_index":770,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["depending",{"_index":1037,"title":{},"body":{"components/TasksComponent.html":{}}}],["desc",{"_index":1041,"title":{},"body":{"components/TasksComponent.html":{}}}],["descending",{"_index":1053,"title":{},"body":{"components/TasksComponent.html":{}}}],["describes",{"_index":345,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["design",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destroref",{"_index":178,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TasksComponent.html":{}}}],["destrotref",{"_index":582,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["destroyref",{"_index":206,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["detailed",{"_index":1192,"title":{},"body":{"index.html":{}}}],["determines",{"_index":891,"title":{},"body":{"components/TaskComponent.html":{}}}],["development",{"_index":1146,"title":{},"body":{"index.html":{}}}],["dialogel",{"_index":444,"title":{},"body":{"components/ModalComponent.html":{}}}],["dinamically",{"_index":1016,"title":{},"body":{"components/TasksComponent.html":{}}}],["directive",{"_index":101,"title":{"directives/AuthDirective.html":{},"directives/SafeLinkDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["directives",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directives/auth/auth.directive",{"_index":695,"title":{},"body":{"components/TaskComponent.html":{}}}],["directives/safe",{"_index":696,"title":{},"body":{"components/TaskComponent.html":{}}}],["directly",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directory",{"_index":1170,"title":{},"body":{"index.html":{}}}],["displaying",{"_index":908,"title":{},"body":{"components/TaskComponent.html":{}}}],["dist",{"_index":1169,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":518,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":513,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["duedate",{"_index":519,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["dummy_lessons",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dummy_lessons.find(lesson",{"_index":1048,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["dummy_tasks",{"_index":939,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dummycanmatch",{"_index":1112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1184,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1186,"title":{},"body":{"index.html":{}}}],["each",{"_index":799,"title":{},"body":{"components/TaskComponent.html":{}}}],["edit",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["effect",{"_index":157,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["elementref",{"_index":449,"title":{},"body":{"components/ModalComponent.html":{},"directives/SafeLinkDirective.html":{}}}],["elements",{"_index":747,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":294,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["emailisunique",{"_index":589,"title":{},"body":{"components/SimpleFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emailisunique(control",{"_index":602,"title":{},"body":{"components/SimpleFormComponent.html":{},"miscellaneous/functions.html":{}}}],["emailisvalid",{"_index":583,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["employee",{"_index":348,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["end",{"_index":1183,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":242,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["enter",{"_index":634,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["entereddate",{"_index":477,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["enteredsummary",{"_index":478,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["enteredtitle",{"_index":479,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["entire",{"_index":794,"title":{},"body":{"components/TaskComponent.html":{}}}],["envinjector",{"_index":179,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["environmentinjector",{"_index":208,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["err",{"_index":262,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["error",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["error/components/error/error",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"coverage.html":{}}}],["error/components/modal/modal.component.ts",{"_index":442,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["error/components/modal/modal.component.ts:11",{"_index":448,"title":{},"body":{"components/ModalComponent.html":{}}}],["error/components/modal/modal.component.ts:13",{"_index":446,"title":{},"body":{"components/ModalComponent.html":{}}}],["error/service/error.service",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["error/service/error.service.ts",{"_index":378,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["error/service/error.service.ts:10",{"_index":384,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error/service/error.service.ts:11",{"_index":382,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error/service/error.service.ts:7",{"_index":385,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error/service/error.service.ts:8",{"_index":387,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errormodalcomponent",{"_index":21,"title":{"components/ErrorModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["errorservice",{"_index":30,"title":{"injectables/ErrorService.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["estructural",{"_index":161,"title":{},"body":{"directives/AuthDirective.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{}}}],["etc",{"_index":812,"title":{},"body":{"components/TaskComponent.html":{}}}],["evaluated",{"_index":888,"title":{},"body":{"components/TaskComponent.html":{}}}],["even",{"_index":795,"title":{},"body":{"components/TaskComponent.html":{}}}],["event",{"_index":562,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["event.target",{"_index":576,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["event?.preventdefault",{"_index":579,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["eventcoalescing",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":831,"title":{},"body":{"components/TaskComponent.html":{}}}],["example",{"_index":708,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["examples",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1177,"title":{},"body":{"index.html":{}}}],["executed",{"_index":989,"title":{},"body":{"components/TasksComponent.html":{}}}],["executions",{"_index":1072,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["existing",{"_index":870,"title":{},"body":{"components/TaskComponent.html":{}}}],["exit",{"_index":899,"title":{},"body":{"components/TaskComponent.html":{}}}],["export",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["exposedmodule",{"_index":238,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["expresion",{"_index":737,"title":{},"body":{"components/TaskComponent.html":{}}}],["external",{"_index":843,"title":{},"body":{"components/TaskComponent.html":{}}}],["f",{"_index":1083,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["factories",{"_index":825,"title":{},"body":{"components/TaskComponent.html":{}}}],["fah",{"_index":1061,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["false",{"_index":1066,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["favorite",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["favoriteplacescomponent",{"_index":114,"title":{"components/FavoritePlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["fields",{"_index":876,"title":{},"body":{"components/TaskComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{}}}],["files",{"_index":1156,"title":{},"body":{"index.html":{}}}],["filter",{"_index":974,"title":{},"body":{"components/TasksComponent.html":{}}}],["filtered",{"_index":999,"title":{},"body":{"components/TasksComponent.html":{}}}],["filteredtasks",{"_index":994,"title":{},"body":{"components/TasksComponent.html":{}}}],["filteredtasks.sort((a",{"_index":1000,"title":{},"body":{"components/TasksComponent.html":{}}}],["filtering",{"_index":1014,"title":{},"body":{"components/TasksComponent.html":{}}}],["find",{"_index":350,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["first",{"_index":340,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TasksComponent.html":{}}}],["firstname",{"_index":304,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["following",{"_index":1180,"title":{},"body":{"index.html":{}}}],["forces",{"_index":988,"title":{},"body":{"components/TasksComponent.html":{}}}],["form",{"_index":285,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["form'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["form.component",{"_index":702,"title":{},"body":{"components/TaskComponent.html":{}}}],["form.component.html",{"_index":287,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["form.component.scss",{"_index":288,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["form.component.ts",{"_index":284,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["form.component.ts:21",{"_index":316,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["form.component.ts:30",{"_index":587,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:32",{"_index":591,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:42",{"_index":593,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:44",{"_index":292,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["form.component.ts:46",{"_index":595,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:50",{"_index":585,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:51",{"_index":291,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["form.component.ts:62",{"_index":586,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.invalid",{"_index":329,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["form.touched",{"_index":330,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["form/complex",{"_index":283,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["form/simple",{"_index":581,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formarray",{"_index":313,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["format",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":295,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["formcontrol('student",{"_index":312,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["formcontrol(false",{"_index":314,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["formgroup",{"_index":293,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["forms",{"_index":599,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["forms/complex",{"_index":282,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["forms/simple",{"_index":580,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":474,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["formsubscription",{"_index":627,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["formsubscription.unsubscribe",{"_index":632,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["formvalue",{"_index":624,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["found",{"_index":276,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["found.component.html",{"_index":523,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":524,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":522,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found/not",{"_index":521,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["founder",{"_index":349,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["framework",{"_index":414,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["friend",{"_index":353,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["function",{"_index":319,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1137,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1161,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1143,"title":{},"body":{"index.html":{}}}],["getemailisvalid",{"_index":592,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["getlessontasks",{"_index":916,"title":{},"body":{"injectables/TaskService.html":{}}}],["getlessontasks(lessonid",{"_index":924,"title":{},"body":{"injectables/TaskService.html":{}}}],["getpasswordisvalid",{"_index":594,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["getselectedlesson",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["getting",{"_index":1140,"title":{"index.html":{}},"body":{}}],["global",{"_index":789,"title":{},"body":{"components/TaskComponent.html":{}}}],["google",{"_index":351,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["great",{"_index":829,"title":{},"body":{"components/TaskComponent.html":{}}}],["guard",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["guards",{"_index":883,"title":{},"body":{"components/TaskComponent.html":{}}}],["having",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":408,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["header.component.html",{"_index":409,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":410,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":19,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["helpbuilding",{"_index":1164,"title":{},"body":{"index.html":{}}}],["here",{"_index":986,"title":{},"body":{"components/TasksComponent.html":{}}}],["host",{"_index":225,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"directives/SafeLinkDirective.html":{}}}],["host/placesservice",{"_index":216,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["hostdirectives",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{}}}],["hostelementref",{"_index":556,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["hostservicemodule",{"_index":232,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["htmlanchorelement).href",{"_index":577,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["http",{"_index":464,"title":{},"body":{"components/NewRequestComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1154,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/remoteentry.js",{"_index":237,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["http://localhost:4201",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lesson.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":532,"title":{},"body":{"interfaces/Place.html":{}}}],["imagepath",{"_index":424,"title":{},"body":{"components/LessonComponent.html":{}}}],["images",{"_index":881,"title":{},"body":{"components/TaskComponent.html":{}}}],["implementation",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":174,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/ModalComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["in_progress",{"_index":517,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inbuild",{"_index":763,"title":{},"body":{"components/TaskComponent.html":{}}}],["includes",{"_index":1158,"title":{},"body":{"index.html":{}}}],["including",{"_index":1191,"title":{},"body":{"index.html":{}}}],["increment",{"_index":839,"title":{},"body":{"components/TaskComponent.html":{}}}],["index",{"_index":27,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["information",{"_index":848,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":607,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["initialemailvalue",{"_index":612,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["initialvalue",{"_index":675,"title":{},"body":{"components/TaskComponent.html":{}}}],["inject",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["inject(activatedroute",{"_index":489,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["inject(destroyref",{"_index":192,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["inject(environmentinjector",{"_index":194,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["inject(errorservice",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["inject(router",{"_index":491,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(taskservice",{"_index":152,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["inject(templateref",{"_index":154,"title":{},"body":{"directives/AuthDirective.html":{}}}],["inject(viewcontainerref",{"_index":156,"title":{},"body":{"directives/AuthDirective.html":{}}}],["inject>(elementref",{"_index":563,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["injectable",{"_index":376,"title":{"injectables/ErrorService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/ErrorService.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":940,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectables",{"_index":377,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["injected",{"_index":788,"title":{},"body":{"components/TaskComponent.html":{}}}],["injecting",{"_index":819,"title":{},"body":{"components/TaskComponent.html":{}}}],["injection",{"_index":771,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":772,"title":{},"body":{"components/TaskComponent.html":{}}}],["injector.create",{"_index":817,"title":{},"body":{"components/TaskComponent.html":{}}}],["input",{"_index":158,"title":{},"body":{"directives/AuthDirective.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["input.required",{"_index":439,"title":{},"body":{"components/LessonComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{}}}],["input.required({alias",{"_index":150,"title":{},"body":{"directives/AuthDirective.html":{}}}],["inputs",{"_index":367,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{}}}],["inputtype",{"_index":1059,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["instance",{"_index":227,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["instanceof",{"_index":1028,"title":{},"body":{"components/TasksComponent.html":{}}}],["instances",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instancetype",{"_index":203,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["instead",{"_index":709,"title":{},"body":{"components/TaskComponent.html":{}}}],["interceptor/remote",{"_index":1115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":416,"title":{"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{}},"body":{"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"coverage.html":{}}}],["interfaces",{"_index":417,"title":{},"body":{"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"overview.html":{}}}],["interop",{"_index":701,"title":{},"body":{"components/TaskComponent.html":{}}}],["interpolation",{"_index":735,"title":{},"body":{"components/TaskComponent.html":{}}}],["interval",{"_index":644,"title":{},"body":{"components/TaskComponent.html":{}}}],["interval(1000",{"_index":672,"title":{},"body":{"components/TaskComponent.html":{}}}],["intervalsignal",{"_index":645,"title":{},"body":{"components/TaskComponent.html":{}}}],["invalid",{"_index":331,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["isaddingrequest",{"_index":646,"title":{},"body":{"components/TaskComponent.html":{}}}],["isfetching",{"_index":180,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["isnewroute",{"_index":1026,"title":{},"body":{"components/TasksComponent.html":{}}}],["isnewtask",{"_index":965,"title":{},"body":{"components/TasksComponent.html":{}}}],["isolating",{"_index":802,"title":{},"body":{"components/TaskComponent.html":{}}}],["isshowingcomplexform",{"_index":647,"title":{},"body":{"components/TaskComponent.html":{}}}],["isshowingsimpleform",{"_index":648,"title":{},"body":{"components/TaskComponent.html":{}}}],["json.parse(savedform).email",{"_index":615,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["json.stringify(this.tasks",{"_index":944,"title":{},"body":{"injectables/TaskService.html":{}}}],["json.stringify(val",{"_index":630,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["karma",{"_index":1178,"title":{},"body":{"index.html":{}}}],["knowledge",{"_index":411,"title":{},"body":{"components/HeaderComponent.html":{}}}],["l1",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l2",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l3",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l4",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l5",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l6",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l7",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l8",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":341,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["lastname",{"_index":305,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["lat",{"_index":533,"title":{},"body":{"interfaces/Place.html":{}}}],["lazy",{"_index":800,"title":{},"body":{"components/TaskComponent.html":{}}}],["learn",{"_index":879,"title":{},"body":{"components/TaskComponent.html":{}}}],["leave",{"_index":574,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["lesson",{"_index":87,"title":{"interfaces/Lesson.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"coverage.html":{}}}],["lesson'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["lesson().name",{"_index":441,"title":{},"body":{"components/LessonComponent.html":{}}}],["lesson.component.html",{"_index":422,"title":{},"body":{"components/LessonComponent.html":{}}}],["lesson.component.scss",{"_index":423,"title":{},"body":{"components/LessonComponent.html":{}}}],["lesson.id",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["lesson.model",{"_index":437,"title":{},"body":{"components/LessonComponent.html":{}}}],["lessoncomponent",{"_index":20,"title":{"components/LessonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["lessonid",{"_index":480,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["lessonid)?.name",{"_index":1049,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["lessonname",{"_index":966,"title":{},"body":{"components/TasksComponent.html":{}}}],["lessons",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["level",{"_index":413,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskComponent.html":{}}}],["life",{"_index":609,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["link",{"_index":761,"title":{},"body":{"components/TaskComponent.html":{}}}],["link.directive",{"_index":697,"title":{},"body":{"components/TaskComponent.html":{}}}],["link.directive.ts",{"_index":555,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{}}}],["link.directive.ts:11",{"_index":567,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["link.directive.ts:12",{"_index":564,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["link.directive.ts:14",{"_index":561,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["link/safe",{"_index":554,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"coverage.html":{}}}],["list",{"_index":859,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["literal",{"_index":535,"title":{},"body":{"interfaces/Place.html":{},"miscellaneous/variables.html":{}}}],["little",{"_index":336,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["load",{"_index":223,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["loaded",{"_index":264,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["loading",{"_index":271,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["loadremotemodule",{"_index":229,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1148,"title":{},"body":{"index.html":{}}}],["localerror",{"_index":181,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["localstorage",{"_index":623,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["localstorage.getitem('form",{"_index":614,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["localstorage.getitem('tasks",{"_index":941,"title":{},"body":{"injectables/TaskService.html":{}}}],["localstorage.setitem('form",{"_index":629,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["localstorage.setitem('tasks",{"_index":943,"title":{},"body":{"injectables/TaskService.html":{}}}],["localy",{"_index":240,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["logic",{"_index":756,"title":{},"body":{"components/TaskComponent.html":{}}}],["login",{"_index":633,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["logo.png",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lon",{"_index":534,"title":{},"body":{"interfaces/Place.html":{}}}],["looks",{"_index":779,"title":{},"body":{"components/TaskComponent.html":{}}}],["main",{"_index":530,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["manages",{"_index":773,"title":{},"body":{"components/TaskComponent.html":{}}}],["managind",{"_index":834,"title":{},"body":{"components/TaskComponent.html":{}}}],["managing",{"_index":830,"title":{},"body":{"components/TaskComponent.html":{}}}],["manual",{"_index":818,"title":{},"body":{"components/TaskComponent.html":{}}}],["many",{"_index":1071,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["mark",{"_index":639,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["marked",{"_index":783,"title":{},"body":{"components/TaskComponent.html":{}}}],["match.guard.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["match/dummy",{"_index":1110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mecanism",{"_index":1070,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["mechanism",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":364,"title":{},"body":{"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{}}}],["met",{"_index":904,"title":{},"body":{"components/TaskComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["method",{"_index":165,"title":{},"body":{"directives/AuthDirective.html":{},"injectables/TaskService.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["mfangular19",{"_index":1141,"title":{},"body":{"index.html":{}}}],["mfwrapperfortesting",{"_index":209,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mfwrapperfortesting.loadremotemodule",{"_index":234,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["miscellaneous",{"_index":1136,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":361,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["modal.component",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["modal.component.html",{"_index":362,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":363,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/ModalComponent.html":{}}}],["modal.component.ts",{"_index":360,"title":{},"body":{"components/ErrorModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:13",{"_index":369,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts:14",{"_index":368,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts:15",{"_index":371,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts:17",{"_index":370,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal/modal.component",{"_index":372,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modalcomponent",{"_index":118,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["model",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":745,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modifying",{"_index":752,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":235,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["modules",{"_index":804,"title":{"modules.html":{}},"body":{"components/TaskComponent.html":{},"modules.html":{}}}],["more",{"_index":880,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["mouseevent",{"_index":560,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["multiple",{"_index":797,"title":{},"body":{"components/TaskComponent.html":{}}}],["mustcontainquestionmark",{"_index":590,"title":{},"body":{"components/SimpleFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustcontainquestionmark(control",{"_index":600,"title":{},"body":{"components/SimpleFormComponent.html":{},"miscellaneous/functions.html":{}}}],["mustmatch",{"_index":303,"title":{},"body":{"components/ComplexFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatch(control",{"_index":320,"title":{},"body":{"components/ComplexFormComponent.html":{},"miscellaneous/functions.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":764,"title":{},"body":{"components/TaskComponent.html":{}}}],["namefor",{"_index":1162,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":1153,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":1010,"title":{},"body":{"components/TasksComponent.html":{}}}],["navigationend)).subscribe",{"_index":1029,"title":{},"body":{"components/TasksComponent.html":{}}}],["necessary",{"_index":781,"title":{},"body":{"components/TaskComponent.html":{}}}],["need",{"_index":335,"title":{},"body":{"components/ComplexFormComponent.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":705,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["needs",{"_index":777,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["new",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newreq",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newrequestcomponent",{"_index":119,"title":{"components/NewRequestComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["newstatus",{"_index":717,"title":{},"body":{"components/TaskComponent.html":{},"injectables/TaskService.html":{}}}],["newtask",{"_index":947,"title":{},"body":{"injectables/TaskService.html":{}}}],["newtaskcomponent",{"_index":122,"title":{"components/NewTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newtaskdata",{"_index":514,"title":{"interfaces/NewTaskData.html":{}},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["next",{"_index":254,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["next(newreq",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":1150,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":445,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngmodel",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodel)]=\"username",{"_index":743,"title":{},"body":{"components/TaskComponent.html":{}}}],["ngoninit",{"_index":185,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["ngsubmit",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundcomponent",{"_index":124,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["notunique",{"_index":606,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["null",{"_index":325,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["number",{"_index":308,"title":{},"body":{"components/ComplexFormComponent.html":{},"interfaces/Place.html":{},"pipes/TemperaturePipe.html":{}}}],["object",{"_index":872,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":713,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":827,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["obtain",{"_index":907,"title":{},"body":{"components/TaskComponent.html":{}}}],["obtains",{"_index":856,"title":{},"body":{"components/TaskComponent.html":{}}}],["of(null",{"_index":605,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["okay",{"_index":375,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["oldtasks",{"_index":954,"title":{},"body":{"injectables/TaskService.html":{}}}],["oldtasks.map",{"_index":958,"title":{},"body":{"injectables/TaskService.html":{}}}],["oncancel",{"_index":458,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["onchangetasksfilter",{"_index":970,"title":{},"body":{"components/TasksComponent.html":{}}}],["onchangetasksfilter(filter",{"_index":972,"title":{},"body":{"components/TasksComponent.html":{}}}],["onchangetaskstatus",{"_index":650,"title":{},"body":{"components/TaskComponent.html":{}}}],["onchangetaskstatus(taskid",{"_index":659,"title":{},"body":{"components/TaskComponent.html":{}}}],["onclearerror",{"_index":366,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["onclickobservable",{"_index":651,"title":{},"body":{"components/TaskComponent.html":{}}}],["oncloseaddrequest",{"_index":652,"title":{},"body":{"components/TaskComponent.html":{}}}],["oncompletetask",{"_index":653,"title":{},"body":{"components/TaskComponent.html":{}}}],["onconfirmleavepage",{"_index":558,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["onconfirmleavepage($event",{"_index":569,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["onconfirmleavepage(event",{"_index":559,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["one",{"_index":734,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["oninit",{"_index":175,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["onremoveplace",{"_index":393,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["onremoveplace(selectedplace",{"_index":394,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["onreset",{"_index":289,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["onselectlesson",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/LessonComponent.html":{}}}],["onselectlesson(id",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["onselectplace",{"_index":186,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["onselectplace(place",{"_index":541,"title":{},"body":{"components/PlacesComponent.html":{}}}],["onselectplace(selectedplace",{"_index":188,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["onshowcomplexform",{"_index":654,"title":{},"body":{"components/TaskComponent.html":{}}}],["onshowsimpleform",{"_index":655,"title":{},"body":{"components/TaskComponent.html":{}}}],["onstartaddrequest",{"_index":656,"title":{},"body":{"components/TaskComponent.html":{}}}],["onsubmit",{"_index":290,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{}}}],["open",{"_index":506,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["optimizes",{"_index":1172,"title":{},"body":{"index.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["output",{"_index":436,"title":{},"body":{"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{}}}],["outputs",{"_index":426,"title":{},"body":{"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{}}}],["outputtemp",{"_index":1077,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["outputtemp.tofixed(2",{"_index":1084,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["outputtype",{"_index":1062,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["outside",{"_index":608,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["overview",{"_index":1194,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1125,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":526,"title":{},"body":{"components/NotFoundComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["page.guard.ts",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["page/can",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":1034,"title":{},"body":{"components/TasksComponent.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1019,"title":{},"body":{"components/TasksComponent.html":{}}}],["params.get('lessonid",{"_index":1021,"title":{},"body":{"components/TasksComponent.html":{}}}],["params.get('sort",{"_index":1040,"title":{},"body":{"components/TasksComponent.html":{}}}],["paramsinheritancestrategy",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parentparams",{"_index":495,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["parentparams?.get('lessonid",{"_index":497,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["parsefloat(value",{"_index":1076,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["partially",{"_index":874,"title":{},"body":{"components/TaskComponent.html":{}}}],["password",{"_index":300,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["password?.value",{"_index":323,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["passwordisvalid",{"_index":584,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["passwords",{"_index":299,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["patch",{"_index":873,"title":{},"body":{"components/TaskComponent.html":{}}}],["pattern",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":1173,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":897,"title":{},"body":{"components/TaskComponent.html":{}}}],["personal",{"_index":466,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["pipe",{"_index":694,"title":{"pipes/TemperaturePipe.html":{}},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":703,"title":{},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pipes/temperature/temperature.pipe",{"_index":692,"title":{},"body":{"components/TaskComponent.html":{}}}],["pipetransform",{"_index":1065,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["place",{"_index":189,"title":{"interfaces/Place.html":{}},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"coverage.html":{}}}],["place.id",{"_index":545,"title":{},"body":{"components/PlacesComponent.html":{}}}],["place.model",{"_index":217,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["place.title",{"_index":546,"title":{},"body":{"components/PlacesComponent.html":{}}}],["placepicker",{"_index":463,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["places",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["places'},{'name",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["places()!.length",{"_index":406,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places()?.length",{"_index":273,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component",{"_index":461,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["places.component.html",{"_index":176,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["places.component.scss",{"_index":177,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["places.component.ts",{"_index":173,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["places.component.ts:17",{"_index":396,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:18",{"_index":202,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:19",{"_index":198,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:20",{"_index":200,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component.ts:21",{"_index":196,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:22",{"_index":205,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:24",{"_index":204,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:25",{"_index":195,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:26",{"_index":193,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:28",{"_index":187,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:56",{"_index":190,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component.ts:58",{"_index":395,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places/available",{"_index":172,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/NewRequestComponent.html":{},"coverage.html":{}}}],["places/favorite",{"_index":392,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"components/NewRequestComponent.html":{},"coverage.html":{}}}],["places/places.component",{"_index":218,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["placescomponent",{"_index":126,"title":{"components/PlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["placescontainercomponent",{"_index":127,"title":{"components/PlacesContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["placesservice",{"_index":182,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["platform",{"_index":792,"title":{},"body":{"components/TaskComponent.html":{}}}],["please",{"_index":269,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["post",{"_index":862,"title":{},"body":{"components/TaskComponent.html":{}}}],["postal",{"_index":342,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["postalcode",{"_index":309,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["powerful",{"_index":1159,"title":{},"body":{"index.html":{}}}],["practical",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevcount",{"_index":715,"title":{},"body":{"components/TaskComponent.html":{}}}],["prevents",{"_index":903,"title":{},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["private",{"_index":144,"title":{},"body":{"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["production",{"_index":1171,"title":{},"body":{"index.html":{}}}],["products",{"_index":861,"title":{},"body":{"components/TaskComponent.html":{}}}],["progress",{"_index":719,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["project",{"_index":1142,"title":{},"body":{"index.html":{}}}],["properties",{"_index":28,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"properties.html":{}}}],["property",{"_index":738,"title":{},"body":{"components/TaskComponent.html":{}}}],["protecting",{"_index":892,"title":{},"body":{"components/TaskComponent.html":{}}}],["provide",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":388,"title":{},"body":{"injectables/ErrorService.html":{},"components/TaskComponent.html":{}}}],["providehttpclient(withinterceptors([remotea19interceptor",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":815,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["providers.if",{"_index":776,"title":{},"body":{"components/TaskComponent.html":{}}}],["providezonechangedetection",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pure",{"_index":1056,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["put",{"_index":867,"title":{},"body":{"components/TaskComponent.html":{}}}],["query",{"_index":1035,"title":{},"body":{"components/TasksComponent.html":{}}}],["queryparan",{"_index":990,"title":{},"body":{"components/TasksComponent.html":{}}}],["question",{"_index":638,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["reactive",{"_index":598,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["reactiveformsmodule",{"_index":286,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["read",{"_index":858,"title":{},"body":{"components/TaskComponent.html":{}}}],["real",{"_index":399,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["realloadremotemodule",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["receive",{"_index":846,"title":{},"body":{"components/TaskComponent.html":{}}}],["redirectcommand(router.parseurl('/a19",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":1195,"title":{},"body":{"index.html":{}}}],["references",{"_index":1193,"title":{},"body":{"index.html":{}}}],["referred",{"_index":352,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["registering",{"_index":865,"title":{},"body":{"components/TaskComponent.html":{}}}],["relativeto",{"_index":509,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["reload",{"_index":1155,"title":{},"body":{"index.html":{}}}],["remote",{"_index":245,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["remotea19interceptor",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteentry",{"_index":236,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["remoteentry.js",{"_index":230,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["remoteservicesregistry",{"_index":213,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteservicesregistry.placesservice",{"_index":246,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["removetask",{"_index":917,"title":{},"body":{"injectables/TaskService.html":{}}}],["removetask(id",{"_index":926,"title":{},"body":{"injectables/TaskService.html":{}}}],["removing",{"_index":405,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["render",{"_index":1024,"title":{},"body":{"components/TasksComponent.html":{}}}],["rendercondition",{"_index":143,"title":{},"body":{"directives/AuthDirective.html":{}}}],["rendering",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":869,"title":{},"body":{"components/TaskComponent.html":{}}}],["req",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.startswith('http",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":454,"title":{},"body":{"components/NewRequestComponent.html":{},"components/TaskComponent.html":{}}}],["request'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["request.component",{"_index":691,"title":{},"body":{"components/TaskComponent.html":{}}}],["request.component.html",{"_index":455,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request.component.scss",{"_index":456,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request.component.ts",{"_index":453,"title":{},"body":{"components/NewRequestComponent.html":{},"coverage.html":{}}}],["request.component.ts:13",{"_index":459,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request.component.ts:15",{"_index":460,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request/available",{"_index":171,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"coverage.html":{}}}],["request/favorite",{"_index":391,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["request/new",{"_index":452,"title":{},"body":{"components/NewRequestComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{}}}],["request/place.model.ts",{"_index":531,"title":{},"body":{"interfaces/Place.html":{},"coverage.html":{}}}],["request/places",{"_index":547,"title":{},"body":{"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["request/places/places.component.ts",{"_index":538,"title":{},"body":{"components/PlacesComponent.html":{},"coverage.html":{}}}],["request/places/places.component.ts:12",{"_index":543,"title":{},"body":{"components/PlacesComponent.html":{}}}],["request/places/places.component.ts:13",{"_index":540,"title":{},"body":{"components/PlacesComponent.html":{}}}],["request/places/places.component.ts:15",{"_index":542,"title":{},"body":{"components/PlacesComponent.html":{}}}],["requested",{"_index":528,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["requests",{"_index":706,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":427,"title":{},"body":{"components/LessonComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":356,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{}}}],["resolve",{"_index":807,"title":{},"body":{"components/TaskComponent.html":{}}}],["resolvefn",{"_index":1011,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["resolvelessonname",{"_index":1045,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvelessonname(activatedroute",{"_index":1051,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["resolvetitle",{"_index":1050,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource",{"_index":871,"title":{},"body":{"components/TaskComponent.html":{}}}],["resources",{"_index":864,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["rest",{"_index":849,"title":{},"body":{"components/TaskComponent.html":{}}}],["results",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":847,"title":{},"body":{"components/TaskComponent.html":{}}}],["return",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ComplexFormComponent.html":{},"components/LessonComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["role",{"_index":311,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["route",{"_index":481,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["routeparam",{"_index":557,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["router",{"_index":482,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["routerlink",{"_index":420,"title":{},"body":{"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["routerlinkactive",{"_index":421,"title":{},"body":{"components/LessonComponent.html":{}}}],["routeroutlet",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/TasksComponent.html":{}}}],["routerstate",{"_index":1046,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":1012,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":882,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1149,"title":{},"body":{"index.html":{}}}],["runininjectioncontext",{"_index":207,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["runininjectioncontext(this.envinjector",{"_index":241,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["runner",{"_index":1179,"title":{},"body":{"index.html":{}}}],["running",{"_index":1152,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":224,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["rxjs",{"_index":597,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rxjs.png",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s",{"_index":1052,"title":{},"body":{"components/TasksComponent.html":{}}}],["safelinkdirective",{"_index":136,"title":{"directives/SafeLinkDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["same",{"_index":243,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["savedform",{"_index":613,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["savetasks",{"_index":918,"title":{},"body":{"injectables/TaskService.html":{}}}],["saving",{"_index":852,"title":{},"body":{"components/TaskComponent.html":{}}}],["scaffolding",{"_index":1157,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1163,"title":{},"body":{"index.html":{}}}],["scope",{"_index":787,"title":{},"body":{"components/TaskComponent.html":{}}}],["security",{"_index":1068,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["see",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["segments",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/LessonComponent.html":{}}}],["selected",{"_index":425,"title":{},"body":{"components/LessonComponent.html":{}}}],["selectedfilter",{"_index":967,"title":{},"body":{"components/TasksComponent.html":{}}}],["selectedlesson",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedlessonid",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedlessontasks",{"_index":968,"title":{},"body":{"components/TasksComponent.html":{}}}],["selectedplace",{"_index":191,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["selectplace",{"_index":539,"title":{},"body":{"components/PlacesComponent.html":{}}}],["self",{"_index":162,"title":{},"body":{"directives/AuthDirective.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["send",{"_index":845,"title":{},"body":{"components/TaskComponent.html":{}}}],["sends",{"_index":863,"title":{},"body":{"components/TaskComponent.html":{}}}],["senior",{"_index":412,"title":{},"body":{"components/HeaderComponent.html":{}}}],["serveonce",{"_index":1151,"title":{},"body":{"index.html":{}}}],["server",{"_index":857,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["servers",{"_index":844,"title":{},"body":{"components/TaskComponent.html":{}}}],["service",{"_index":226,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["service/error.service",{"_index":373,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["serviceerror",{"_index":183,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["services",{"_index":803,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["services.registry",{"_index":215,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["services.registry.ts",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/tasks/tasks.service",{"_index":160,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["shared/card/card.component",{"_index":438,"title":{},"body":{"components/LessonComponent.html":{},"components/TaskComponent.html":{}}}],["shared/mf",{"_index":210,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["shared/modal",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["shared/remote",{"_index":214,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["shouldgetaccess",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["show",{"_index":707,"title":{},"body":{"components/TaskComponent.html":{}}}],["showerror",{"_index":381,"title":{},"body":{"injectables/ErrorService.html":{}}}],["showerror(message",{"_index":383,"title":{},"body":{"injectables/ErrorService.html":{}}}],["sign",{"_index":357,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["signal",{"_index":199,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["signal('all",{"_index":983,"title":{},"body":{"components/TasksComponent.html":{}}}],["signal('desc",{"_index":1006,"title":{},"body":{"components/TasksComponent.html":{}}}],["signal('guest",{"_index":935,"title":{},"body":{"injectables/TaskService.html":{}}}],["signal(0",{"_index":668,"title":{},"body":{"components/TaskComponent.html":{}}}],["signal(39",{"_index":687,"title":{},"body":{"components/TaskComponent.html":{}}}],["signal(dummy_tasks",{"_index":936,"title":{},"body":{"injectables/TaskService.html":{}}}],["signal(false",{"_index":197,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["signal(undefined",{"_index":201,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["signals",{"_index":833,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["simple",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["simpleformcomponent",{"_index":130,"title":{"components/SimpleFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["singleton",{"_index":790,"title":{},"body":{"components/TaskComponent.html":{}}}],["site",{"_index":762,"title":{},"body":{"components/TaskComponent.html":{}}}],["skipself",{"_index":805,"title":{},"body":{"components/TaskComponent.html":{}}}],["sorry",{"_index":525,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["sort",{"_index":1033,"title":{},"body":{"components/TasksComponent.html":{}}}],["sortedtasks",{"_index":992,"title":{},"body":{"components/TasksComponent.html":{}}}],["sorting",{"_index":1015,"title":{},"body":{"components/TasksComponent.html":{}}}],["sortparam",{"_index":1039,"title":{},"body":{"components/TasksComponent.html":{}}}],["sorts",{"_index":998,"title":{},"body":{"components/TasksComponent.html":{}}}],["sortsignal",{"_index":969,"title":{},"body":{"components/TasksComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"index.html":{}}}],["special",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":1174,"title":{},"body":{"index.html":{}}}],["src",{"_index":536,"title":{},"body":{"interfaces/Place.html":{}}}],["src/.../app.config.ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../can",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../complex",{"_index":1139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../dummy",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mf",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../remote",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../simple",{"_index":1138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.model.ts",{"_index":1202,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tasks.component.ts",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/dummy",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/header/header.component.ts",{"_index":407,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/components/http",{"_index":170,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewRequestComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["src/components/lesson/lesson.component.ts",{"_index":419,"title":{},"body":{"components/LessonComponent.html":{},"coverage.html":{}}}],["src/components/lesson/lesson.component.ts:13",{"_index":428,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:14",{"_index":429,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:15",{"_index":430,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:17",{"_index":435,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:21",{"_index":431,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.model.ts",{"_index":418,"title":{},"body":{"interfaces/Lesson.html":{},"coverage.html":{}}}],["src/components/new",{"_index":470,"title":{},"body":{"components/NewTaskComponent.html":{},"coverage.html":{}}}],["src/components/not",{"_index":520,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/components/reactive",{"_index":281,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/components/task/task.component.ts",{"_index":640,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["src/components/task/task.component.ts:26",{"_index":657,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:27",{"_index":680,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:28",{"_index":686,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:42",{"_index":688,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:45",{"_index":677,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:48",{"_index":679,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:49",{"_index":678,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:52",{"_index":669,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:53",{"_index":671,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:55",{"_index":673,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:56",{"_index":676,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:58",{"_index":658,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:60",{"_index":662,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:64",{"_index":660,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:83",{"_index":664,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:87",{"_index":667,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:90",{"_index":663,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:94",{"_index":666,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:98",{"_index":665,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.model.ts",{"_index":515,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/components/tasks/tasks.component.ts",{"_index":961,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/tasks/tasks.component.ts:15",{"_index":982,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:16",{"_index":981,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:17",{"_index":1008,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:19",{"_index":979,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:20",{"_index":980,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:21",{"_index":975,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:23",{"_index":1007,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:24",{"_index":976,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:25",{"_index":978,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:27",{"_index":984,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:29",{"_index":1005,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:48",{"_index":971,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:75",{"_index":973,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/directives/auth/auth.directive.ts",{"_index":141,"title":{},"body":{"directives/AuthDirective.html":{},"coverage.html":{}}}],["src/directives/auth/auth.directive.ts:10",{"_index":151,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/auth/auth.directive.ts:11",{"_index":153,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/auth/auth.directive.ts:12",{"_index":155,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/auth/auth.directive.ts:13",{"_index":149,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/safe",{"_index":553,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{}}}],["src/guards/can",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/dummy",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interceptors/remote",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/pipes/temperature/temperature.pipe.ts",{"_index":1055,"title":{},"body":{"pipes/TemperaturePipe.html":{},"coverage.html":{}}}],["src/pipes/temperature/temperature.pipe.ts:9",{"_index":1063,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["src/services/tasks/tasks.service.ts",{"_index":913,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/services/tasks/tasks.service.ts:13",{"_index":928,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:17",{"_index":925,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:20",{"_index":923,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:32",{"_index":927,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:36",{"_index":934,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:45",{"_index":931,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:6",{"_index":937,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:7",{"_index":921,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/shared/card/card.component.ts",{"_index":277,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/shared/mf",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/modal",{"_index":359,"title":{},"body":{"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/ModalComponent.html":{},"coverage.html":{}}}],["src/shared/remote",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src]=\"imageurl",{"_index":740,"title":{},"body":{"components/TaskComponent.html":{}}}],["ssr",{"_index":611,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["start",{"_index":1147,"title":{},"body":{"index.html":{}}}],["started",{"_index":338,"title":{"index.html":{}},"body":{"components/ComplexFormComponent.html":{}}}],["statements",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":906,"title":{},"body":{"components/TaskComponent.html":{}}}],["status",{"_index":505,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":622,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["store",{"_index":1167,"title":{},"body":{"index.html":{}}}],["stream",{"_index":828,"title":{},"body":{"components/TaskComponent.html":{}}}],["streamed",{"_index":832,"title":{},"body":{"components/TaskComponent.html":{}}}],["street",{"_index":307,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["string",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorService.html":{},"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["structural",{"_index":744,"title":{},"body":{"components/TaskComponent.html":{}}}],["structure",{"_index":746,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":346,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["styles",{"_index":753,"title":{},"body":{"components/TaskComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["sub",{"_index":251,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["sub.unsubscribe",{"_index":260,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["submitting",{"_index":851,"title":{},"body":{"components/TaskComponent.html":{}}}],["subscribe",{"_index":253,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["subscription",{"_index":1044,"title":{},"body":{"components/TasksComponent.html":{}}}],["such",{"_index":751,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["suits",{"_index":1189,"title":{},"body":{"index.html":{}}}],["summary",{"_index":501,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["sure",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":681,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["symbol",{"_index":1081,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["synchronizing",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t1",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t2",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t3",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t4",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t5",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t6",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t7",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t8",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":1022,"title":{},"body":{"components/TasksComponent.html":{}}}],["task",{"_index":473,"title":{"interfaces/Task.html":{}},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["task().duedate",{"_index":730,"title":{},"body":{"components/TaskComponent.html":{}}}],["task().summary",{"_index":732,"title":{},"body":{"components/TaskComponent.html":{}}}],["task().title",{"_index":728,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.component.html",{"_index":475,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["task.component.scss",{"_index":476,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["task.component.ts",{"_index":472,"title":{},"body":{"components/NewTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:13",{"_index":484,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:14",{"_index":493,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:15",{"_index":492,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:16",{"_index":490,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:18",{"_index":488,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:19",{"_index":487,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:20",{"_index":486,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:21",{"_index":483,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:31",{"_index":485,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.date",{"_index":951,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.id",{"_index":957,"title":{},"body":{"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["task.lessonid",{"_index":946,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.model",{"_index":690,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.status",{"_index":952,"title":{},"body":{"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["task.summary",{"_index":950,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.title",{"_index":949,"title":{},"body":{"injectables/TaskService.html":{}}}],["task/new",{"_index":471,"title":{},"body":{"components/NewTaskComponent.html":{},"coverage.html":{}}}],["task/task.component",{"_index":1013,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskauthentication",{"_index":919,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskauthentication(taskcode",{"_index":929,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskcode",{"_index":932,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskcomponent",{"_index":132,"title":{"components/TaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["taskid",{"_index":661,"title":{},"body":{"components/TaskComponent.html":{},"injectables/TaskService.html":{}}}],["tasks",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["tasks.component.html",{"_index":962,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":963,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskscomponent",{"_index":133,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["taskservice",{"_index":159,"title":{"injectables/TaskService.html":{}},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["tasksservice",{"_index":145,"title":{},"body":{"directives/AuthDirective.html":{}}}],["taskstatus",{"_index":516,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["teacher",{"_index":347,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["temperature",{"_index":649,"title":{},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["temperature:'cel':'fah",{"_index":767,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperature:'fah':'cel",{"_index":768,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperature:\\'cel\\':\\'fah",{"_index":911,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperature:\\'fah\\':\\'cel",{"_index":912,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperaturepipe",{"_index":642,"title":{"pipes/TemperaturePipe.html":{}},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["template.html",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateref",{"_index":146,"title":{},"body":{"directives/AuthDirective.html":{}}}],["templates",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["terms",{"_index":315,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["test",{"_index":212,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"index.html":{}}}],["test.ts",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test@example.com",{"_index":604,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["testing",{"_index":1185,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1182,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1176,"title":{},"body":{"index.html":{}}}],["this._error.asreadonly",{"_index":386,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._error.set",{"_index":390,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._error.set(message",{"_index":389,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.activatedroute.data.subscribe(data",{"_index":1017,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.activepermission.set('fede",{"_index":959,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.activepermission.set('guest",{"_index":960,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.clickcount.update(prevcount",{"_index":714,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.close.emit",{"_index":462,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["this.currentchildroute",{"_index":977,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.currentchildroute.set(childpath",{"_index":1032,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.destroref.ondestroy",{"_index":259,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.destrotref.ondestroy",{"_index":631,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.dialogel().nativeelement.showmodal",{"_index":451,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.entereddate",{"_index":504,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.enteredsummary",{"_index":502,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.enteredtitle",{"_index":500,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.envinjector.get(hostservicemodule.placesservice",{"_index":247,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.errorservice.clearerror",{"_index":374,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["this.errorservice.error",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errorservice.showerror('problem",{"_index":267,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.form.controls.email.dirty",{"_index":617,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.controls.email.invalid",{"_index":618,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.controls.email.touched",{"_index":616,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.controls.password.dirty",{"_index":620,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.controls.password.invalid",{"_index":621,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.controls.password.touched",{"_index":619,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.invalid",{"_index":326,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["this.form.patchvalue(json.parse(formvalue",{"_index":626,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.reset",{"_index":328,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["this.form.setvalue(json.parse(formvalue",{"_index":625,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.valuechanges.pipe(debouncetime(500)).subscribe((val",{"_index":628,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.hostelementref.nativeelement.href",{"_index":575,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["this.isaddingrequest.set(false",{"_index":723,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isaddingrequest.set(true",{"_index":722,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isfetching.set(false",{"_index":258,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.isfetching.set(true",{"_index":221,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.isshowingcomplexform.set(false",{"_index":725,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isshowingcomplexform.set(true",{"_index":727,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isshowingsimpleform.set(false",{"_index":726,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isshowingsimpleform.set(true",{"_index":724,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.lesson().avatar",{"_index":434,"title":{},"body":{"components/LessonComponent.html":{}}}],["this.lessonid",{"_index":507,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.lessonid.set(id",{"_index":498,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.lessonname.set(data['lessonname",{"_index":1018,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.lessons.find((lesson",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localerror.set('the",{"_index":263,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.localerror.set(error.message",{"_index":256,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.places",{"_index":401,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.places.set(places",{"_index":255,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["this.placesservice",{"_index":249,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.placesservice.addplacetouserplaces(selectedplace).subscribe",{"_index":265,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["this.placesservice.loadavailableplaces",{"_index":252,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["this.placesservice.loadeduserplaces",{"_index":402,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.placesservice.loaduserplaces",{"_index":403,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.placesservice.removeuserplace(selectedplace).subscribe",{"_index":404,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.rendercondition",{"_index":167,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.route",{"_index":510,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1020,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.route.parent?.snapshot.parammap",{"_index":496,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.route.queryparammap.subscribe(params",{"_index":1038,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.route.snapshot.firstchild?.routeconfig?.path",{"_index":1031,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.routeparam",{"_index":578,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["this.router.events.pipe(filter(event",{"_index":1027,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.router.navigate",{"_index":508,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.savetasks",{"_index":955,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.select.emit(this.lesson().id",{"_index":440,"title":{},"body":{"components/LessonComponent.html":{}}}],["this.selectedfilter",{"_index":995,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.selectedfilter.set(filter",{"_index":1043,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.selectedlessonid",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectplace.emit(place",{"_index":544,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.sortsignal",{"_index":993,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.sortsignal.set(sortparam",{"_index":1042,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.task().status",{"_index":682,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.tasks().filter((task",{"_index":945,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.set(json.parse(tasks",{"_index":942,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.set(this.tasks().filter((task",{"_index":956,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.update((oldtasks",{"_index":953,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.taskservice.addtask({title",{"_index":499,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.taskservice.getlessontasks(this.lessonid",{"_index":997,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskservice.getlessontasks(this.lessonid()).filter(task",{"_index":996,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskservice.removetask(this.task().id",{"_index":721,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskservice.updatetaskstatus(taskid",{"_index":720,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.tasksservice.activepermission",{"_index":166,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.tasksservice.taskauthentication(true",{"_index":163,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.viewcontainerref.clear",{"_index":169,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.viewcontainerref.createembeddedview(this.templateref",{"_index":168,"title":{},"body":{"directives/AuthDirective.html":{}}}],["those",{"_index":895,"title":{},"body":{"components/TaskComponent.html":{}}}],["throughout",{"_index":791,"title":{},"body":{"components/TaskComponent.html":{}}}],["time",{"_index":400,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["title",{"_index":365,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesContainerComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":820,"title":{},"body":{"components/TaskComponent.html":{}}}],["toobservable",{"_index":698,"title":{},"body":{"components/TaskComponent.html":{}}}],["toobservable(this.clickcount",{"_index":670,"title":{},"body":{"components/TaskComponent.html":{}}}],["toogle",{"_index":1036,"title":{},"body":{"components/TasksComponent.html":{}}}],["tools",{"_index":1160,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tosignal",{"_index":699,"title":{},"body":{"components/TaskComponent.html":{}}}],["tosignal(this.interval",{"_index":674,"title":{},"body":{"components/TaskComponent.html":{}}}],["track",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/PlacesComponent.html":{},"components/TasksComponent.html":{}}}],["transform",{"_index":1057,"title":{},"body":{"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["transform(value",{"_index":1058,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":222,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["tslib",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["turns",{"_index":1067,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["two",{"_index":742,"title":{},"body":{"components/TaskComponent.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1200,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1075,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["types",{"_index":855,"title":{},"body":{"components/TaskComponent.html":{}}}],["typical",{"_index":900,"title":{},"body":{"components/TaskComponent.html":{}}}],["undefined",{"_index":1073,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["unfortunately",{"_index":275,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["unit",{"_index":1175,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":248,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["unsaved",{"_index":901,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":358,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{}}}],["update",{"_index":398,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["updates",{"_index":875,"title":{},"body":{"components/TaskComponent.html":{}}}],["updatetaskstatus",{"_index":920,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskstatus(taskid",{"_index":933,"title":{},"body":{"injectables/TaskService.html":{}}}],["url",{"_index":527,"title":{},"body":{"components/NotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":250,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["useclass",{"_index":824,"title":{},"body":{"components/TaskComponent.html":{}}}],["used",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{}}}],["usefactory",{"_index":826,"title":{},"body":{"components/TaskComponent.html":{}}}],["useful",{"_index":801,"title":{},"body":{"components/TaskComponent.html":{}}}],["user",{"_index":866,"title":{},"body":{"components/TaskComponent.html":{}}}],["users",{"_index":860,"title":{},"body":{"components/TaskComponent.html":{}}}],["uses",{"_index":736,"title":{},"body":{"components/TaskComponent.html":{}}}],["usevalue",{"_index":821,"title":{},"body":{"components/TaskComponent.html":{}}}],["using",{"_index":710,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["val",{"_index":1074,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["valid",{"_index":635,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["validators",{"_index":296,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["validators.email",{"_index":298,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["validators.minlength(6",{"_index":301,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["validators.required",{"_index":297,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["value",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":711,"title":{},"body":{"components/TaskComponent.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["variable",{"_index":704,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1203,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":816,"title":{},"body":{"components/TaskComponent.html":{}}}],["version",{"_index":415,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{},"properties.html":{}}}],["via",{"_index":228,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["view",{"_index":757,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":450,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewchild.required>('dialog",{"_index":447,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewcontainerref",{"_index":147,"title":{},"body":{"directives/AuthDirective.html":{}}}],["visit",{"_index":468,"title":{},"body":{"components/NewRequestComponent.html":{},"index.html":{}}}],["visited",{"_index":469,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["void",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["wait",{"_index":272,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["want",{"_index":573,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["wantstoleave",{"_index":571,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["way",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{}}}],["welcome",{"_index":333,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["whenever",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["whether",{"_index":886,"title":{},"body":{"components/TaskComponent.html":{}}}],["window.confirm('do",{"_index":572,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["withcomponentinputbinding",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withrouterconfig",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":684,"title":{},"body":{"components/TaskComponent.html":{}}}],["wrapper",{"_index":211,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["xxxx=\"ngmodel",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1064,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["zone.js",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root-angular-19\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeaderComponent\n                                LessonComponent\n                                ErrorModalComponent\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                errorService\n                            \n                            \n                                lessons\n                            \n                            \n                                    Optional\n                                selectedLessonId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedLesson\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectLesson\n                        \n                    \n                \n            \n            \n                \nonSelectLesson(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.errorService.error\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ErrorService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DUMMY_LESSONS\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedLessonId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedLesson\n                    \n                \n\n                \n                    \n                        getselectedLesson()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { DUMMY_LESSONS } from \"../assets/dummy-data\"\n\nimport { Component, inject } from '@angular/core';\nimport { HeaderComponent } from \"../components/header/header.component\";\nimport { LessonComponent } from \"../components/lesson/lesson.component\";\nimport { ErrorService } from '../shared/modal-error/service/error.service';\nimport { ErrorModalComponent } from '../shared/modal-error/components/error/error-modal.component';\nimport { RouterOutlet } from '@angular/router';\n@Component({\n  selector: 'app-root-angular-19',\n  standalone: true,\n  imports: [HeaderComponent, LessonComponent, ErrorModalComponent, RouterOutlet ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  hostDirectives: [] // Automatically applies directives from the array whenever the component is used.\n})\nexport class AppComponent {\n  lessons = DUMMY_LESSONS;\n  selectedLessonId? = '';\n  errorService = inject(ErrorService);\n  error = this.errorService.error;\n\n  get selectedLesson(): { id: string; name: string; avatar: string } {\n    return this.lessons.find((lesson) => lesson.id === this.selectedLessonId)!;\n  }\n\n  onSelectLesson(id: string) {\n    this.selectedLessonId = id;\n  }\n}\n\n    \n\n    \n        @if (error()) {\n  \n}\n\n  \n  \n    \n      Select a lesson to see their tasks, but be aware because you have a 3% chance of a cursed guard blocking your way:\n    \n    \n      @for (lesson of lessons; track lesson.id) {\n        \n          \n          \n        \n      }\n    \n    \n      @if (selectedLesson) {\n        \n      }\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (error()) {  }              Select a lesson to see their tasks, but be aware because you have a 3% chance of a cursed guard blocking your way:              @for (lesson of lessons; track lesson.id) {                                          }              @if (selectedLesson) {              }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AuthDirective.html":{"url":"directives/AuthDirective.html","title":"directive - AuthDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AuthDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/auth/auth.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appAuth]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                renderCondition\n                            \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                    Private\n                                templateRef\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/directives/auth/auth.directive.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        renderCondition\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required({alias: 'appAuth'})\n                    \n                \n                    \n                        \n                                Defined in src/directives/auth/auth.directive.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/directives/auth/auth.directive.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        templateRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TemplateRef)\n                    \n                \n                    \n                        \n                                Defined in src/directives/auth/auth.directive.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        viewContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ViewContainerRef)\n                    \n                \n                    \n                        \n                                Defined in src/directives/auth/auth.directive.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, effect, inject, input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TaskService } from '../../services/tasks/tasks.service';\n\n@Directive({\n  selector: '[appAuth]',\n  standalone: true\n})\nexport class AuthDirective { // Estructural self directive\n\n  renderCondition = input.required({alias: 'appAuth'});\n  private tasksService = inject(TaskService);\n  private templateRef =inject(TemplateRef);\n  private viewContainerRef = inject(ViewContainerRef);\n\n  constructor() {\n    this.tasksService.taskAuthentication(true); // Simple auth method\n\n    effect(() => {\n      if (this.tasksService.activePermission() === this.renderCondition()) {\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n      } else {\n        this.viewContainerRef.clear();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvailablePlacesComponent.html":{"url":"components/AvailablePlacesComponent.html","title":"component - AvailablePlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvailablePlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/available-places/available-places.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-available-places\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                PlacesComponent\n                                PlacesContainerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./available-places.component.html\n            \n\n\n\n            \n                styleUrl\n                ./available-places.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroRef\n                            \n                            \n                                    Private\n                                envInjector\n                            \n                            \n                                errorService\n                            \n                            \n                                isFetching\n                            \n                            \n                                localError\n                            \n                            \n                                places\n                            \n                            \n                                    Private\n                                placesService\n                            \n                            \n                                serviceError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSelectPlace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/available-places/available-places.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectPlace\n                        \n                    \n                \n            \n            \n                \nonSelectPlace(selectedPlace: Place)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/available-places/available-places.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedPlace\n                                            \n                                                            Place\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        envInjector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EnvironmentInjector)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ErrorService)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFetching\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        places\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        placesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InstanceType<>\n\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit, signal, runInInjectionContext, EnvironmentInjector, Type } from '@angular/core';\nimport { mfWrapperForTesting } from '../../../shared/mf-wrapper-test';\nimport { RemoteServicesRegistry } from '../../../shared/remote-services.registry';\nimport type { PlacesService } from 'host/PlacesService';\nimport { Place } from '../place.model';\nimport { PlacesComponent } from '../places/places.component';\nimport { PlacesContainerComponent } from '../places-container/places-container.component';\nimport { ErrorService } from '../../../shared/modal-error/service/error.service';\n\n@Component({\n  selector: 'app-available-places',\n  standalone: true,\n  imports: [PlacesComponent, PlacesContainerComponent],\n  templateUrl: './available-places.component.html',\n  styleUrl: './available-places.component.scss'\n})\nexport class AvailablePlacesComponent implements OnInit {\n  places = signal(undefined);\n  isFetching = signal(false);\n  localError = signal('');\n  errorService = inject(ErrorService);\n  serviceError = signal('');\n\n  private placesService!: InstanceType;\n  private envInjector = inject(EnvironmentInjector);\n  private destroRef = inject(DestroyRef);\n\n  async ngOnInit() {\n    this.isFetching.set(true);\n    try {\n// -- Load in runtime the host service instance via loadRemoteModule from remoteEntry.js ------------------------------------------------\n      const hostServiceModule = await mfWrapperForTesting.loadRemoteModule(\n        { type: 'module', remoteEntry: 'http://localhost:4200/remoteEntry.js', exposedModule: './PlacesService' }\n      );\n// -- runInInjectionContext allows to instance localy the host service via EnvironmentInjector  -----------------------------------------\n      runInInjectionContext(this.envInjector, () => {\n// -- RemoteServicesRegistry ensures the same instance between components of the remote -------------------------------------------------\n        RemoteServicesRegistry.placesService ??= this.envInjector.get(hostServiceModule.PlacesService as unknown as Type);\n        this.placesService = RemoteServicesRegistry.placesService!;\n      });\n// -- Use of the host service -----------------------------------------------------------------------------------------------------------\n      const sub = this.placesService.loadAvailablePlaces()\n        .subscribe({\n          next: (places: Place[]) => this.places.set(places),\n          error: (error: Error) => { this.localError.set(error.message) },\n          complete: () => this.isFetching.set(false)\n        });\n      this.destroRef.onDestroy(() => sub.unsubscribe());\n// --------------------------------------------------------------------------------------------------------------------------------------\n    } catch (err) {\n      this.localError.set('The remote service could not be loaded.');\n      this.isFetching.set(false);\n    }\n  }\n\n  onSelectPlace(selectedPlace: Place) {\n    const sub = this.placesService.addPlaceToUserPlaces(selectedPlace).subscribe({\n      error: (error: Error) => {\n        console.error(error.message);\n        this.errorService.showError('Problem adding place, please try again.')\n      }\n    });\n    this.destroRef.onDestroy(() => sub.unsubscribe());\n  }\n}\n\n    \n\n    \n        \n  @if (localError()) {\n    {{ localError() }}\n  }\n  @if (isFetching() && !localError()) {\n    Loading the available places, please wait.\n  }\n  @if (places()) {\n    \n  } @else if (places() && places()?.length === 0) {\n    Unfortunately, no places could be found.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (localError()) {    {{ localError() }}  }  @if (isFetching() && !localError()) {    Loading the available places, please wait.  }  @if (places()) {      } @else if (places() && places()?.length === 0) {    Unfortunately, no places could be found.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AvailablePlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/card/card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  standalone: true,\n  imports: [],\n  templateUrl: './card.component.html',\n  styleUrl: './card.component.scss'\n})\nexport class CardComponent {\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComplexFormComponent.html":{"url":"components/ComplexFormComponent.html","title":"component - ComplexFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ComplexFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/reactive-forms/complex-form/complex-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-complex-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./complex-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./complex-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onReset\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/reactive-forms/complex-form/complex-form.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/reactive-forms/complex-form/complex-form.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', {validators: [Validators.required, Validators.email]}),\n    passwords: new FormGroup({\n      password: new FormControl('', {validators: [Validators.required, Validators.minLength(6)]}),\n      confirmPassword: new FormControl('', {validators: [Validators.required, Validators.minLength(6)]}),\n    }, {validators: [mustMatch]}),\n    firstName: new FormControl('', {validators: [Validators.required]}),\n    lastName: new FormControl('', {validators: [Validators.required]}),\n    address: new FormGroup({\n      street: new FormControl('', {validators: [Validators.required]}),\n      number: new FormControl('', {validators: [Validators.required]}),\n      postalCode: new FormControl('', {validators: [Validators.required]}),\n      city: new FormControl('', {validators: [Validators.required]}),\n    }),\n    role: new FormControl('student', {validators: [Validators.required]}),\n    source: new FormArray([\n      new FormControl(false),\n      new FormControl(false),\n      new FormControl(false),\n    ]),\n    terms: new FormControl(false, {validators: [Validators.required]}),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/reactive-forms/complex-form/complex-form.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AbstractControl, FormArray, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\nfunction mustMatch(control: AbstractControl) {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  if (password?.value !== confirmPassword?.value) {\n    return { mustMatch: true };\n  }\n  return null;\n}\n\n@Component({\n  selector: 'app-complex-form',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './complex-form.component.html',\n  styleUrl: './complex-form.component.scss'\n})\nexport class ComplexFormComponent {\n  form = new FormGroup({\n    email: new FormControl('', {validators: [Validators.required, Validators.email]}),\n    passwords: new FormGroup({\n      password: new FormControl('', {validators: [Validators.required, Validators.minLength(6)]}),\n      confirmPassword: new FormControl('', {validators: [Validators.required, Validators.minLength(6)]}),\n    }, {validators: [mustMatch]}),\n    firstName: new FormControl('', {validators: [Validators.required]}),\n    lastName: new FormControl('', {validators: [Validators.required]}),\n    address: new FormGroup({\n      street: new FormControl('', {validators: [Validators.required]}),\n      number: new FormControl('', {validators: [Validators.required]}),\n      postalCode: new FormControl('', {validators: [Validators.required]}),\n      city: new FormControl('', {validators: [Validators.required]}),\n    }),\n    role: new FormControl('student', {validators: [Validators.required]}),\n    source: new FormArray([\n      new FormControl(false),\n      new FormControl(false),\n      new FormControl(false),\n    ]),\n    terms: new FormControl(false, {validators: [Validators.required]}),\n  });\n\n  onSubmit() {\n    if (this.form.invalid) {\n      console.log(this.form.value);\n      return\n    }\n  };\n\n  onReset() {this.form.reset()};\n}\n\n    \n\n    \n        \n\n  @if (form.invalid && form.touched) {\n    Invalid form - please check your input data.\n  }\n\n  Welcome on board!\n  We just need a little bit of data from you to get you started 🚀\n\n  \n    Email\n    \n  \n\n  \n    \n      Password\n      \n    \n    \n      Confirm Password\n      \n    \n  \n  \n  \n    \n      \n        First Name\n        \n      \n      \n        Last Name\n        \n      \n    \n\n    \n      Your Address\n      \n        \n          Street\n          \n        \n        \n          Number\n          \n        \n      \n      \n        \n          Postal Code\n          \n        \n        \n          City\n          \n        \n      \n    \n  \n  \n  \n    \n      What best describes your role?\n      \n        Student\n        Teacher\n        Employee\n        Founder\n        Other\n      \n    \n  \n\n  \n    How did you find us?\n    \n      \n      Google\n    \n    \n      \n      Referred by friend\n    \n    \n      \n      Other\n    \n  \n\n  \n    \n      \n        \n        I agree to the terms and conditions\n      \n    \n  \n\n  \n    Reset\n    Sign up\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (form.invalid && form.touched) {    Invalid form - please check your input data.  }  Welcome on board!  We just need a little bit of data from you to get you started 🚀      Email                  Password                    Confirm Password                                  First Name                            Last Name                            Your Address                        Street                                    Number                                                Postal Code                                    City                                            What best describes your role?              Student        Teacher        Employee        Founder        Other                  How did you find us?                Google                    Referred by friend                    Other                                  I agree to the terms and conditions                  Reset    Sign up  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'ComplexFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorModalComponent.html":{"url":"components/ErrorModalComponent.html","title":"component - ErrorModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/modal-error/components/error/error-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ModalComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./error-modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./error-modal.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorService\n                            \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClearError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                        \n                            \n                                    Defined in src/shared/modal-error/components/error/error-modal.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                        \n                            \n                                    Defined in src/shared/modal-error/components/error/error-modal.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClearError\n                        \n                    \n                \n            \n            \n                \nonClearError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/components/error/error-modal.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ErrorService)\n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/components/error/error-modal.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/shared/modal-error/components/error/error-modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/shared/modal-error/components/error/error-modal.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, input } from '@angular/core';\nimport { ModalComponent } from \"../modal/modal.component\";\nimport { ErrorService } from '../../service/error.service';\n\n@Component({\n    selector: 'app-error-modal',\n    standalone: true,\n    templateUrl: './error-modal.component.html',\n    styleUrl: './error-modal.component.scss',\n    imports: [ModalComponent]\n})\nexport class ErrorModalComponent {\n  title = input();\n  message = input();\n  private errorService = inject(ErrorService);\n\n  onClearError() {\n    this.errorService.clearError();\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title() }}\n    {{ message() }}\n\n    \n      Okay\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title() }}    {{ message() }}          Okay      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/modal-error/service/error.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _error\n                            \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearError\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearError\n                        \n                    \n                \n            \n            \n                \nclearError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/service/error.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/service/error.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/service/error.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._error.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/service/error.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  private _error = signal('');\n  error = this._error.asReadonly();\n\n  showError(message: string) { this._error.set(message) };\n  clearError() { this._error.set('') };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritePlacesComponent.html":{"url":"components/FavoritePlacesComponent.html","title":"component - FavoritePlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FavoritePlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/favorite-places/favorite-places.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorite-places\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                PlacesContainerComponent\n                                PlacesComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./favorite-places.component.html\n            \n\n\n\n            \n                styleUrl\n                ./favorite-places.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroRef\n                            \n                            \n                                    Private\n                                envInjector\n                            \n                            \n                                errorService\n                            \n                            \n                                isFetching\n                            \n                            \n                                localError\n                            \n                            \n                                places\n                            \n                            \n                                    Private\n                                placesService\n                            \n                            \n                                serviceError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onRemovePlace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/favorite-places/favorite-places.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemovePlace\n                        \n                    \n                \n            \n            \n                \nonRemovePlace(selectedPlace: Place)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/favorite-places/favorite-places.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedPlace\n                                            \n                                                            Place\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        envInjector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EnvironmentInjector)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ErrorService)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFetching\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        places\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        placesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InstanceType<>\n\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit, signal, runInInjectionContext, EnvironmentInjector, Type } from '@angular/core';\nimport { mfWrapperForTesting } from '../../../shared/mf-wrapper-test';\nimport { RemoteServicesRegistry } from '../../../shared/remote-services.registry';\nimport type { PlacesService } from 'host/PlacesService';\nimport { Place } from '../place.model';\nimport { PlacesComponent } from '../places/places.component';\nimport { PlacesContainerComponent } from '../places-container/places-container.component';\nimport { ErrorService } from '../../../shared/modal-error/service/error.service';\n@Component({\n  selector: 'app-favorite-places',\n  standalone: true,\n  imports: [PlacesContainerComponent, PlacesComponent],\n  templateUrl: './favorite-places.component.html',\n  styleUrl: './favorite-places.component.scss'\n})\nexport class FavoritePlacesComponent implements OnInit {\n  localError = signal('');\n  errorService = inject(ErrorService);\n  serviceError = signal('');\n\n  places = signal(undefined);\n  isFetching = signal(false);\n\n  private placesService!: InstanceType;\n  private envInjector = inject(EnvironmentInjector);\n  private destroRef = inject(DestroyRef);\n\n  async ngOnInit() {\n    this.isFetching.set(true);\n    try {\n// -- Load in runtime the host service instance via loadRemoteModule from remoteEntry.js ------------------------------------------------\n      const hostServiceModule = await mfWrapperForTesting.loadRemoteModule(\n        { type: 'module', remoteEntry: 'http://localhost:4200/remoteEntry.js', exposedModule: './PlacesService' }\n      );\n// -- runInInjectionContext allows to instance localy the host service via EnvironmentInjector  -----------------------------------------\n      runInInjectionContext(this.envInjector, () => {\n// -- RemoteServicesRegistry ensures the same instance between components of the remote -------------------------------------------------\n        RemoteServicesRegistry.placesService ??= this.envInjector.get(hostServiceModule.PlacesService as unknown as Type);\n        this.placesService = RemoteServicesRegistry.placesService!;\n      });\n// -- With this asigment I can update in real time the places ---------------------------------------------------------------------------\n      this.places = this.placesService.loadedUserPlaces;\n// -- Use of the host service -----------------------------------------------------------------------------------------------------------\n      const sub = this.placesService.loadUserPlaces()\n        .subscribe({\n          error: (error: Error) => { this.localError.set(error.message) },\n          complete: () => { this.isFetching.set(false) }\n        });\n      this.destroRef.onDestroy(() => sub.unsubscribe());\n// --------------------------------------------------------------------------------------------------------------------------------------\n    } catch (err) {\n      this.localError.set('The remote service could not be loaded.');\n      this.isFetching.set(false);\n      RemoteServicesRegistry.placesService = null;\n    }\n  }\n\n  onRemovePlace(selectedPlace: Place) {\n    const sub = this.placesService.removeUserPlace(selectedPlace).subscribe({\n      error: (error: Error) => {\n        console.error(error.message);\n        this.errorService.showError('Problem removing place, please try again.')\n      }\n    });\n    this.destroRef.onDestroy(() => sub.unsubscribe());\n  }\n}\n\n    \n\n    \n        \n  @if (localError()) {\n    {{ localError() }}\n  }\n  @if (isFetching() && !localError()) {\n    Loading your favorite places, please wait.\n  }\n  @if (places() && places()!.length > 0) {\n    \n  } @else if (places() && places()!.length === 0 && !isFetching()) {\n    Unfortunately, no places could be found.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (localError()) {    {{ localError() }}  }  @if (isFetching() && !localError()) {    Loading your favorite places, please wait.  }  @if (places() && places()!.length > 0) {      } @else if (places() && places()!.length === 0 && !isFetching()) {    Unfortunately, no places could be found.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoritePlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n\n}\n\n    \n\n    \n        \n  \n  \n    Knowledge of Angular 19\n    \n      Senior-level knowledge with the Angular framework and version 19\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Knowledge of Angular 19          Senior-level knowledge with the Angular framework and version 19      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Lesson.html":{"url":"interfaces/Lesson.html","title":"interface - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/lesson/lesson.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Lesson {\n  id: string;\n  avatar: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LessonComponent.html":{"url":"components/LessonComponent.html","title":"component - LessonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LessonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/lesson/lesson.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lesson\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CardComponent\n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./lesson.component.html\n            \n\n\n\n            \n                styleUrl\n                ./lesson.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imagePath\n                            \n                            \n                                lesson\n                            \n                            \n                                select\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectLesson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lesson\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lesson\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/lesson/lesson.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/lesson/lesson.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        select\n                    \n                \n                        \n                            \n                                    Defined in src/components/lesson/lesson.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectLesson\n                        \n                    \n                \n            \n            \n                \nonSelectLesson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/lesson/lesson.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 'assets/mf-angular-19/' + this.lesson().avatar;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/lesson/lesson.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lesson\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/lesson/lesson.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/lesson/lesson.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/lesson/lesson.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, input, output } from '@angular/core';\nimport { type Lesson } from \"./lesson.model\";\nimport { CardComponent } from \"../../shared/card/card.component\";\nimport { RouterLink, RouterLinkActive } from '@angular/router';\n@Component({\n  selector: 'app-lesson',\n  standalone: true,\n  imports: [CardComponent, RouterLink, RouterLinkActive],\n  templateUrl: './lesson.component.html',\n  styleUrl: './lesson.component.scss'\n})\nexport class LessonComponent {\n  lesson = input.required();\n  selected = input.required();\n  select = output();\n\n  imagePath = computed(() => {\n    return 'assets/mf-angular-19/' + this.lesson().avatar;\n  });\n\n  onSelectLesson() {\n    this.select.emit(this.lesson().id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ lesson().name }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ lesson().name }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'LessonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/modal-error/components/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./modal.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dialogEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/components/modal/modal.component.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogEl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild.required>('dialog')\n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/components/modal/modal.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, viewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  standalone: true,\n  imports: [],\n  templateUrl: './modal.component.html',\n  styleUrl: './modal.component.scss'\n})\nexport class ModalComponent implements AfterViewInit {\n  private dialogEl = viewChild.required>('dialog');\n\n  ngAfterViewInit(): void {\n    this.dialogEl().nativeElement.showModal();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewRequestComponent.html":{"url":"components/NewRequestComponent.html","title":"component - NewRequestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewRequestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/new-request/new-request.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-request\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AvailablePlacesComponent\n                                FavoritePlacesComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./new-request.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-request.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                        \n                            \n                                    Defined in src/components/http-request/new-request/new-request.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/new-request/new-request.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/http-request/new-request/new-request.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, output } from '@angular/core';\nimport { AvailablePlacesComponent } from '../available-places/available-places.component';\nimport { FavoritePlacesComponent } from '../favorite-places/favorite-places.component';\n\n@Component({\n  selector: 'app-new-request',\n  standalone: true,\n  imports: [AvailablePlacesComponent, FavoritePlacesComponent],\n  templateUrl: './new-request.component.html',\n  styleUrl: './new-request.component.scss'\n})\nexport class NewRequestComponent {\n  close = output();\n\n  onCancel() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    PlacePicker\n    \n      Close HTTP request\n    \n  \n  \n    Create your personal collection of places you would like to visit or you have visited.\n  \n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      PlacePicker          Close HTTP request            Create your personal collection of places you would like to visit or you have visited.              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewRequestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewTaskComponent.html":{"url":"components/NewTaskComponent.html","title":"component - NewTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/new-task/new-task.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-task\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./new-task.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-task.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                enteredDate\n                            \n                            \n                                enteredSummary\n                            \n                            \n                                enteredTitle\n                            \n                            \n                                lessonId\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                taskService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/components/new-task/new-task.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                        \n                            \n                                    Defined in src/components/new-task/new-task.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/new-task/new-task.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enteredDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enteredSummary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enteredTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, effect, inject, output, signal } from '@angular/core';\nimport { ActivatedRoute, RouterLink, Router} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { TaskService } from '../../services/tasks/tasks.service';\n@Component({\n  selector: 'app-new-task',\n  standalone: true,\n  imports: [FormsModule, RouterLink],\n  templateUrl: './new-task.component.html',\n  styleUrl: './new-task.component.scss'\n})\nexport class NewTaskComponent {\n  close = output();\n  taskService = inject(TaskService);\n  private router = inject(Router);\n  private route = inject(ActivatedRoute);\n\n  lessonId = signal('');\n  enteredTitle = signal('');\n  enteredSummary = signal('');\n  enteredDate = signal('');\n\n  constructor() {\n    effect(() => {\n      const parentParams = this.route.parent?.snapshot.paramMap;\n      const id = parentParams?.get('lessonId');\n      if (id) this.lessonId.set(id);\n    });\n  }\n\n  onSubmit() {\n    this.taskService.addTask({title: this.enteredTitle(), summary: this.enteredSummary(), date: this.enteredDate(), status: 'OPEN'}, this.lessonId());\n    this.router.navigate(['../'], {relativeTo: this.route});\n  };\n}\n\n    \n\n    \n        \n  Add Task\n  \n    Cancel\n    Create\n  \n\n\n\n  \n    Title\n    \n  \n  \n    Summary\n    \n  \n  \n    Due Date\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add Task      Cancel    Create        Title            Summary            Due Date      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewTaskData.html":{"url":"interfaces/NewTaskData.html","title":"interface - NewTaskData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewTaskData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/task/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type TaskStatus = 'OPEN' | 'IN_PROGRESS' | 'DONE';\n\nexport interface Task {\n  id: string;\n  lessonId: string;\n  title: string;\n  summary: string;\n  dueDate: string;\n  status: string;\n}\n\nexport interface NewTaskData {\n  title: string;\n  summary: string;\n  date: string;\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss'\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n  Sorry! Page not found\n  The URL you requested could not be found.\n  Back to main page\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sorry! Page not found  The URL you requested could not be found.  Back to main page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Place.html":{"url":"interfaces/Place.html","title":"interface - Place","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Place\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/http-request/place.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lon\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Place {\n  id: string;\n  title: string;\n  image: {\n    src: string;\n    alt: string;\n  };\n  lat: number;\n  lon: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlacesComponent.html":{"url":"components/PlacesComponent.html","title":"component - PlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/places/places.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-places\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./places.component.html\n            \n\n\n\n            \n                styleUrl\n                ./places.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                places\n                            \n                            \n                                selectPlace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectPlace\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectPlace\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectPlace\n                    \n                \n                        \n                            \n                                    Defined in src/components/http-request/places/places.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectPlace\n                        \n                    \n                \n            \n            \n                \nonSelectPlace(place: Place)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/places/places.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                place\n                                            \n                                                            Place\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        places\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/places/places.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectPlace\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/http-request/places/places.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input, output } from '@angular/core';\nimport { Place } from '../place.model';\n\n@Component({\n  selector: 'app-places',\n  standalone: true,\n  imports: [],\n  templateUrl: './places.component.html',\n  styleUrl: './places.component.scss'\n})\nexport class PlacesComponent {\n  places = input.required();\n  selectPlace = output();\n\n  onSelectPlace(place: Place) {\n    this.selectPlace.emit(place);\n  }\n}\n\n    \n\n    \n        \n  @for (place of places(); track place.id) {\n    \n      \n        \n        {{ place.title }}\n      \n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (place of places(); track place.id) {                          {{ place.title }}            }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlacesContainerComponent.html":{"url":"components/PlacesContainerComponent.html","title":"component - PlacesContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlacesContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/places-container/places-container.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-places-container\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./places-container.component.html\n            \n\n\n\n            \n                styleUrl\n                ./places-container.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/http-request/places-container/places-container.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/http-request/places-container/places-container.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'app-places-container',\n  standalone: true,\n  imports: [],\n  templateUrl: './places-container.component.html',\n  styleUrl: './places-container.component.scss'\n})\nexport class PlacesContainerComponent {\n  title = input.required();\n}\n\n    \n\n    \n        \n  {{ title() }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title() }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlacesContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SafeLinkDirective.html":{"url":"directives/SafeLinkDirective.html","title":"directive - SafeLinkDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  SafeLinkDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/safe-link/safe-link.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        a[appSafeLink]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hostElementRef\n                            \n                            \n                                routeParam\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onConfirmLeavePage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmLeavePage\n                        \n                    \n                \n            \n            \n                \nonConfirmLeavePage(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/directives/safe-link/safe-link.directive.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hostElementRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(ElementRef)\n                    \n                \n                    \n                        \n                                Defined in src/directives/safe-link/safe-link.directive.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeParam\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('', {alias: 'appSafeLink'})\n                    \n                \n                    \n                        \n                                Defined in src/directives/safe-link/safe-link.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, inject, input } from '@angular/core';\n@Directive({\n  selector: 'a[appSafeLink]',\n  standalone: true,\n  host: {\n    '(click)': 'onConfirmLeavePage($event)'\n  }\n})\nexport class SafeLinkDirective { // Atribute self directive\n\n  routeParam = input('', {alias: 'appSafeLink'});\n  private hostElementRef = inject>(ElementRef);\n\n  onConfirmLeavePage(event: MouseEvent) {\n    const wantsToLeave = window.confirm('Do you want to leave the app?');\n\n    if (wantsToLeave) {\n      const address = this.hostElementRef.nativeElement.href;\n      // const address = (event.target as HTMLAnchorElement).href;\n      this.hostElementRef.nativeElement.href = address + this.routeParam();\n      // (event.target as HTMLAnchorElement).href = address + this.routeParam();\n      return;\n    }\n\n    event?.preventDefault();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleFormComponent.html":{"url":"components/SimpleFormComponent.html","title":"component - SimpleFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/reactive-forms/simple-form/simple-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./simple-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./simple-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destrotRef\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    emailIsValid\n                                \n                                \n                                    passwordIsValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destrotRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', {\n      validators: [Validators.required, Validators.email],\n      asyncValidators: [emailIsUnique],\n    }),\n    password: new FormControl('', {\n      validators: [Validators.required, Validators.minLength(6), mustContainQuestionMark],\n    }),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        emailIsValid\n                    \n                \n\n                \n                    \n                        getemailIsValid()\n                    \n                \n                            \n                                \n                                    Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        passwordIsValid\n                    \n                \n\n                \n                    \n                        getpasswordIsValid()\n                    \n                \n                            \n                                \n                                    Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from '@angular/core';\nimport { ReactiveFormsModule, AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime, of } from 'rxjs';\n\n// Reactive forms\nfunction mustContainQuestionMark(control: AbstractControl) {\n  if (control.value.includes('?')) { return null };\n  return { mustContainQuestionMark: true };\n}\nfunction emailIsUnique(control: AbstractControl) {\n  if (control.value !== 'test@example.com') { return of(null) };\n  return of({ notUnique: true });\n}\n/*\n  Load the initial value of the form outside the life cycle of the component only if not is a SSR app.\n  let initialEmailValue = '';\n  const savedForm = localStorage.getItem('form');\n  if (savedForm) { initialEmailValue = JSON.parse(savedForm).email };\n*/\n//\n\n@Component({\n  selector: 'app-simple-form',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './simple-form.component.html',\n  styleUrl: './simple-form.component.scss'\n})\nexport class SimpleFormComponent implements OnInit {\n  private destrotRef = inject(DestroyRef);\n\n  form = new FormGroup({\n    email: new FormControl('', {\n      validators: [Validators.required, Validators.email],\n      asyncValidators: [emailIsUnique],\n    }),\n    password: new FormControl('', {\n      validators: [Validators.required, Validators.minLength(6), mustContainQuestionMark],\n    }),\n  });\n\n  get emailIsValid() {\n    return this.form.controls.email.touched && this.form.controls.email.dirty && this.form.controls.email.invalid;\n  }\n\n  get passwordIsValid() {\n    return this.form.controls.password.touched && this.form.controls.password.dirty && this.form.controls.password.invalid;\n  }\n\n  ngOnInit(): void {\n    // Reactive forms: Storage the form value from localStorage\n    const formValue = localStorage.getItem('form');\n    if (formValue) {\n      // this.form.setValue(JSON.parse(formValue));\n      this.form.patchValue(JSON.parse(formValue));\n    }\n    // Reactive forms: Storage the form value into localStorage\n    const formSubscription = this.form.valueChanges.pipe(debounceTime(500)).subscribe((val) => localStorage.setItem('form', JSON.stringify(val)));\n    this.destrotRef.onDestroy(() => formSubscription.unsubscribe());\n  }\n\n  onSubmit() {\n    console.log(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  Login\n\n  \n    \n      Email\n      \n    \n\n    \n      Password\n      \n    \n\n    Login\n  \n\n  @if (emailIsValid) {\n    Please enter a valid email.\n  }\n  @if (passwordIsValid) {\n    \n      Please enter a valid password, at least 6 characters and a question mark.\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Login            Email                    Password              Login    @if (emailIsValid) {    Please enter a valid email.  }  @if (passwordIsValid) {          Please enter a valid password, at least 6 characters and a question mark.      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/task/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lessonId\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lessonId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lessonId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type TaskStatus = 'OPEN' | 'IN_PROGRESS' | 'DONE';\n\nexport interface Task {\n  id: string;\n  lessonId: string;\n  title: string;\n  summary: string;\n  dueDate: string;\n  status: string;\n}\n\nexport interface NewTaskData {\n  title: string;\n  summary: string;\n  date: string;\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskComponent.html":{"url":"components/TaskComponent.html","title":"component - TaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/task/task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CardComponent\n                            DatePipe\n                            TemperaturePipe\n                                SafeLinkDirective\n                                AuthDirective\n                                NewRequestComponent\n                                SimpleFormComponent\n                                ComplexFormComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickCount\n                            \n                            \n                                clickCount$\n                            \n                            \n                                interval$\n                            \n                            \n                                intervalSignal\n                            \n                            \n                                isAddingRequest\n                            \n                            \n                                isShowingComplexForm\n                            \n                            \n                                isShowingSimpleForm\n                            \n                            \n                                task\n                            \n                            \n                                    Private\n                                taskService\n                            \n                            \n                                taskStatus\n                            \n                            \n                                temperature\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTaskStatus\n                            \n                            \n                                onClickObservable\n                            \n                            \n                                onCloseAddRequest\n                            \n                            \n                                onCompleteTask\n                            \n                            \n                                onShowComplexForm\n                            \n                            \n                                onShowSimpleForm\n                            \n                            \n                                onStartAddRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/task/task.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeTaskStatus\n                        \n                    \n                \n            \n            \n                \nonChangeTaskStatus(taskId: string, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickObservable\n                        \n                    \n                \n            \n            \n                \nonClickObservable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseAddRequest\n                        \n                    \n                \n            \n            \n                \nonCloseAddRequest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCompleteTask\n                        \n                    \n                \n            \n            \n                \nonCompleteTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onShowComplexForm\n                        \n                    \n                \n            \n            \n                \nonShowComplexForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onShowSimpleForm\n                        \n                    \n                \n            \n            \n                \nonShowSimpleForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStartAddRequest\n                        \n                    \n                \n            \n            \n                \nonStartAddRequest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clickCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickCount$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toObservable(this.clickCount)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interval$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : interval(1000)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intervalSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.interval$, {initialValue: 0})\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddingRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isShowingComplexForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isShowingSimpleForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/task/task.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    switch (this.task().status) {\n      case 'OPEN':\n        return 'Open';\n      case 'IN_PROGRESS':\n        return 'Working on it';\n      case 'DONE':\n        return 'Completed';\n      default:\n        return 'Open';\n    }\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(39)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, input, OnInit, signal } from '@angular/core';\nimport { DatePipe } from \"@angular/common\";\nimport { interval } from \"rxjs\";\n\nimport { type Task, type TaskStatus } from \"./task.model\";\nimport { CardComponent } from \"../../shared/card/card.component\";\nimport { NewRequestComponent } from \"../http-request/new-request/new-request.component\";\nimport { TaskService } from '../../services/tasks/tasks.service';\nimport { TemperaturePipe } from '../../pipes/temperature/temperature.pipe'; // Custom Pipe for temperature\nimport { AuthDirective } from '../../directives/auth/auth.directive'; // Estructural self directive\nimport { SafeLinkDirective } from '../../directives/safe-link/safe-link.directive'; // Atribute self directive\nimport { toObservable, toSignal } from '@angular/core/rxjs-interop';\nimport { SimpleFormComponent } from '../reactive-forms/simple-form/simple-form.component';\nimport { ComplexFormComponent } from '../reactive-forms/complex-form/complex-form.component';\n@Component({\n  selector: 'app-task',\n  standalone: true,\n  imports: [\n    CardComponent, DatePipe, TemperaturePipe, SafeLinkDirective, AuthDirective, NewRequestComponent, SimpleFormComponent, ComplexFormComponent\n  ],\n  templateUrl: './task.component.html',\n  styleUrl: './task.component.scss',\n  hostDirectives: [] // Automatically applies directives from the array whenever the component is used.\n})\nexport class TaskComponent implements OnInit {\n  task = input.required();\n  private taskService = inject(TaskService);\n  taskStatus = computed(() => {\n    switch (this.task().status) {\n      case 'OPEN':\n        return 'Open';\n      case 'IN_PROGRESS':\n        return 'Working on it';\n      case 'DONE':\n        return 'Completed';\n      default:\n        return 'Open';\n    }\n  });\n\n  // Pipes: Variable needed for the temperature Pipe.\n  temperature = signal(39);\n\n  // HTTP Requests: To show the http request component.\n  isAddingRequest = signal(false);\n\n  // Reactive Forms: To show the simple or complex form component.\n  isShowingSimpleForm = signal(false);\n  isShowingComplexForm = signal(false);\n\n  // RxJS: toObservable example\n  clickCount = signal(0);\n  clickCount$ = toObservable(this.clickCount); // Instead of using effect on the constructor to reset the signal values ​​we can convert it to observable\n  // RxJS:  toSignal example\n  interval$ = interval(1000);\n  intervalSignal = toSignal(this.interval$, {initialValue: 0});\n\n  ngOnInit(): void {}\n\n  onClickObservable(){\n    this.clickCount.update(prevCount => prevCount + 1);\n  }\n\n  onChangeTaskStatus(taskId: string, status: string) {\n    let newStatus: TaskStatus = 'OPEN';\n\n    switch (status) {\n      case 'open':\n        newStatus = 'OPEN';\n        break;\n      case 'in-progress':\n        newStatus = 'IN_PROGRESS';\n        break;\n      case 'done':\n        newStatus = 'DONE';\n        break;\n      default:\n        break;\n    }\n\n    this.taskService.updateTaskStatus(taskId, newStatus);\n  }\n  onCompleteTask() {\n    this.taskService.removeTask(this.task().id);\n  }\n  // Open and close the http request component.\n  onStartAddRequest() {\n    this.isAddingRequest.set(true);\n  }\n  onCloseAddRequest() {\n    this.isAddingRequest.set(false);\n  }\n  // Open and close the simple or complex form component.\n  onShowSimpleForm() {\n    this.isShowingSimpleForm.set(true);\n    this.isShowingComplexForm.set(false);\n  }\n  onShowComplexForm() {\n    this.isShowingSimpleForm.set(false);\n    this.isShowingComplexForm.set(true);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ task().title }}\n        {{ taskStatus() }}\n      \n      \n        \n          Open\n          In-Progress\n          Completed\n        \n        \n          Change Status\n        \n      \n      Complete\n    \n\n    {{ task().dueDate | date:'fullDate'}}\n    {{ task().summary }}\n\n    @if (task().title === 'Data biding') {\n      \n        One-way: Interpolation uses: {{ expresion }}\n        One-way: Property binding uses: [src]=\"imageUrl\"\n        One-way: Event binding uses: (click)=\"onClick()\"\n        Two-way: Biding uses: [(ngModel)]=\"username\" \n      \n    }\n    @if (task().title === 'Directives') {\n      \n        Structural directives: Modify the structure of the DOM, adding or removing elements.\n        Attribute directives: Change the appearance or behavior of an element, such as modifying styles or attributes.\n        Components: These are directives with their own template, that is, they combine logic and view, and are the basis of any Angular application.\n        \n          \n            \n              Example of a structural directive called \"*appAuth\" and an attribute directive called \"appSafeLink\":\n              Link to Angular site!\n            \n          \n        \n      \n    }\n    @if (task().title === 'Pipes') {\n      \n        Example of the inbuild \"DatePipe\" and a custom pipe named \"temperature\" that can accept up to two configuration attributes:\n        \n          Custom pipe: {{ temperature() | temperature:'cel':'fah' }}  {{ temperature() | temperature:'fah':'cel' }}\n          In build pipe: {{ task().dueDate | date:'fullDate'}}\n        \n      \n    }\n    @if (task().title === 'Dependency Injection') {\n      \n        Angular has an Injector that manages dependencies declared as providers.If a component or service needs another class, Angular\n         looks for that class in the injection tree, creates it (if necessary), and delivers it.\n         Any class marked with the &#64;Injectable() decorator can be a dependency.\n         \n          Angular allows you to control the scope of the injected instance:\n          \n            providedIn: 'root': Global singleton, available throughout the application and Only one instance.\n            providedIn: 'platform' (Advanced): Available across the entire platform, even beyond multiple Angular apps on the same page.\n            providedIn: 'any': A new instance for each lazy-loaded module and useful for isolating services between modules.\n            providedIn: 'self' / SkipSelf (advanced): Controls which level of the Angular injector to resolve the dependency and used in\n              conjunction with &#64;Optional, &#64;Self, &#64;SkipSelf, etc.\n          \n        \n         In addition to providedIn, Angular also allows you to declare providers in various places: &#64;Injectable( providedIn: 'root' ),\n           providers: [] in a component, providers: [] in a module and Injector.create()\n          Manual or advanced injection: Injecting custom tokens, injecting values ​​(useValue), Injecting concrete classes (useClass) and\n        Injecting factories (useFactory)\n      \n    }\n    @if (task().title === 'RxJS') {\n      \n        Observables are values on a stream of data and are great for managing events or streamed data.\n        Signals are values on a container and are great for managind the applicationstate. \n        This is the example of an buld in observable: {{intervalSignal()}}\n        This is the example of an custom observable by clicking the button: {{clickCount()}}\n      \n      \n        Click to increment the signal converted into observable!\n      \n    }\n    @if (task().title === 'HTTP Requests') {\n      \n        \n          HTTP Requests in Angular allow your application to communicate with external servers to send or receive data, such as:\n          \n            Retrieving information from a REST API, Submitting forms, Saving data to a database, Authentication, etc. \n          \n        \n        \n          Types of HTTP Requests:\n          \n            GET: Obtains data from the server. Used to read information, such as a list of users or products.\n            POST: Sends data to the server. Used to create new resources (for example, registering a user).\n            PUT: Completely replaces an existing resource. Used when you want to update an entire object.\n            PATCH: Partially updates a resource. Use it when you only want to change some fields of the object.\n            DELETE: Deletes a resource from the server.\n          \n        \n      \n      @if (isAddingRequest()) {\n        \n      }\n      \n        Click on me to learn more about HTTP requests with images!\n      \n    }\n    @if (task().title === 'Routes') {\n      \n        \n          Guards types\n          \n            CanMatch: Decides whether a route can be used by the router before it is even evaluated whether it can be activated or loaded.\n            CanActivate: Determines whether a route can be activated. This is useful for protecting routes that should only be accessible to authenticated users or those with certain permissions.\n            CanDeactivate: Controls whether a user can exit a route. The most typical example is unsaved data.\n            CanLoad: Prevents a lazy-loaded module from loading if certain conditions are not met.\n          \n        \n        \n          Data types in the guards\n          \n            data: Allows you to associate custom static information with a route.\n            resolve: Allows you to obtain necessary data before a route is activated. Ensures that the information is available before displaying the associated component.\n          \n        \n      \n    }\n    @if (task().title === 'Reactive Forms') {\n      \n        \n          Click to show the simple form\n        \n        \n          Click to show the complex form\n        \n      \n      \n        @if (isShowingSimpleForm()) {}\n        @if (isShowingComplexForm()) {}\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ task().title }}        {{ taskStatus() }}                              Open          In-Progress          Completed                          Change Status                    Complete        {{ task().dueDate | date:\\'fullDate\\'}}    {{ task().summary }}    @if (task().title === \\'Data biding\\') {              One-way: Interpolation uses: {{ expresion }}        One-way: Property binding uses: [src]=\"imageUrl\"        One-way: Event binding uses: (click)=\"onClick()\"        Two-way: Biding uses: [(ngModel)]=\"username\"           }    @if (task().title === \\'Directives\\') {              Structural directives: Modify the structure of the DOM, adding or removing elements.        Attribute directives: Change the appearance or behavior of an element, such as modifying styles or attributes.        Components: These are directives with their own template, that is, they combine logic and view, and are the basis of any Angular application.                                            Example of a structural directive called \"*appAuth\" and an attribute directive called \"appSafeLink\":              Link to Angular site!                                        }    @if (task().title === \\'Pipes\\') {              Example of the inbuild \"DatePipe\" and a custom pipe named \"temperature\" that can accept up to two configuration attributes:                  Custom pipe: {{ temperature() | temperature:\\'cel\\':\\'fah\\' }}  {{ temperature() | temperature:\\'fah\\':\\'cel\\' }}          In build pipe: {{ task().dueDate | date:\\'fullDate\\'}}                  }    @if (task().title === \\'Dependency Injection\\') {              Angular has an Injector that manages dependencies declared as providers.If a component or service needs another class, Angular         looks for that class in the injection tree, creates it (if necessary), and delivers it.         Any class marked with the @Injectable() decorator can be a dependency.                   Angular allows you to control the scope of the injected instance:                      providedIn: \\'root\\': Global singleton, available throughout the application and Only one instance.            providedIn: \\'platform\\' (Advanced): Available across the entire platform, even beyond multiple Angular apps on the same page.            providedIn: \\'any\\': A new instance for each lazy-loaded module and useful for isolating services between modules.            providedIn: \\'self\\' / SkipSelf (advanced): Controls which level of the Angular injector to resolve the dependency and used in              conjunction with @Optional, @Self, @SkipSelf, etc.                           In addition to providedIn, Angular also allows you to declare providers in various places: @Injectable( providedIn: \\'root\\' ),           providers: [] in a component, providers: [] in a module and Injector.create()          Manual or advanced injection: Injecting custom tokens, injecting values ​​(useValue), Injecting concrete classes (useClass) and        Injecting factories (useFactory)          }    @if (task().title === \\'RxJS\\') {              Observables are values on a stream of data and are great for managing events or streamed data.        Signals are values on a container and are great for managind the applicationstate.         This is the example of an buld in observable: {{intervalSignal()}}        This is the example of an custom observable by clicking the button: {{clickCount()}}                    Click to increment the signal converted into observable!          }    @if (task().title === \\'HTTP Requests\\') {                        HTTP Requests in Angular allow your application to communicate with external servers to send or receive data, such as:                      Retrieving information from a REST API, Submitting forms, Saving data to a database, Authentication, etc.                                     Types of HTTP Requests:                      GET: Obtains data from the server. Used to read information, such as a list of users or products.            POST: Sends data to the server. Used to create new resources (for example, registering a user).            PUT: Completely replaces an existing resource. Used when you want to update an entire object.            PATCH: Partially updates a resource. Use it when you only want to change some fields of the object.            DELETE: Deletes a resource from the server.                              @if (isAddingRequest()) {              }              Click on me to learn more about HTTP requests with images!          }    @if (task().title === \\'Routes\\') {                        Guards types                      CanMatch: Decides whether a route can be used by the router before it is even evaluated whether it can be activated or loaded.            CanActivate: Determines whether a route can be activated. This is useful for protecting routes that should only be accessible to authenticated users or those with certain permissions.            CanDeactivate: Controls whether a user can exit a route. The most typical example is unsaved data.            CanLoad: Prevents a lazy-loaded module from loading if certain conditions are not met.                                    Data types in the guards                      data: Allows you to associate custom static information with a route.            resolve: Allows you to obtain necessary data before a route is activated. Ensures that the information is available before displaying the associated component.                            }    @if (task().title === \\'Reactive Forms\\') {                        Click to show the simple form                          Click to show the complex form                            @if (isShowingSimpleForm()) {}        @if (isShowingComplexForm()) {}          }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/tasks/tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePermission\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                getLessonTasks\n                            \n                            \n                                removeTask\n                            \n                            \n                                    Private\n                                saveTasks\n                            \n                            \n                                taskAuthentication\n                            \n                            \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/tasks/tasks.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(task: NewTaskData, lessonId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            NewTaskData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLessonTasks\n                        \n                    \n                \n            \n            \n                \ngetLessonTasks(lessonId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTask\n                        \n                    \n                \n            \n            \n                \nremoveTask(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskAuthentication\n                        \n                    \n                \n            \n            \n                \ntaskAuthentication(taskCode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskCode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTaskStatus\n                        \n                    \n                \n            \n            \n                \nupdateTaskStatus(taskId: string, newStatus: TaskStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newStatus\n                                            \n                                                            TaskStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('guest')\n                    \n                \n                    \n                        \n                                Defined in src/services/tasks/tasks.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(DUMMY_TASKS)\n                    \n                \n                    \n                        \n                                Defined in src/services/tasks/tasks.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from \"@angular/core\";\nimport { NewTaskData, TaskStatus, Task } from \"../../components/task/task.model\";\nimport { DUMMY_TASKS } from \"../../assets/dummy-data\";\n@Injectable({providedIn: 'root'})\nexport class TaskService {\n  tasks = signal(DUMMY_TASKS);\n  activePermission = signal('guest');\n\n  constructor() {\n    const tasks = localStorage.getItem('tasks');\n    if (tasks) { this.tasks.set(JSON.parse(tasks)) };\n  }\n  private saveTasks() {\n    localStorage.setItem('tasks', JSON.stringify(this.tasks()));\n  }\n\n  getLessonTasks(lessonId: string) {\n    return this.tasks().filter((task: Task) => task.lessonId === lessonId);\n  }\n  addTask(task: NewTaskData, lessonId: string) {\n    const newTask: Task = {\n      id: new Date().getTime().toString(),\n      lessonId: lessonId,\n      title: task.title,\n      summary: task.summary,\n      dueDate: task.date,\n      status: task.status\n    };\n    this.tasks.update((oldTasks) => [...oldTasks, newTask]);\n    this.saveTasks();\n  }\n  removeTask(id: string) {\n    this.tasks.set(this.tasks().filter((task: Task) => task.id !== id));\n    this.saveTasks();\n  }\n  updateTaskStatus(taskId: string, newStatus: TaskStatus) {\n    this.tasks.update((oldTasks) =>\n      oldTasks.map(\n        (task => task.id === taskId ? {...task, status: newStatus} : task)\n      )\n    );\n  }\n\n  // Estructural directive method\n  taskAuthentication(taskCode: boolean) {\n    if (taskCode) {\n      this.activePermission.set('fede');\n    } else {\n      this.activePermission.set('guest');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/tasks/tasks.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                TaskComponent\n                            RouterLink\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tasks.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activatedRoute\n                            \n                            \n                                currentChildRoute\n                            \n                            \n                                isNewTask\n                            \n                            \n                                lessonId\n                            \n                            \n                                lessonName\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                selectedFilter\n                            \n                            \n                                selectedLessonTasks\n                            \n                            \n                                sortSignal\n                            \n                            \n                                    Private\n                                taskService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChangeTasksFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/components/tasks/tasks.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeTasksFilter\n                        \n                    \n                \n            \n            \n                \nonChangeTasksFilter(filter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/tasks/tasks.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChildRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNewTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.currentChildRoute() === 'new')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('all')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLessonTasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    // Accessing the \"sortSignal\" here (at the beginning) forces the computed to be executed when the queryParan changes.\n    const sortedTasks = this.sortSignal();\n    const filteredTasks = (() => {\n      switch (this.selectedFilter()) {\n        case 'open':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'OPEN');\n        case 'in-progress':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'IN_PROGRESS');\n        case 'done':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'DONE');\n        default:\n          return this.taskService.getLessonTasks(this.lessonId());\n      }\n    })();\n    // Sorts the filtered tasks by status and returns them.\n    return filteredTasks.sort((a, b) => {\n      return sortedTasks === 'asc' ? a.id.localeCompare(b.id) : b.id.localeCompare(a.id);\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('desc')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, signal } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, NavigationEnd, ResolveFn, Router, RouterLink, RouterOutlet, RouterStateSnapshot } from '@angular/router';\nimport { TaskComponent } from \"../task/task.component\";\nimport { TaskService } from '../../services/tasks/tasks.service';\nimport { DUMMY_LESSONS } from \"../../assets/dummy-data\"\nimport { filter } from 'rxjs';\n@Component({\n  selector: 'app-tasks',\n  standalone: true,\n  imports: [TaskComponent, RouterLink, RouterOutlet],\n  templateUrl: './tasks.component.html',\n  styleUrl: './tasks.component.scss'\n})\nexport class TasksComponent {\n  private router = inject(Router);\n  private route = inject(ActivatedRoute);\n  private taskService = inject(TaskService);\n\n  lessonId = signal('');\n  lessonName = signal('');\n  private activatedRoute = inject(ActivatedRoute);\n\n  sortSignal = signal('desc');\n  currentChildRoute = signal('');\n  isNewTask = computed(() => this.currentChildRoute() === 'new');\n\n  private selectedFilter = signal('all');\n\n  selectedLessonTasks = computed(() => {\n    // Accessing the \"sortSignal\" here (at the beginning) forces the computed to be executed when the queryParan changes.\n    const sortedTasks = this.sortSignal();\n    const filteredTasks = (() => {\n      switch (this.selectedFilter()) {\n        case 'open':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'OPEN');\n        case 'in-progress':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'IN_PROGRESS');\n        case 'done':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'DONE');\n        default:\n          return this.taskService.getLessonTasks(this.lessonId());\n      }\n    })();\n    // Sorts the filtered tasks by status and returns them.\n    return filteredTasks.sort((a, b) => {\n      return sortedTasks === 'asc' ? a.id.localeCompare(b.id) : b.id.localeCompare(a.id);\n    });\n  }); // Filtering and Sorting the tasks into this computed signal.\n\n  constructor() {\n    // Get the lessonName from the route data dinamically.\n    this.activatedRoute.data.subscribe(data => this.lessonName.set(data['lessonName']));\n\n    // Get the lessonId from the route params. No destroRef needed because of route it self.\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('lessonId');\n      if (id) this.lessonId.set(id);\n    });\n\n    // Takes the first child route \"new\" to render conditionally the add task form using isNewRoute and currentChildRoute signals.\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      const childPath = this.route.snapshot.firstChild?.routeConfig?.path;\n      this.currentChildRoute.set(childPath ?? '');\n    });\n\n    // Get the sort param from the query params and toogle it depending on the value.\n    this.route.queryParamMap.subscribe(params => {\n      const sortParam = params.get('sort');\n      if (sortParam === 'asc' || sortParam === 'desc') {\n        this.sortSignal.set(sortParam);\n      }\n    });\n  } // No destroRef needed because of route it self.\n\n  onChangeTasksFilter(filter: string) {\n    this.selectedFilter.set(filter);\n  }\n}\n\n// No subscription needed on ActivatedRouteSnapshot because of route it self.\nexport const resolveLessonName: ResolveFn = (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  const lessonId = activatedRoute.paramMap.get('lessonId');\n  return DUMMY_LESSONS.find(lesson => lesson.id === lessonId)?.name || '';\n};\n\nexport const resolveTitle: ResolveFn = (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  return resolveLessonName(activatedRoute, routerState) + ' tasks';\n};\n\n    \n\n    \n        \n  \n  @if (!isNewTask()) {\n    \n      {{ lessonName() }}'s Tasks\n      \n        \n          All\n          Open\n          In-Progress\n          Completed\n        \n      \n      \n        \n          Sort {{ sortSignal() === 'asc' ? 'Descending' : 'Ascending' }}\n        \n        Add Task\n      \n    \n\n    \n      @for (task of selectedLessonTasks(); track task.id) {\n        \n          \n        \n      }\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (!isNewTask()) {          {{ lessonName() }}\\'s Tasks                        All          Open          In-Progress          Completed                                      Sort {{ sortSignal() === \\'asc\\' ? \\'Descending\\' : \\'Ascending\\' }}                Add Task                    @for (task of selectedLessonTasks(); track task.id) {                                }      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TemperaturePipe.html":{"url":"pipes/TemperaturePipe.html","title":"pipe - TemperaturePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TemperaturePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/temperature/temperature.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        temperature\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number | null, inputType: \"cel\" | \"fah\", outputType?: \"cel\" | \"fah\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/pipes/temperature/temperature.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                inputType\n                                            \n                                                        \"cel\" | \"fah\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                outputType\n                                            \n                                                        \"cel\" | \"fah\"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n  name: 'temperature',\n  standalone: true,\n  pure: true // When pure is false, turns off the default security chache mecanism, which prevents too many pipe executions.\n})\nexport class TemperaturePipe implements PipeTransform {\n\n  transform(value: string | number | null, inputType: 'cel' | 'fah', outputType?: 'cel' | 'fah') {\n    if (value === null || value === undefined) { return value; }\n    if (value === '') { return value; }\n\n    let val: number;\n\n    if (typeof value === 'string') { val = parseFloat(value) } else { val = value };\n\n    let outputTemp: number;\n\n    if (inputType === 'cel' && outputType === 'fah') {\n      outputTemp = val * (9 / 5) + 32;\n    } else if (inputType === 'fah' && outputType === 'cel') {\n      outputTemp = (val - 32) * (5 / 9);\n    } else {\n      outputTemp = val;\n    }\n\n    let symbol: 'ºC' | 'ºF';\n\n    if (!outputType) { symbol = inputType === 'cel' ? 'ºC' : 'ºF' } else { symbol = outputType === 'cel' ? 'ºC' : 'ºF' };\n\n    return `${outputTemp.toFixed(2)} ${symbol}`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/assets/dummy-data.ts\n            \n            variable\n            DUMMY_LESSONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/assets/dummy-data.ts\n            \n            variable\n            DUMMY_TASKS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/http-request/available-places/available-places.component.ts\n            \n            component\n            AvailablePlacesComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/http-request/favorite-places/favorite-places.component.ts\n            \n            component\n            FavoritePlacesComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/http-request/new-request/new-request.component.ts\n            \n            component\n            NewRequestComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/http-request/place.model.ts\n            \n            interface\n            Place\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/components/http-request/places-container/places-container.component.ts\n            \n            component\n            PlacesContainerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/http-request/places/places.component.ts\n            \n            component\n            PlacesComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/lesson/lesson.component.ts\n            \n            component\n            LessonComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/components/lesson/lesson.model.ts\n            \n            interface\n            Lesson\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/new-task/new-task.component.ts\n            \n            component\n            NewTaskComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/reactive-forms/complex-form/complex-form.component.ts\n            \n            component\n            ComplexFormComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/components/reactive-forms/complex-form/complex-form.component.ts\n            \n            function\n            mustMatch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/reactive-forms/simple-form/simple-form.component.ts\n            \n            component\n            SimpleFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/components/reactive-forms/simple-form/simple-form.component.ts\n            \n            function\n            emailIsUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/reactive-forms/simple-form/simple-form.component.ts\n            \n            function\n            mustContainQuestionMark\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/task/task.component.ts\n            \n            component\n            TaskComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/components/task/task.model.ts\n            \n            interface\n            NewTaskData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/task/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/components/task/task.model.ts\n            \n            type alias\n            TaskStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/components/tasks/tasks.component.ts\n            \n            variable\n            resolveLessonName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/tasks/tasks.component.ts\n            \n            variable\n            resolveTitle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/directives/auth/auth.directive.ts\n            \n            directive\n            AuthDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/directives/safe-link/safe-link.directive.ts\n            \n            directive\n            SafeLinkDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/guards/can-leave-edit-page/can-leave-edit-page.guard.ts\n            \n            variable\n            canLeaveEditPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/guards/dummy-can-match/dummy-can-match.guard.ts\n            \n            variable\n            dummyCanMatch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/interceptors/remote-a19-interceptor/remote-a19.interceptor.ts\n            \n            variable\n            remoteA19Interceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/temperature/temperature.pipe.ts\n            \n            pipe\n            TemperaturePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/tasks/tasks.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/mf-wrapper-test.ts\n            \n            variable\n            mfWrapperForTesting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/modal-error/components/error/error-modal.component.ts\n            \n            component\n            ErrorModalComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/modal-error/components/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/modal-error/service/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/shared/remote-services.registry.ts\n            \n            variable\n            RemoteServicesRegistry\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            emailIsUnique   (src/.../simple-form.component.ts)\n                        \n                        \n                            mustContainQuestionMark   (src/.../simple-form.component.ts)\n                        \n                        \n                            mustMatch   (src/.../complex-form.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/reactive-forms/simple-form/simple-form.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailIsUnique\n                        \n                    \n                \n            \n            \n                \nemailIsUnique(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mustContainQuestionMark\n                        \n                    \n                \n            \n            \n                \nmustContainQuestionMark(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/components/reactive-forms/complex-form/complex-form.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mustMatch\n                        \n                    \n                \n            \n            \n                \nmustMatch(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMfAngular19\nThis project was generated using Angular CLI version 19.2.8.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../task.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/task/task.model.ts\n    \n    \n        \n            \n                \n                    \n                    TaskStatus\n                \n            \n            \n                \n                        \"OPEN\" | \"IN_PROGRESS\" | \"DONE\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            canLeaveEditPage   (src/.../can-leave-edit-page.guard.ts)\n                        \n                        \n                            DUMMY_LESSONS   (src/.../dummy-data.ts)\n                        \n                        \n                            DUMMY_TASKS   (src/.../dummy-data.ts)\n                        \n                        \n                            dummyCanMatch   (src/.../dummy-can-match.guard.ts)\n                        \n                        \n                            mfWrapperForTesting   (src/.../mf-wrapper-test.ts)\n                        \n                        \n                            remoteA19Interceptor   (src/.../remote-a19.interceptor.ts)\n                        \n                        \n                            RemoteServicesRegistry   (src/.../remote-services.registry.ts)\n                        \n                        \n                            resolveLessonName   (src/.../tasks.component.ts)\n                        \n                        \n                            resolveTitle   (src/.../tasks.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(\n      routes,\n      withComponentInputBinding(),\n      withRouterConfig({ paramsInheritanceStrategy: 'always' }),\n    ),\n    provideHttpClient(withInterceptors([remoteA19Interceptor]))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/guards/can-leave-edit-page/can-leave-edit-page.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canLeaveEditPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CanDeactivateFn\n\n                    \n                \n                \n                    \n                        Default value : (component: NewTaskComponent) => {\n  if (\n    component.enteredTitle().length > 0 ||\n    component.enteredSummary().length > 0 ||\n    component.enteredDate().length > 0\n  ) {\n    return confirm('Are you sure to leave with unsaved changes?');\n  }\n  return true;\n}\n                    \n                \n\n\n        \n    \n\n    src/assets/dummy-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DUMMY_LESSONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 'l1',\n    name: 'Data biding',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l2',\n    name: 'Directives',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l3',\n    name: 'Pipes',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l4',\n    name: 'Dependency Injection',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l5',\n    name: 'Observables - RxJS',\n    avatar: 'rxjs.png',\n  },\n  {\n    id: 'l6',\n    name: 'HTTP Requests',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l7',\n    name: 'Routes',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l8',\n    name: 'Reactive Forms',\n    avatar: 'angular-logo.png',\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DUMMY_TASKS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 't1',\n    lessonId: 'l1',\n    title: 'Data biding',\n    summary: 'It is the mechanism that allows synchronizing data between the model (component.ts) and the view (template.html):',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't2',\n    lessonId: 'l2',\n    title: 'Directives',\n    summary: 'Special classes that allow you to modify the behavior, appearance or structure of the elements in the DOM of an application.',\n    dueDate: '2025-12-31',\n    status: 'DONE'\n  },\n  {\n    id: 't3',\n    lessonId: 'l3',\n    title: 'Pipes',\n    summary: 'Tools that allow you to transform and format data directly in HTML templates, without modifying the original value in the component.',\n    dueDate: '2025-12-31',\n    status: 'IN_PROGRESS'\n  },\n  {\n    id: 't4',\n    lessonId: 'l4',\n    title: 'Dependency Injection',\n    summary: 'It is a design pattern that allows you to automatically provide instances of classes (dependencies) that other objects (such as components or services) need to function, without having to create them directly.',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't5',\n    lessonId: 'l5',\n    title: 'RxJS',\n    summary: 'Information, comparisons and examples of RxJS, observable pattern:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't6',\n    lessonId: 'l6',\n    title: 'HTTP Requests',\n    summary: 'Information and examples of HTTP requests, also with observable pattern:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't7',\n    lessonId: 'l7',\n    title: 'Routes',\n    summary: 'Information and examples in code of routing ans its complements:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n    {\n    id: 't8',\n    lessonId: 'l8',\n    title: 'Reactive Forms',\n    summary: 'Practical example of a form with the implementation of: ngSubmit, ngModel, required, #XXXX=\"ngModel\", conditional rendering and conditional classes:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/guards/dummy-can-match/dummy-can-match.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dummyCanMatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanMatchFn\n\n                    \n                \n                \n                    \n                        Default value : (route, segments) => {\n  const router = inject(Router);\n  const shouldGetAccess = Math.random();\n  if (shouldGetAccess  You do not have access');\n  return new RedirectCommand(router.parseUrl('/a19'));\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/mf-wrapper-test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mfWrapperForTesting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { loadRemoteModule: realLoadRemoteModule }\n                    \n                \n\n\n        \n    \n\n    src/interceptors/remote-a19-interceptor/remote-a19.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        remoteA19Interceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const apiHost = 'http://localhost:4201';\n  let newReq = req;\n  if (!req.url.startsWith('http')) {\n    newReq = req.clone({ url: apiHost + req.url });\n  }\n  console.log('Intercepted by remoteA19Interceptor');\n  return next(newReq);\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/remote-services.registry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RemoteServicesRegistry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/components/tasks/tasks.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolveLessonName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResolveFn\n\n                    \n                \n                \n                    \n                        Default value : (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  const lessonId = activatedRoute.paramMap.get('lessonId');\n  return DUMMY_LESSONS.find(lesson => lesson.id === lessonId)?.name || '';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResolveFn\n\n                    \n                \n                \n                    \n                        Default value : (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  return resolveLessonName(activatedRoute, routerState) + ' tasks';\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
