var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.014,1,0.668]],["body/components/AppComponent.html",[0,0.021,1,1.019,2,0.736,3,0.29,4,0.258,5,0.651,6,0.603,7,0.651,8,0.258,9,2.343,10,0.513,11,1.313,12,1.304,13,0.933,14,0.86,15,2.626,16,0.736,17,0.677,18,0.933,19,1.019,20,1.019,21,1.019,22,3.926,23,0.933,24,3.995,25,0.933,26,3.995,27,0.29,28,0.514,29,1.215,30,2.54,31,5.399,32,1.702,33,4.67,34,0.933,35,3.358,36,3.358,37,5.399,38,3.995,39,2.274,40,1.123,41,2.787,42,1.016,43,0.029,44,0.694,45,0.736,46,1.981,47,0.651,48,0.702,49,1.019,50,1.103,51,3.995,52,2.787,53,2.626,54,2.787,55,3.069,56,2.787,57,2.787,58,2.787,59,2.787,60,0.898,61,2.05,62,1.512,63,1.095,64,0.395,65,2.787,66,2.787,67,2.939,68,2.05,69,2.05,70,2.787,71,1.512,72,2.343,73,1.832,74,2.343,75,0.62,76,2.343,77,2.05,78,2.343,79,0.29,80,0.432,81,2.05,82,1.095,83,2.787,84,3.435,85,3.995,86,3.358,87,3.033,88,3.995,89,0.933,90,3.995,91,3.995,92,3.995,93,3.995,94,3.995,95,3.995,96,3.358,97,2.939,98,0.651,99,0.864,100,0.933,101,0.395,102,1.191,103,0.651,104,0.651,105,0.557,106,0.603,107,1.091,108,0.557,109,0.651,110,0.557,111,0.651,112,0.933,113,0.933,114,0.557,115,0.651,116,0.651,117,0.651,118,0.557,119,0.557,120,0.677,121,0.651,122,0.513,123,0.933,124,0.557,125,0.651,126,0.557,127,0.557,128,0.651,129,0.651,130,0.557,131,0.603,132,0.557,133,0.557,134,0.513,135,0.651,136,0.513,137,0.603,138,0.651,139,0.017,140,0.017]],["title/directives/AuthDirective.html",[101,0.473,134,0.616]],["body/directives/AuthDirective.html",[3,0.422,4,0.375,8,0.375,10,0.747,11,1.029,16,0.948,17,0.872,27,0.422,28,0.662,40,1.228,43,0.029,49,1.189,50,1.287,60,0.799,63,1.593,64,0.574,75,0.629,79,0.422,80,0.629,101,0.801,131,0.877,134,0.948,139,0.022,140,0.022,141,3.408,142,5.003,143,5.657,144,2.206,145,5.657,146,5.951,147,5.951,148,3.364,149,5.148,150,5.148,151,4.054,152,3.384,153,4.054,154,5.148,155,4.054,156,5.148,157,3.787,158,1.86,159,2.018,160,2.664,161,2.982,162,2.664,163,4.054,164,4.054,165,3.408,166,4.054,167,4.054,168,4.054,169,4.054]],["title/components/AvailablePlacesComponent.html",[0,0.014,105,0.668]],["body/components/AvailablePlacesComponent.html",[0,0.017,1,0.439,2,0.748,3,0.229,4,0.203,5,0.513,6,0.475,7,0.513,8,0.203,10,0.405,11,1.275,12,1.262,13,0.439,14,0.405,16,0.617,17,0.568,18,0.783,19,0.439,20,0.439,21,0.439,23,0.783,25,0.783,27,0.229,28,0.431,29,1.159,30,2.262,32,0.801,34,0.783,40,1.154,42,0.801,43,0.029,44,0.584,45,0.95,47,0.783,48,0.554,49,1.071,50,1.159,53,2.203,60,0.858,63,0.864,64,0.311,67,1.617,68,1.617,75,0.341,79,0.229,80,0.341,89,0.439,98,0.513,99,0.725,100,0.783,101,0.311,102,1.061,103,0.513,104,0.513,105,0.908,106,1.224,107,0.949,108,0.439,109,0.513,110,0.439,111,0.513,112,0.783,113,0.783,114,0.439,115,0.513,116,0.513,117,0.513,118,0.439,119,0.439,120,0.568,121,0.513,122,0.405,123,0.783,124,0.439,125,0.513,126,0.908,127,0.908,128,1.447,129,0.513,130,0.439,131,0.475,132,0.439,133,0.439,134,0.405,135,0.513,136,0.405,137,0.475,138,0.513,139,0.014,140,0.014,144,1.917,170,2.924,171,4.937,172,4.32,173,1.617,174,1.818,175,2.67,176,2.465,177,2.465,178,2.988,179,3.414,180,4.112,181,4.76,182,4.112,183,3.414,184,3.414,185,2.986,186,2.817,187,1.848,188,3.351,189,2.797,190,2.198,191,1.848,192,2.465,193,1.848,194,2.817,195,1.848,196,1.848,197,2.465,198,1.848,199,2.435,200,2.198,201,2.817,202,1.848,203,2.817,204,1.848,205,1.848,206,1.617,207,2.817,208,2.817,209,1.445,210,1.848,211,1.307,212,1.445,213,2.203,214,1.848,215,1.848,216,1.848,217,1.617,218,1.848,219,1.445,220,1.848,221,1.848,222,2.817,223,1.617,224,1.848,225,2.67,226,2.986,227,2.67,228,2.465,229,1.617,230,1.848,231,1.723,232,1.848,233,1.848,234,1.848,235,1.445,236,1.848,237,1.848,238,1.848,239,1.445,240,1.848,241,1.848,242,1.617,243,1.617,244,1.307,245,2.465,246,2.817,247,1.848,248,1.848,249,1.848,250,1.445,251,2.817,252,2.198,253,1.848,254,1.848,255,2.198,256,1.848,257,1.445,258,2.817,259,2.817,260,2.817,261,1.848,262,1.848,263,1.848,264,1.445,265,2.198,266,1.848,267,1.848,268,1.848,269,2.67,270,1.848,271,2.203,272,2.817,273,3.351,274,1.993,275,2.817,276,2.465]],["title/components/CardComponent.html",[0,0.014,108,0.668]],["body/components/CardComponent.html",[0,0.023,1,0.768,2,0.916,3,0.4,4,0.356,5,0.898,6,0.831,7,0.898,8,0.356,10,0.708,11,1.355,12,1.35,13,0.768,14,0.708,16,0.916,17,0.843,18,0.898,19,0.768,20,0.768,21,0.768,23,1.162,25,1.162,29,0.831,43,0.028,44,0.709,60,0.596,64,0.544,75,0.596,79,0.4,80,0.596,89,0.768,98,0.898,99,1.076,100,1.162,101,0.544,102,1.363,103,0.898,104,0.898,105,0.768,106,0.831,107,1.288,108,1.166,109,0.898,110,0.768,111,0.898,112,1.162,113,1.162,114,0.768,115,0.898,116,0.898,117,0.898,118,0.768,119,0.768,120,0.843,121,0.898,122,0.708,123,1.162,124,0.768,125,0.898,126,0.768,127,0.768,128,0.898,129,0.898,130,0.768,131,0.831,132,0.768,133,0.768,134,0.708,135,0.898,136,0.708,137,0.831,138,0.898,139,0.021,140,0.021,277,3.23,278,4.975,279,4.975,280,4.975]],["title/components/ComplexFormComponent.html",[0,0.014,110,0.668]],["body/components/ComplexFormComponent.html",[0,0.017,1,0.462,2,0.641,3,0.241,4,0.388,5,0.54,6,0.5,7,0.54,8,0.214,10,0.426,11,1.284,12,1.272,13,0.462,14,0.426,16,0.641,17,0.709,18,0.813,19,0.462,20,0.462,21,0.462,23,0.813,25,0.813,27,0.241,28,0.448,29,0.5,34,0.813,40,0.837,43,0.029,44,0.701,47,0.813,48,0.877,49,0.462,50,0.5,60,0.54,62,2.529,64,0.327,75,0.359,79,0.241,80,0.359,82,1.646,89,0.462,98,0.54,99,0.753,100,0.813,101,0.327,102,1.089,103,0.54,104,0.54,105,0.462,106,0.5,107,0.978,108,0.462,109,0.54,110,0.931,111,1.274,112,0.813,113,0.813,114,0.462,115,0.54,116,0.54,117,0.54,118,0.462,119,0.462,120,1.133,121,0.54,122,0.426,123,0.813,124,0.462,125,0.54,126,0.462,127,0.462,128,0.54,129,0.54,130,0.462,131,0.5,132,0.462,133,0.462,134,0.426,135,0.54,136,0.426,137,0.5,138,0.54,139,0.015,140,0.015,158,1.597,231,1.476,269,2.288,281,3.064,282,3.064,283,3.064,284,1.519,285,3.243,286,3.52,287,2.926,288,2.926,289,4.661,290,3.429,291,2.311,292,2.311,293,4.584,294,3.918,295,5.35,296,5.479,297,5.422,298,2.926,299,3.481,300,4.584,301,3.918,302,4.188,303,3.081,304,3.481,305,3.481,306,3.918,307,4.661,308,3.429,309,3.481,310,4.661,311,4.661,312,3.481,313,4.188,314,5.612,315,4.661,316,2.311,317,2.561,318,1.519,319,1.519,320,1.942,321,2.311,322,2.311,323,2.311,324,2.311,325,1.519,326,2.311,327,1.942,328,2.311,329,3.481,330,3.481,331,3.481,332,3.481,333,3.481,334,3.481,335,2.926,336,3.481,337,3.481,338,2.926,339,3.481,340,2.926,341,3.481,342,3.481,343,2.561,344,3.481,345,3.481,346,3.481,347,3.481,348,3.481,349,3.481,350,3.481,351,3.481,352,3.481,353,3.481,354,3.481,355,2.926,356,2.926,357,3.481,358,2.926]],["title/components/ErrorModalComponent.html",[0,0.014,21,0.668]],["body/components/ErrorModalComponent.html",[0,0.021,1,0.645,2,0.815,3,0.336,4,0.299,5,0.753,6,0.698,7,0.753,8,0.299,10,0.594,11,1.334,12,1.326,13,0.645,14,0.594,16,0.815,17,0.75,18,1.034,19,0.645,20,0.645,21,1.087,23,1.034,25,1.034,27,0.336,28,0.569,29,1.304,30,2.708,34,1.034,40,1.177,43,0.029,44,0.65,47,0.753,48,0.813,49,0.645,50,0.698,53,2.909,60,0.784,63,1.268,64,0.457,69,4.436,75,0.501,79,0.336,80,0.501,89,0.645,98,0.753,99,0.957,100,1.034,101,0.457,102,1.27,103,0.753,104,0.753,105,0.645,106,0.698,107,1.18,108,0.645,109,0.753,110,0.645,111,0.753,112,1.034,113,1.034,114,0.645,115,0.753,116,0.753,117,0.753,118,1.087,119,0.645,120,0.75,121,0.753,122,0.594,123,1.034,124,0.645,125,0.753,126,0.645,127,0.645,128,0.753,129,0.753,130,0.645,131,0.698,132,0.645,133,0.645,134,0.594,135,0.753,136,0.594,137,0.698,138,0.753,139,0.019,140,0.019,144,1.711,158,2.319,359,3.963,360,2.712,361,3.721,362,3.721,363,3.721,364,5.069,365,2.767,366,5.439,367,2.909,368,4.427,369,4.427,370,3.226,371,3.226,372,3.226,373,3.226,374,3.226,375,4.427]],["title/injectables/ErrorService.html",[30,1.664,376,1.813]],["body/injectables/ErrorService.html",[3,0.452,4,0.402,8,0.402,13,0.868,27,0.452,28,0.691,29,1.262,30,2.676,32,1.583,34,1.256,39,2.294,40,1.219,42,1.583,43,0.029,44,0.559,45,0.8,47,1.256,48,1.354,49,1.074,50,1.162,60,0.674,64,0.615,79,0.452,80,0.674,139,0.023,140,0.023,144,1.976,199,2.907,359,4.121,364,3.651,376,2.916,377,3.195,378,3.651,379,5.838,380,6.101,381,5.375,382,4.343,383,5.375,384,4.343,385,4.343,386,5.375,387,4.343,388,3.651,389,4.343,390,4.343]],["title/components/FavoritePlacesComponent.html",[0,0.014,114,0.668]],["body/components/FavoritePlacesComponent.html",[0,0.017,1,0.43,2,0.738,3,0.224,4,0.199,5,0.502,6,0.465,7,0.502,8,0.199,10,0.396,11,1.271,12,1.258,13,0.43,14,0.396,16,0.607,17,0.558,18,0.77,19,0.43,20,0.43,21,0.43,23,0.77,25,0.77,27,0.224,28,0.424,29,1.15,30,2.236,32,0.784,34,0.77,40,1.147,42,0.784,43,0.029,44,0.578,45,0.941,47,0.77,48,0.542,49,1.063,50,1.15,53,2.166,60,0.852,63,0.845,64,0.304,67,1.582,68,1.582,75,0.334,79,0.224,80,0.334,89,0.43,98,0.502,99,0.713,100,0.77,101,0.304,102,1.049,103,0.502,104,0.502,105,0.43,106,0.465,107,0.936,108,0.43,109,0.502,110,0.43,111,0.502,112,0.77,113,0.77,114,0.897,115,1.314,116,0.502,117,0.502,118,0.43,119,0.43,120,0.558,121,0.502,122,0.396,123,0.77,124,0.43,125,0.502,126,0.897,127,0.897,128,1.442,129,0.502,130,0.43,131,0.465,132,0.43,133,0.43,134,0.396,135,0.502,136,0.396,137,0.465,138,0.502,139,0.014,140,0.014,144,1.905,170,2.908,173,1.582,174,1.788,175,2.633,176,2.424,177,2.424,178,2.948,179,3.368,180,4.472,181,4.73,182,4.071,183,3.368,184,3.368,185,2.952,187,1.807,189,2.628,191,1.807,192,2.424,193,1.807,194,2.77,195,1.807,196,1.807,197,2.424,198,1.807,199,2.411,201,2.77,202,1.807,203,2.77,204,1.807,205,1.807,206,1.582,207,2.77,208,2.77,209,1.413,210,1.807,211,1.278,212,1.413,213,2.166,214,1.807,215,1.807,216,1.807,217,1.582,218,1.807,219,1.413,220,1.807,221,1.807,222,2.77,223,1.582,224,1.807,225,2.633,226,2.952,227,2.633,228,2.424,229,1.582,230,1.807,231,1.699,232,1.807,233,1.807,234,1.807,235,1.413,236,1.807,237,1.807,238,1.807,239,1.413,240,1.807,241,1.807,242,1.582,243,1.582,244,1.278,245,2.424,246,3.368,247,1.807,248,1.807,249,1.807,250,1.413,251,2.77,253,1.807,256,1.807,257,1.413,258,2.77,259,2.77,260,2.77,261,1.807,262,1.807,263,1.807,264,1.413,266,1.807,267,1.807,269,2.633,270,1.807,271,2.166,272,2.77,274,2.671,275,2.77,276,2.424,325,1.413,391,4.91,392,4.297,393,3.295,394,3.295,395,2.15,396,2.15,397,2.15,398,1.807,399,2.15,400,2.15,401,2.15,402,2.15,403,2.15,404,2.15,405,1.807,406,4.492]],["title/components/HeaderComponent.html",[0,0.014,19,0.668]],["body/components/HeaderComponent.html",[0,0.022,1,0.74,2,0.895,3,0.386,4,0.343,5,0.865,6,0.801,7,0.865,8,0.343,10,0.683,11,1.351,12,1.345,13,0.74,14,1.1,15,3.781,16,0.895,17,0.823,18,0.865,19,1.15,20,0.74,21,0.74,23,1.135,25,1.135,29,0.801,43,0.028,44,0.697,60,0.575,64,0.525,75,0.575,79,0.386,80,0.575,89,0.74,98,0.865,99,1.05,100,1.135,101,0.525,102,1.344,103,0.865,104,0.865,105,0.74,106,0.801,107,1.266,108,0.74,109,0.865,110,0.74,111,0.865,112,1.135,113,1.135,114,0.74,115,0.865,116,0.865,117,0.865,118,0.74,119,0.74,120,0.823,121,0.865,122,0.683,123,1.135,124,0.74,125,0.865,126,0.74,127,0.74,128,0.865,129,0.865,130,0.74,131,0.801,132,0.74,133,0.74,134,0.683,135,0.865,136,0.683,137,0.801,138,0.865,139,0.021,140,0.021,407,3.115,408,4.858,409,4.858,410,4.858,411,5.753,412,4.858,413,4.084,414,4.084,415,3.574]],["title/interfaces/Lesson.html",[87,1.987,416,1.418]],["body/interfaces/Lesson.html",[3,0.503,4,0.447,8,0.447,27,0.503,28,0.737,39,2.636,43,0.028,44,0.813,45,1.126,46,2.683,79,0.503,81,4.653,87,3.409,139,0.024,140,0.024,416,2.048,417,2.872,418,4.06]],["title/components/LessonComponent.html",[0,0.014,20,0.668]],["body/components/LessonComponent.html",[0,0.021,1,0.627,2,0.8,3,0.327,4,0.29,5,0.733,6,0.678,7,0.733,8,0.29,10,0.578,11,1.33,12,1.322,13,0.627,14,0.918,15,2.855,16,0.8,17,0.91,18,1.014,19,0.627,20,1.074,21,0.627,23,1.014,25,1.014,27,0.327,28,0.559,29,0.678,34,1.014,35,4.519,40,1.219,43,0.029,44,0.641,45,0.578,47,0.733,48,0.79,49,0.627,50,0.678,60,0.834,64,0.444,71,1.702,75,0.487,79,0.327,80,0.487,82,1.707,86,4.744,87,3.628,89,0.627,98,0.733,99,0.939,100,1.014,101,0.444,102,1.256,103,0.733,104,0.733,105,0.627,106,0.678,107,1.163,108,1.074,109,0.733,110,0.627,111,0.733,112,1.014,113,1.014,114,0.627,115,0.733,116,0.733,117,0.733,118,0.627,119,0.627,120,0.736,121,0.733,122,0.578,123,1.014,124,0.627,125,0.733,126,0.627,127,0.627,128,0.733,129,0.733,130,0.627,131,0.678,132,0.627,133,0.627,134,0.578,135,0.733,136,0.578,137,0.678,138,0.733,139,0.018,140,0.018,158,1.44,367,2.855,419,2.638,420,3.274,421,4.981,422,4.343,423,4.343,424,4.981,425,5.644,426,2.855,427,2.855,428,4.343,429,4.343,430,4.343,431,3.138,432,3.664,433,4.343,434,4.343,435,3.138,436,2.855,437,3.138,438,2.638,439,2.855,440,3.138,441,4.343]],["title/components/ModalComponent.html",[0,0.014,118,0.668]],["body/components/ModalComponent.html",[0,0.022,1,0.712,2,0.872,3,0.371,4,0.33,5,0.833,6,0.771,7,0.833,8,0.33,10,0.657,11,1.346,12,1.34,13,0.712,14,0.657,16,0.872,17,0.802,18,0.833,19,0.712,20,0.712,21,0.712,23,1.106,25,1.106,27,0.371,28,0.609,29,0.771,34,1.106,40,0.946,43,0.028,44,0.684,47,0.833,48,1.193,49,0.712,50,0.771,60,0.553,64,0.505,75,0.553,79,0.371,80,0.553,89,0.712,98,0.833,99,1.024,100,1.106,101,0.505,102,1.323,103,0.833,104,0.833,105,0.712,106,0.771,107,1.242,108,0.712,109,0.833,110,0.712,111,0.833,112,1.106,113,1.106,114,0.712,115,0.833,116,0.833,117,0.833,118,1.132,119,0.712,120,0.802,121,0.833,122,0.657,123,1.106,124,0.712,125,0.833,126,0.712,127,0.712,128,0.833,129,0.833,130,0.712,131,0.771,132,0.712,133,0.712,134,0.657,135,0.833,136,0.657,137,0.771,138,0.833,139,0.02,140,0.02,144,1.8,174,2.569,359,3.495,361,3.981,362,3.981,363,3.981,442,2.997,443,5.318,444,5.318,445,5.666,446,3.565,447,4.736,448,3.565,449,2.997,450,3.565,451,3.565]],["title/components/NewRequestComponent.html",[0,0.014,119,0.668]],["body/components/NewRequestComponent.html",[0,0.021,1,0.661,2,0.83,3,0.344,4,0.306,5,0.773,6,0.715,7,0.773,8,0.306,10,0.609,11,1.337,12,1.33,13,0.661,14,0.609,16,0.83,17,0.763,18,1.052,19,0.661,20,0.661,21,0.661,23,1.052,25,1.052,27,0.344,28,0.579,29,0.715,34,1.052,40,1.023,43,0.028,44,0.659,47,0.773,48,0.833,60,0.795,64,0.468,75,0.513,79,0.344,80,0.513,89,0.661,98,0.773,99,0.974,100,1.052,101,0.468,102,1.284,103,0.773,104,0.773,105,1.098,106,0.974,107,1.196,108,0.661,109,0.773,110,0.661,111,0.773,112,1.052,113,1.052,114,1.098,115,1.052,116,0.773,117,0.773,118,0.661,119,1.098,120,1.046,121,0.773,122,0.609,123,1.052,124,0.661,125,0.773,126,0.661,127,0.661,128,1.196,129,0.773,130,0.661,131,0.715,132,0.661,133,0.661,134,0.609,135,0.773,136,0.609,137,0.715,138,0.773,139,0.019,140,0.019,170,2.737,172,2.434,392,2.434,426,2.96,436,2.96,452,4.545,453,2.781,454,4.621,455,4.504,456,4.504,457,4.466,458,5.497,459,4.504,460,3.308,461,4.504,462,3.308,463,4.504,464,3.313,465,2.96,466,4.504,467,4.504,468,3.786,469,4.504]],["title/components/NewTaskComponent.html",[0,0.014,122,0.616]],["body/components/NewTaskComponent.html",[0,0.019,1,0.549,2,0.728,3,0.286,4,0.254,5,0.641,6,0.594,7,0.641,8,0.254,10,0.506,11,1.311,12,1.302,13,0.549,14,0.506,16,0.728,17,0.669,18,0.923,19,0.549,20,0.549,21,0.549,23,0.923,25,0.923,27,0.286,28,0.508,29,0.594,34,0.923,40,1.233,43,0.029,44,0.596,46,1.677,47,0.641,48,0.692,49,1.151,50,1.246,60,0.786,63,1.079,64,0.389,71,1.49,75,0.426,79,0.286,80,0.426,89,0.549,98,0.641,99,0.855,100,0.923,101,0.389,102,1.183,103,0.641,104,0.641,105,0.549,106,0.594,107,1.082,108,0.549,109,0.641,110,0.549,111,0.641,112,0.923,113,0.923,114,0.549,115,0.641,116,0.641,117,0.641,118,0.549,119,0.549,120,0.999,121,0.641,122,0.933,123,0.923,124,0.549,125,0.641,126,0.549,127,0.549,128,0.641,129,0.641,130,0.549,131,0.594,132,0.549,133,0.549,134,0.506,135,0.641,136,0.506,137,0.594,138,0.641,139,0.017,140,0.017,144,1.893,148,2.754,152,2.598,157,2.908,159,2.522,160,1.805,199,2.99,231,1.677,290,3.727,318,1.805,365,1.814,420,3.044,426,2.598,436,2.598,457,3.949,465,2.598,470,5.243,471,5.243,472,2.309,473,2.325,474,4.631,475,3.323,476,3.323,477,4.631,478,4.631,479,4.631,480,2.513,481,3.044,482,3.33,483,3.953,484,3.953,485,2.746,486,2.746,487,2.746,488,2.746,489,3.323,490,2.746,491,2.908,492,2.746,493,2.746,494,2.02,495,2.746,496,2.746,497,2.746,498,2.309,499,2.746,500,2.746,501,2.754,502,2.746,503,3.407,504,2.746,505,1.367,506,1.26,507,2.746,508,2.746,509,2.746,510,2.746,511,3.323,512,3.953,513,3.953]],["title/interfaces/NewTaskData.html",[416,1.418,514,1.987]],["body/interfaces/NewTaskData.html",[3,0.465,4,0.413,8,0.413,27,0.465,28,0.703,39,2.685,43,0.029,45,1.164,46,1.894,79,0.615,139,0.023,140,0.023,365,2.9,416,2.319,417,2.655,473,2.049,480,2.422,501,3.758,503,4.531,505,3.147,506,2.049,514,3.251,515,2.935,516,2.422,517,2.422,518,2.422,519,2.935]],["title/components/NotFoundComponent.html",[0,0.014,124,0.668]],["body/components/NotFoundComponent.html",[0,0.022,1,0.732,2,0.889,3,0.382,4,0.339,5,0.856,6,0.793,7,0.856,8,0.339,10,0.675,11,1.35,12,1.344,13,0.732,14,0.675,16,0.889,17,0.817,18,1.127,19,0.732,20,0.732,21,0.732,23,1.127,25,1.127,29,0.793,43,0.028,44,0.693,60,0.749,64,0.519,71,1.989,75,0.569,79,0.382,80,0.569,89,0.732,98,0.856,99,1.043,100,1.127,101,0.519,102,1.338,103,0.856,104,0.856,105,0.732,106,0.793,107,1.259,108,0.732,109,0.856,110,0.732,111,0.856,112,1.127,113,1.127,114,0.732,115,0.856,116,0.856,117,0.856,118,0.732,119,0.732,120,0.817,121,0.856,122,0.675,123,1.127,124,1.145,125,0.856,126,0.732,127,0.732,128,0.856,129,0.856,130,0.732,131,0.793,132,0.732,133,0.732,134,0.675,135,0.856,136,0.675,137,0.793,138,0.856,139,0.02,140,0.02,276,4.496,420,3.544,520,3.082,521,3.082,522,3.082,523,4.824,524,4.824,525,4.824,526,3.765,527,4.055,528,4.824,529,4.824,530,4.055]],["title/interfaces/Place.html",[189,1.813,416,1.418]],["body/interfaces/Place.html",[3,0.474,4,0.421,8,0.421,27,0.474,28,0.712,39,2.593,43,0.029,45,1.205,46,2.63,79,0.474,139,0.023,140,0.023,170,2.267,189,3.002,308,4.753,365,2.845,416,1.931,417,2.708,531,3.828,532,6.201,533,6.201,534,6.201,535,4.652,536,4.553,537,4.553]],["title/components/PlacesComponent.html",[0,0.014,126,0.668]],["body/components/PlacesComponent.html",[0,0.021,1,0.67,2,0.837,3,0.349,4,0.31,5,0.783,6,0.725,7,0.783,8,0.31,10,0.617,11,1.339,12,1.332,13,0.67,14,0.617,16,0.837,17,0.769,18,0.783,19,0.67,20,0.67,21,0.67,23,1.061,25,1.061,27,0.349,28,0.584,29,0.725,32,1.222,34,1.061,40,1.104,42,1.222,43,0.029,44,0.711,45,0.617,47,0.783,48,0.844,49,0.67,50,0.725,60,0.705,64,0.475,75,0.52,79,0.349,80,0.52,89,0.67,97,3.342,98,0.783,99,0.982,100,1.061,101,0.475,102,1.291,103,0.783,104,0.783,105,0.67,106,0.725,107,1.204,108,0.67,109,0.783,110,0.67,111,0.783,112,1.061,113,1.061,114,0.67,115,0.783,116,0.783,117,0.783,118,0.67,119,0.67,120,0.769,121,0.783,122,0.617,123,1.061,124,0.67,125,0.783,126,1.104,127,0.67,128,1.447,129,0.783,130,0.67,131,0.725,132,0.67,133,0.67,134,0.617,135,0.783,136,0.617,137,0.725,138,0.783,139,0.019,140,0.019,158,1.538,170,2.876,176,3.342,177,3.342,186,3.819,189,3.305,217,2.465,426,2.986,436,2.986,439,2.986,538,2.817,539,5.776,540,4.543,541,4.543,542,3.351,543,3.351,544,3.351,545,4.543,546,4.543]],["title/components/PlacesContainerComponent.html",[0,0.014,127,0.668]],["body/components/PlacesContainerComponent.html",[0,0.022,1,0.714,2,0.873,3,0.372,4,0.331,5,0.834,6,0.772,7,0.834,8,0.331,10,0.658,11,1.347,12,1.34,13,0.714,14,0.658,16,0.873,17,0.901,18,0.834,19,0.714,20,0.714,21,0.714,23,1.107,25,1.107,27,0.372,28,0.61,29,0.772,40,0.947,43,0.029,44,0.685,60,0.554,64,0.506,75,0.554,79,0.372,80,0.554,89,0.714,98,0.834,99,1.025,100,1.107,101,0.506,102,1.324,103,0.834,104,0.834,105,0.714,106,0.772,107,1.243,108,0.714,109,0.834,110,0.714,111,0.834,112,1.107,113,1.107,114,0.714,115,0.834,116,0.834,117,0.834,118,0.714,119,0.714,120,0.803,121,0.834,122,0.658,123,1.107,124,0.714,125,0.834,126,0.714,127,1.133,128,1.446,129,0.834,130,0.714,131,0.772,132,0.714,133,0.714,134,0.658,135,0.834,136,0.658,137,0.772,138,0.834,139,0.02,140,0.02,158,1.639,170,2.65,219,3.498,365,2.84,367,3.116,427,2.347,439,2.347,547,4.474,548,3.002,549,3.986,550,4.741,551,4.741,552,4.741]],["title/directives/SafeLinkDirective.html",[101,0.473,136,0.616]],["body/directives/SafeLinkDirective.html",[3,0.412,4,0.367,8,0.367,10,0.73,11,1.014,12,0.791,16,0.934,17,0.859,27,0.412,28,0.652,32,1.444,34,1.185,40,1.118,42,1.444,43,0.029,44,0.509,45,0.73,47,0.925,48,0.998,49,1.014,50,1.097,60,0.615,63,1.556,64,0.561,75,0.615,79,0.412,80,0.615,82,1.556,101,0.792,136,0.934,137,1.097,139,0.022,140,0.022,144,1.894,158,2.568,162,2.603,225,2.603,231,2.374,306,4.96,449,3.329,553,4.96,554,4.341,555,3.329,556,5.596,557,5.596,558,5.072,559,5.072,560,5.596,561,3.961,562,2.914,563,5.072,564,3.961,565,4.264,566,4.264,567,3.961,568,3.329,569,3.961,570,3.329,571,5.072,572,3.961,573,3.329,574,2.914,575,5.072,576,5.072,577,5.072,578,5.072,579,3.961]],["title/components/SimpleFormComponent.html",[0,0.014,130,0.668]],["body/components/SimpleFormComponent.html",[0,0.02,1,0.486,2,0.666,3,0.253,4,0.225,5,0.568,6,0.525,7,0.568,8,0.225,10,0.448,11,1.292,12,1.287,13,0.486,14,0.448,16,0.666,17,0.809,18,0.844,19,0.486,20,0.486,21,0.486,23,0.844,25,0.844,27,0.253,28,0.465,29,0.525,34,0.844,36,3.039,40,1.07,43,0.029,44,0.555,47,0.844,48,1.087,49,0.722,50,1.105,60,0.67,63,0.955,64,0.344,75,0.377,79,0.253,80,0.377,82,2.104,89,0.486,98,0.568,99,0.782,100,0.844,101,0.344,102,1.116,103,0.568,104,0.568,105,0.486,106,0.525,107,1.008,108,0.486,109,0.568,110,0.486,111,0.568,112,0.844,113,0.844,114,0.486,115,0.568,116,0.568,117,0.568,118,0.486,119,0.486,120,0.965,121,0.568,122,0.448,123,0.844,124,0.486,125,0.568,126,0.486,127,0.486,128,0.568,129,0.568,130,0.955,131,1.199,132,0.486,133,0.486,134,0.448,135,0.568,136,0.448,137,0.525,138,0.568,139,0.015,140,0.015,144,1.461,174,1.961,175,2.837,185,3.141,192,2.659,206,1.788,223,1.788,231,1.831,269,3.141,281,3.645,284,1.597,285,3.388,286,3.628,287,3.039,288,3.039,290,3.516,293,3.628,294,4.501,295,4.295,296,4.295,297,4.018,298,3.039,300,4.501,301,3.039,317,3.175,318,1.597,319,2.376,325,1.597,327,2.043,580,3.645,581,3.645,582,4.316,583,5.109,584,5.109,585,2.43,586,2.43,587,2.43,588,3.615,589,2.659,590,3.175,591,2.43,592,2.43,593,2.43,594,2.43,595,2.43,596,2.43,597,1.445,598,3.175,599,3.175,600,2.043,601,2.43,602,2.043,603,2.43,604,2.43,605,2.43,606,2.43,607,2.43,608,2.43,609,2.43,610,2.43,611,2.43,612,3.615,613,3.615,614,3.615,615,2.43,616,2.43,617,2.43,618,2.43,619,2.43,620,2.43,621,2.43,622,3.615,623,3.615,624,3.615,625,2.43,626,2.43,627,2.43,628,2.43,629,2.43,630,2.43,631,2.43,632,2.43,633,4.779,634,4.779,635,4.779,636,3.615,637,3.615,638,3.615,639,3.615]],["title/interfaces/Task.html",[416,1.418,473,1.534]],["body/interfaces/Task.html",[3,0.451,4,0.401,8,0.401,27,0.451,28,0.69,39,2.694,43,0.029,45,1.192,46,2.586,79,0.607,139,0.023,140,0.023,365,2.875,416,2.277,417,2.577,473,2.463,480,3.307,501,3.726,503,3.188,505,3.12,506,1.989,514,2.577,515,2.848,516,2.351,517,2.351,518,2.351,519,4.007]],["title/components/TaskComponent.html",[0,0.014,132,0.668]],["body/components/TaskComponent.html",[0,0.021,1,0.21,2,0.535,3,0.109,4,0.097,5,0.567,6,0.525,7,0.567,8,0.097,10,0.193,11,1.107,12,1.083,13,0.657,14,0.999,16,0.337,17,0.411,18,0.427,19,0.21,20,0.21,21,0.21,23,0.427,25,0.427,27,0.109,28,0.235,29,0.227,32,0.666,34,0.427,39,1.419,40,1.096,42,0.383,43,0.029,44,0.373,45,0.447,47,0.961,48,1.086,49,0.979,50,0.97,60,0.76,62,3.037,63,0.412,64,0.149,72,0.882,73,0.69,74,0.882,75,0.696,76,0.882,77,0.772,78,3.9,79,0.109,80,0.602,82,1.616,89,0.21,96,3.457,98,0.245,99,0.395,100,0.678,101,0.55,102,0.678,103,0.245,104,0.245,105,0.21,106,0.839,107,0.567,108,0.58,109,0.245,110,0.58,111,0.768,112,0.427,113,0.427,114,0.21,115,0.245,116,0.245,117,0.245,118,0.21,119,0.58,120,0.611,121,0.245,122,0.193,123,0.427,124,0.21,125,0.245,126,0.21,127,0.21,128,0.567,129,0.245,130,0.58,131,0.711,132,0.58,133,0.21,134,0.535,135,0.245,136,0.535,137,0.227,138,0.245,139,0.008,140,0.008,142,1.536,144,0.821,148,0.624,152,1.201,157,0.772,158,0.482,159,1.445,160,0.69,161,0.772,162,2.162,174,0.991,175,1.595,185,1.908,197,2.656,199,1.445,226,1.201,227,2.373,235,2.373,239,2.703,242,1.344,243,1.344,244,1.087,250,1.201,257,1.201,264,2.373,268,1.536,271,1.201,274,1.087,282,0.69,283,0.69,285,2.147,355,1.536,356,0.882,358,1.536,367,1.201,376,0.991,388,4.015,398,1.536,405,1.536,413,1.536,427,0.69,432,1.785,438,0.882,439,0.69,452,1.344,454,1.536,457,1.344,464,3.513,465,1.201,473,1.887,475,1.536,476,1.536,481,2.949,482,1.201,505,1.798,506,2.247,516,2.106,517,1.316,518,1.575,526,1.201,549,1.536,554,0.772,562,1.344,566,1.536,568,3.457,570,0.882,573,2.44,580,0.69,581,0.69,597,1.956,598,2.42,599,2.42,640,0.882,641,3.289,642,1.595,643,4.112,644,2.902,645,3.289,646,3.289,647,3.289,648,3.289,649,3.9,650,1.827,651,2.902,652,2.902,653,2.902,654,2.902,655,2.902,656,2.902,657,1.827,658,1.05,659,1.827,660,1.05,661,0.882,662,1.05,663,1.05,664,1.05,665,1.05,666,1.05,667,1.05,668,1.827,669,1.05,670,1.827,671,1.05,672,1.827,673,1.05,674,1.827,675,1.827,676,1.05,677,1.05,678,1.05,679,1.05,680,1.05,681,2.04,682,1.827,683,3.625,684,1.827,685,2.44,686,1.05,687,1.827,688,1.05,689,0.882,690,1.05,691,1.05,692,1.05,693,3.9,694,2.445,695,1.05,696,1.05,697,1.05,698,1.827,699,1.827,700,1.05,701,1.05,702,1.827,703,1.595,704,0.882,705,0.882,706,3.625,707,3.035,708,3.683,709,1.05,710,0.69,711,3.881,712,1.05,713,3.263,714,1.05,715,1.05,716,0.882,717,2.765,718,2.902,719,2.04,720,1.05,721,1.05,722,1.05,723,1.05,724,1.05,725,1.05,726,1.05,727,1.05,728,5.352,729,3.61,730,2.902,731,1.827,732,1.827,733,2.44,734,3.457,735,1.827,736,4.112,737,1.827,738,1.827,739,2.902,740,1.827,741,1.827,742,2.902,743,1.827,744,2.902,745,1.344,746,1.344,747,1.536,748,2.902,749,1.536,750,1.536,751,2.656,752,1.536,753,1.827,754,2.902,755,1.827,756,1.827,757,1.536,758,1.827,759,2.373,760,2.902,761,1.827,762,1.827,763,1.827,764,1.827,765,1.827,766,1.536,767,1.05,768,1.05,769,1.536,770,2.656,771,2.656,772,2.902,773,1.827,774,1.201,775,1.827,776,1.827,777,1.536,778,1.827,779,1.827,780,1.827,781,2.902,782,1.827,783,1.827,784,1.827,785,1.827,786,1.536,787,1.827,788,1.827,789,1.827,790,1.827,791,1.827,792,2.902,793,3.61,794,2.902,795,2.902,796,1.827,797,1.827,798,1.827,799,1.536,800,2.902,801,2.902,802,1.827,803,1.344,804,1.201,805,2.426,806,2.902,807,2.902,808,1.827,809,1.05,810,1.05,811,1.05,812,2.902,813,1.827,814,1.827,815,3.035,816,1.827,817,1.827,818,1.827,819,4.112,820,1.827,821,1.827,822,1.827,823,1.536,824,1.827,825,1.827,826,1.827,827,1.536,828,1.827,829,2.902,830,1.827,831,1.536,832,1.827,833,1.536,834,1.827,835,1.827,836,1.827,837,1.827,838,1.827,839,1.827,840,1.827,841,1.536,842,1.827,843,1.827,844,1.827,845,1.827,846,1.827,847,1.827,848,3.025,849,1.827,850,1.827,851,1.827,852,1.827,853,1.827,854,1.827,855,3.61,856,1.827,857,3.035,858,1.827,859,1.536,860,2.902,861,1.827,862,1.827,863,1.827,864,1.536,865,1.827,866,2.902,867,1.827,868,1.827,869,1.827,870,1.827,871,3.61,872,2.44,873,1.827,874,1.827,875,1.827,876,1.827,877,1.827,878,1.827,879,1.827,880,1.536,881,1.827,882,2.135,883,2.902,884,1.827,885,1.827,886,4.112,887,3.61,888,1.827,889,3.61,890,1.827,891,1.827,892,1.827,893,1.827,894,1.827,895,1.827,896,2.902,897,1.827,898,1.827,899,1.827,900,1.827,901,1.536,902,1.827,903,1.536,904,1.827,905,1.827,906,1.827,907,1.827,908,1.827,909,1.827,910,1.827,911,1.05,912,1.05]],["title/injectables/TaskService.html",[159,1.664,376,1.813]],["body/injectables/TaskService.html",[3,0.33,4,0.293,8,0.293,13,0.633,27,0.33,28,0.562,32,2.064,34,1.021,39,2.514,40,1.24,42,2.064,43,0.029,44,0.728,45,1.043,46,2.123,47,1.368,48,1.427,49,0.873,50,0.945,60,0.777,61,2.329,62,1.718,64,0.448,79,0.33,80,0.491,82,1.244,89,1.131,101,0.448,120,0.536,139,0.019,140,0.019,144,1.694,148,2.976,159,2.176,161,2.329,165,2.662,199,1.577,231,1.854,365,1.453,376,1.718,377,2.329,473,2.806,480,3.255,501,1.883,505,2.176,514,3.209,516,2.928,519,2.081,661,3.674,717,4.537,913,2.662,914,5.005,915,4.371,916,4.371,917,4.371,918,5.397,919,4.371,920,4.371,921,4.371,922,4.371,923,3.166,924,4.371,925,3.166,926,4.371,927,3.166,928,3.166,929,4.371,930,5.005,931,3.166,932,4.371,933,4.371,934,3.166,935,4.371,936,4.371,937,3.166,938,3.166,939,2.329,940,3.166,941,3.166,942,3.166,943,3.166,944,3.166,945,3.166,946,3.166,947,4.371,948,3.166,949,3.166,950,3.166,951,3.166,952,2.662,953,4.371,954,3.166,955,4.371,956,3.166,957,3.674,958,3.166,959,3.166,960,3.166]],["title/components/TasksComponent.html",[0,0.014,133,0.668]],["body/components/TasksComponent.html",[0,0.015,1,0.375,2,0.546,3,0.195,4,0.174,5,0.438,6,0.405,7,0.438,8,0.174,10,0.345,11,1.245,12,1.23,13,0.375,14,0.345,16,0.546,17,0.502,18,0.692,19,0.375,20,0.375,21,0.375,22,3.087,23,0.692,25,0.692,27,0.195,28,0.381,29,0.405,32,0.684,34,0.692,39,1.443,40,1.162,42,0.684,43,0.029,44,0.537,45,0.345,46,1.257,47,0.858,48,0.472,49,1.162,50,1.24,55,1.232,60,0.749,61,1.379,62,1.607,63,0.737,64,0.266,71,1.017,75,0.291,79,0.382,80,0.291,82,2.315,84,1.379,89,1.078,97,2.179,98,0.438,99,0.641,100,0.692,101,0.266,102,0.975,103,0.438,104,0.438,105,0.375,106,0.405,107,0.858,108,0.375,109,0.438,110,0.375,111,0.438,112,0.692,113,0.692,114,0.375,115,0.438,116,0.438,117,0.438,118,0.375,119,0.375,120,0.769,121,0.438,122,0.345,123,0.692,124,0.375,125,0.438,126,0.375,127,0.375,128,0.438,129,0.438,130,0.375,131,0.405,132,0.834,133,0.834,134,0.345,135,0.438,136,0.345,137,0.405,138,0.438,139,0.013,140,0.013,144,2.016,148,2.184,152,1.947,159,2.077,160,1.232,162,2.414,178,2.179,199,2.61,231,2.344,285,1.115,340,1.576,420,2.414,432,3.857,473,2.085,480,2.465,481,3.547,482,2.742,489,3.507,491,2.179,494,3.553,498,1.576,505,1.475,506,2.216,511,3.087,517,1.607,518,2.264,562,1.379,597,1.115,681,2.49,683,4.06,685,2.49,705,3.087,710,1.232,719,3.507,833,1.576,952,4.06,957,2.49,961,1.379,962,2.962,963,2.962,964,4.172,965,4.543,966,4.83,967,3.672,968,4.543,969,5.057,970,2.962,971,1.875,972,2.962,973,1.875,974,2.962,975,1.875,976,1.875,977,2.962,978,1.875,979,1.875,980,1.875,981,1.875,982,1.875,983,2.962,984,1.875,985,2.962,986,2.962,987,2.962,988,2.962,989,2.962,990,2.962,991,2.49,992,4.172,993,2.962,994,2.962,995,2.962,996,4.83,997,2.962,998,2.962,999,2.962,1000,2.962,1001,2.962,1002,4.543,1003,2.962,1004,2.962,1005,1.875,1006,2.962,1007,1.875,1008,1.875,1009,3.507,1010,1.875,1011,3.087,1012,3.087,1013,1.875,1014,1.875,1015,1.875,1016,1.875,1017,1.875,1018,1.875,1019,2.962,1020,1.875,1021,1.875,1022,1.875,1023,1.875,1024,1.875,1025,1.875,1026,1.875,1027,1.875,1028,1.875,1029,1.875,1030,1.875,1031,1.875,1032,1.875,1033,3.672,1034,1.875,1035,1.875,1036,1.875,1037,1.875,1038,1.875,1039,3.672,1040,1.875,1041,1.875,1042,1.875,1043,1.875,1044,1.875,1045,1.379,1046,3.087,1047,1.576,1048,1.576,1049,1.576,1050,1.379,1051,1.576,1052,2.962,1053,2.962,1054,2.962]],["title/pipes/TemperaturePipe.html",[642,2.197,694,1.987]],["body/pipes/TemperaturePipe.html",[3,0.36,4,0.32,8,0.32,10,0.637,16,0.855,17,0.948,32,1.26,34,0.808,39,2.294,40,0.691,42,1.26,43,0.03,44,0.674,45,0.637,47,0.808,49,0.691,50,1.35,60,0.537,64,0.49,79,0.36,80,0.537,82,2.058,139,0.02,140,0.02,174,1.876,308,4.422,325,3.679,642,3.05,649,3.901,694,3.114,703,2.273,903,2.907,1055,2.907,1056,5.237,1057,2.907,1058,4.64,1059,6.011,1060,6.388,1061,6.241,1062,6.14,1063,3.458,1064,3.458,1065,4.64,1066,3.458,1067,3.458,1068,3.458,1069,3.458,1070,3.458,1071,3.458,1072,3.458,1073,3.458,1074,6.011,1075,3.458,1076,3.458,1077,5.597,1078,4.64,1079,4.64,1080,4.64,1081,5.597,1082,5.237,1083,5.237,1084,3.458]],["title/coverage.html",[1085,3.812]],["body/coverage.html",[0,0.027,1,0.597,8,0.277,9,2.512,19,0.597,20,0.597,21,0.597,30,1.488,43,0.029,45,0.773,55,1.964,69,2.198,87,1.777,101,0.594,105,0.597,108,0.597,110,0.597,114,0.597,118,0.597,119,0.597,120,0.506,122,0.55,124,0.597,126,0.597,127,0.597,130,0.597,132,0.597,133,0.597,134,0.55,136,0.55,139,0.018,140,0.018,141,2.512,159,1.488,170,2.862,171,2.512,172,2.198,173,3.088,189,1.621,209,1.964,211,1.777,213,1.964,219,1.964,274,4.056,277,2.512,281,3.644,282,2.759,283,2.759,284,3.644,303,2.198,319,3.189,359,3.189,360,2.512,376,2.277,378,2.512,391,2.512,392,2.198,407,2.512,416,2.232,418,2.512,419,2.512,442,2.512,452,3.088,453,2.512,470,2.512,471,2.512,472,2.512,473,1.371,514,1.777,515,3.189,516,1.621,520,2.512,521,2.512,522,2.512,531,2.512,538,2.512,547,2.512,548,2.512,553,2.512,554,2.198,555,2.512,565,2.512,574,3.088,580,3.189,581,3.189,589,2.198,590,2.198,640,2.512,642,1.964,694,1.777,704,5.218,913,2.512,939,2.198,961,3.57,1045,2.198,1050,2.198,1055,2.512,1085,2.512,1086,2.988,1087,2.988,1088,2.988,1089,4.852,1090,2.512,1091,2.512,1092,6.557,1093,3.529,1094,3.529,1095,4.198,1096,5.263,1097,4.198,1098,5.263,1099,2.988,1100,2.988,1101,2.988,1102,4.198,1103,2.988,1104,2.512,1105,3.529,1106,2.512,1107,2.512,1108,2.512,1109,2.512,1110,2.512,1111,2.512,1112,2.512,1113,2.512,1114,2.512,1115,2.512,1116,2.512,1117,2.512,1118,2.988,1119,2.198,1120,2.198,1121,2.198,1122,2.198,1123,2.988,1124,2.988]],["title/dependencies.html",[774,2.637,1125,2.357]],["body/dependencies.html",[43,0.029,64,0.695,71,2.664,139,0.025,140,0.025,318,3.227,597,2.92,689,4.127,774,3.227,1126,6.638,1127,4.91,1128,5.789,1129,4.866,1130,4.127,1131,4.91,1132,4.91,1133,4.91,1134,4.91,1135,4.91]],["title/miscellaneous/functions.html",[1136,1.521,1137,3.373]],["body/miscellaneous/functions.html",[27,0.493,32,2.209,42,2.209,43,0.027,44,0.779,45,1.116,139,0.024,140,0.024,281,3.722,282,3.109,283,3.109,284,4.221,303,4.166,317,4.796,320,3.976,580,3.109,581,3.109,589,4.166,590,4.166,600,3.976,602,3.976,786,5.095,1136,2.566,1137,3.976,1138,5.662,1139,4.73]],["title/index.html",[27,0.292,338,2.357,1140,2.804]],["body/index.html",[0,0.023,2,0.725,4,0.365,14,1.085,43,0.021,49,1.01,73,2.588,75,0.611,77,2.897,106,0.852,120,0.667,139,0.021,140,0.021,212,2.588,250,2.588,257,2.588,343,3.718,414,3.31,415,2.897,468,3.31,506,1.807,526,2.588,703,2.588,708,4.584,710,3.322,734,3.31,745,2.897,751,2.897,759,3.322,769,4.691,777,3.31,848,2.897,857,4.691,859,3.31,864,3.31,880,3.31,1129,3.31,1141,3.938,1142,5.581,1143,3.938,1144,6.089,1145,3.938,1146,5.054,1147,3.938,1148,3.938,1149,6.089,1150,6.231,1151,3.938,1152,5.054,1153,3.938,1154,3.938,1155,3.938,1156,3.31,1157,5.054,1158,3.938,1159,3.938,1160,3.31,1161,5.581,1162,3.938,1163,3.938,1164,3.938,1165,3.938,1166,3.938,1167,3.938,1168,3.938,1169,3.938,1170,3.938,1171,3.938,1172,3.938,1173,3.938,1174,3.938,1175,5.054,1176,5.581,1177,3.938,1178,3.938,1179,3.938,1180,3.31,1181,5.581,1182,3.938,1183,6.231,1184,3.938,1185,5.054,1186,3.938,1187,3.938,1188,3.938,1189,3.938,1190,3.31,1191,3.938,1192,3.938,1193,3.938,1194,2.897,1195,3.938]],["title/modules.html",[804,2.981]],["body/modules.html",[43,0.026,139,0.026,140,0.026,804,3.501]],["title/overview.html",[1194,3.336]],["body/overview.html",[2,0.957,43,0.025,75,0.806,139,0.025,140,0.025,377,3.82,417,3.088,694,3.088,716,4.366,1194,3.82,1196,5.193,1197,5.981,1198,5.193]],["title/properties.html",[28,0.516,1125,2.357]],["body/properties.html",[28,0.68,43,0.027,139,0.026,140,0.026,415,3.889,1199,5.286]],["title/miscellaneous/typealiases.html",[1136,1.521,1200,4.013]],["body/miscellaneous/typealiases.html",[27,0.538,43,0.027,45,0.952,139,0.025,140,0.025,506,2.371,515,3.396,516,3.236,517,2.803,518,2.803,1136,2.803,1201,5.167,1202,5.167]],["title/miscellaneous/variables.html",[1136,1.521,1203,3.373]],["body/miscellaneous/variables.html",[0,0.014,2,0.411,6,0.483,14,0.993,17,0.575,27,0.233,43,0.029,44,0.714,45,1.086,46,2.636,49,1.159,50,1.275,55,2.23,62,2.485,73,1.468,75,0.526,81,4.086,82,2.038,84,1.643,89,0.446,99,0.483,120,0.378,122,0.411,139,0.014,140,0.014,209,2.23,211,2.017,213,2.23,229,1.643,231,1.943,239,2.23,244,1.328,254,1.877,274,2.439,285,1.328,319,1.468,335,1.877,343,1.643,365,2.549,427,1.468,464,3.018,465,1.468,480,3.086,481,1.468,482,1.468,491,1.643,494,2.496,501,3.303,505,2.765,506,2.38,517,1.212,518,1.212,519,3.651,527,1.877,535,1.877,574,3.37,597,2.439,598,2.496,599,2.496,703,2.23,706,3.448,708,1.643,713,2.852,733,2.852,745,1.643,746,1.643,747,1.877,749,1.877,750,1.877,751,1.643,752,1.877,757,1.877,759,1.468,770,2.496,771,2.496,774,1.468,803,1.643,815,1.877,823,3.448,827,1.877,841,2.852,848,3.018,872,1.877,882,3.018,901,1.877,939,2.496,961,1.643,991,1.877,1009,2.852,1011,2.852,1012,2.852,1045,2.496,1046,3.448,1047,1.877,1048,1.877,1049,1.877,1050,2.496,1051,1.877,1057,1.877,1090,1.877,1091,2.852,1093,1.877,1094,3.448,1104,1.877,1105,3.448,1106,1.877,1107,2.852,1108,2.852,1109,1.877,1110,1.877,1111,2.852,1112,2.852,1113,1.877,1114,1.877,1115,1.877,1116,2.852,1117,3.448,1119,1.643,1120,2.496,1121,1.643,1122,2.496,1136,1.212,1160,1.877,1203,1.877,1204,2.233,1205,2.233,1206,4.102,1207,2.233,1208,3.392,1209,3.392,1210,2.233,1211,2.233,1212,2.233,1213,2.233,1214,2.233,1215,2.233,1216,2.233,1217,2.233,1218,2.233,1219,2.233,1220,2.233,1221,2.233,1222,2.233,1223,2.233,1224,2.233,1225,3.392,1226,5.391,1227,3.392,1228,3.392,1229,3.392,1230,3.392,1231,2.233,1232,3.392,1233,3.392,1234,3.392,1235,2.233,1236,2.233,1237,2.233,1238,2.233,1239,2.233,1240,2.233,1241,5.554,1242,5.554,1243,5.554,1244,2.233,1245,2.233,1246,2.233,1247,2.233,1248,3.392,1249,2.233,1250,3.392,1251,2.233,1252,2.233,1253,2.233,1254,4.102,1255,2.233,1256,2.233,1257,2.233,1258,2.233,1259,2.233,1260,2.233,1261,4.102,1262,2.233,1263,2.233,1264,2.233,1265,2.233,1266,2.233,1267,2.233,1268,2.233,1269,2.233,1270,2.233,1271,2.233,1272,2.233,1273,3.392,1274,2.233,1275,2.233,1276,2.233,1277,3.392,1278,2.233,1279,2.233,1280,2.233,1281,2.233,1282,2.233,1283,3.392,1284,3.392,1285,2.233,1286,3.392,1287,2.233,1288,2.233,1289,2.233,1290,2.233,1291,2.233]],["title/additional-documentation/microfrontends-architecture.html",[526,1.587,1190,2.03,1292,2.03,1293,2.03]],["body/additional-documentation/microfrontends-architecture.html",[12,1.063,14,1.172,15,3.497,43,0.023,45,0.787,139,0.023,140,0.023,211,3.164,212,2.807,225,3.809,226,3.809,227,2.807,228,3.142,235,3.986,244,2.54,245,4.263,264,2.807,271,2.807,530,3.591,693,3.591,707,3.591,710,2.807,746,3.142,759,2.807,766,4.472,770,3.142,771,3.142,799,4.472,803,3.142,804,2.807,831,3.591,882,3.142,1119,3.142,1120,3.142,1121,3.142,1122,3.142,1130,3.591,1156,3.591,1180,3.591,1292,4.871,1293,3.591,1294,4.271,1295,4.271,1296,5.794,1297,4.271,1298,4.271,1299,5.32,1300,6.24,1301,5.32,1302,5.32,1303,4.271,1304,4.271,1305,4.271,1306,4.271,1307,4.271,1308,4.271,1309,5.794,1310,4.271,1311,5.32,1312,4.271,1313,4.271,1314,4.271,1315,4.271,1316,4.271,1317,4.271,1318,4.271,1319,4.271]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["0",{"_index":274,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1199,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":716,"title":{},"body":{"components/TaskComponent.html":{},"overview.html":{}}}],["12",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1311,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["17",{"_index":1196,"title":{},"body":{"overview.html":{}}}],["19",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["19'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["19.2.0",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["19.2.8",{"_index":1145,"title":{},"body":{"index.html":{}}}],["2",{"_index":1197,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["2025",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["31",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":1080,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["4",{"_index":1198,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1079,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["6",{"_index":636,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["64;injectable",{"_index":784,"title":{},"body":{"components/TaskComponent.html":{}}}],["64;optional",{"_index":809,"title":{},"body":{"components/TaskComponent.html":{}}}],["64;self",{"_index":810,"title":{},"body":{"components/TaskComponent.html":{}}}],["64;skipself",{"_index":811,"title":{},"body":{"components/TaskComponent.html":{}}}],["7.8.0",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1078,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["_error",{"_index":379,"title":{},"body":{"injectables/ErrorService.html":{}}}],["a.id.localecompare(b.id",{"_index":1003,"title":{},"body":{"components/TasksComponent.html":{}}}],["a19",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["a19.interceptor.ts",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["a[appsafelink",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["abstractcontrol",{"_index":317,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{},"miscellaneous/functions.html":{}}}],["accept",{"_index":765,"title":{},"body":{"components/TaskComponent.html":{}}}],["access",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessible",{"_index":893,"title":{},"body":{"components/TaskComponent.html":{}}}],["accessing",{"_index":985,"title":{},"body":{"components/TasksComponent.html":{}}}],["accessors",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/SimpleFormComponent.html":{}}}],["activated",{"_index":889,"title":{},"body":{"components/TaskComponent.html":{}}}],["activatedroute",{"_index":494,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["activatedroute.parammap.get('lessonid",{"_index":1047,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["activatedroutesnapshot",{"_index":1009,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["activepermission",{"_index":914,"title":{},"body":{"injectables/TaskService.html":{}}}],["actual_component",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["add",{"_index":511,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["adding",{"_index":268,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["addition",{"_index":813,"title":{},"body":{"components/TaskComponent.html":{}}}],["additional",{"_index":1190,"title":{"additional-documentation/microfrontends-architecture.html":{}},"body":{"index.html":{}}}],["address",{"_index":306,"title":{},"body":{"components/ComplexFormComponent.html":{},"directives/SafeLinkDirective.html":{}}}],["addtask",{"_index":915,"title":{},"body":{"injectables/TaskService.html":{}}}],["addtask(task",{"_index":922,"title":{},"body":{"injectables/TaskService.html":{}}}],["advanced",{"_index":793,"title":{},"body":{"components/TaskComponent.html":{}}}],["afterviewinit",{"_index":443,"title":{},"body":{"components/ModalComponent.html":{}}}],["again",{"_index":270,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["agree",{"_index":354,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["alias",{"_index":565,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{}}}],["aliases",{"_index":1201,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":841,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":239,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["alt",{"_index":537,"title":{},"body":{"interfaces/Place.html":{}}}],["always",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["angular/common",{"_index":689,"title":{},"body":{"components/TaskComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":700,"title":{},"body":{"components/TaskComponent.html":{}}}],["angular/forms",{"_index":318,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["another",{"_index":778,"title":{},"body":{"components/TaskComponent.html":{}}}],["ans",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":850,"title":{},"body":{"components/TaskComponent.html":{}}}],["apihost",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["appauth",{"_index":142,"title":{},"body":{"directives/AuthDirective.html":{},"components/TaskComponent.html":{}}}],["appauth]'},{'name",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1091,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":749,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":759,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["applicationconfig",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationstate",{"_index":835,"title":{},"body":{"components/TaskComponent.html":{}}}],["applies",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{}}}],["apps",{"_index":798,"title":{},"body":{"components/TaskComponent.html":{}}}],["appsafelink",{"_index":566,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["architecture",{"_index":1293,"title":{"additional-documentation/microfrontends-architecture.html":{}},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["array",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{}}}],["artifacts",{"_index":1168,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1002,"title":{},"body":{"components/TasksComponent.html":{}}}],["ascending",{"_index":1054,"title":{},"body":{"components/TasksComponent.html":{}}}],["asigment",{"_index":397,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["assets/dummy",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["assets/mf",{"_index":433,"title":{},"body":{"components/LessonComponent.html":{}}}],["associate",{"_index":905,"title":{},"body":{"components/TaskComponent.html":{}}}],["associated",{"_index":909,"title":{},"body":{"components/TaskComponent.html":{}}}],["async",{"_index":184,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["asyncvalidators",{"_index":588,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["atribute",{"_index":570,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["attribute",{"_index":748,"title":{},"body":{"components/TaskComponent.html":{}}}],["attributes",{"_index":754,"title":{},"body":{"components/TaskComponent.html":{}}}],["auth",{"_index":164,"title":{},"body":{"directives/AuthDirective.html":{}}}],["authdirective",{"_index":134,"title":{"directives/AuthDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["authenticated",{"_index":894,"title":{},"body":{"components/TaskComponent.html":{}}}],["authentication",{"_index":854,"title":{},"body":{"components/TaskComponent.html":{}}}],["automatically",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["availableplacescomponent",{"_index":105,"title":{"components/AvailablePlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["avatar",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lesson.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":233,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["aware",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["b",{"_index":1001,"title":{},"body":{"components/TasksComponent.html":{}}}],["b.id.localecompare(a.id",{"_index":1004,"title":{},"body":{"components/TasksComponent.html":{}}}],["back",{"_index":529,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["basis",{"_index":758,"title":{},"body":{"components/TaskComponent.html":{}}}],["before",{"_index":887,"title":{},"body":{"components/TaskComponent.html":{}}}],["beginning",{"_index":987,"title":{},"body":{"components/TasksComponent.html":{}}}],["behavior",{"_index":750,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["best",{"_index":344,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["between",{"_index":244,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["beyond",{"_index":796,"title":{},"body":{"components/TaskComponent.html":{}}}],["biding",{"_index":733,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["binding",{"_index":739,"title":{},"body":{"components/TaskComponent.html":{}}}],["bit",{"_index":337,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["blocking",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["board",{"_index":334,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["boolean",{"_index":930,"title":{},"body":{"injectables/TaskService.html":{}}}],["break",{"_index":718,"title":{},"body":{"components/TaskComponent.html":{}}}],["browser",{"_index":1129,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":769,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["buildthis",{"_index":1165,"title":{},"body":{"index.html":{}}}],["buld",{"_index":836,"title":{},"body":{"components/TaskComponent.html":{}}}],["button",{"_index":838,"title":{},"body":{"components/TaskComponent.html":{}}}],["c",{"_index":1082,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["called",{"_index":760,"title":{},"body":{"components/TaskComponent.html":{}}}],["canactivate",{"_index":890,"title":{},"body":{"components/TaskComponent.html":{}}}],["cancel",{"_index":512,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["candeactivate",{"_index":898,"title":{},"body":{"components/TaskComponent.html":{}}}],["candeactivatefn",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canleaveeditpage",{"_index":1108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["canload",{"_index":902,"title":{},"body":{"components/TaskComponent.html":{}}}],["canmatch",{"_index":884,"title":{},"body":{"components/TaskComponent.html":{}}}],["canmatchfn",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":278,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["card.component.html",{"_index":279,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":280,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":108,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["case",{"_index":683,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["catch",{"_index":261,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["cel",{"_index":1060,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["certain",{"_index":896,"title":{},"body":{"components/TaskComponent.html":{}}}],["chache",{"_index":1069,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["chance",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":729,"title":{},"body":{"components/TaskComponent.html":{}}}],["changes",{"_index":991,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["characters",{"_index":637,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["check",{"_index":332,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["child",{"_index":1023,"title":{},"body":{"components/TasksComponent.html":{}}}],["childpath",{"_index":1030,"title":{},"body":{"components/TasksComponent.html":{}}}],["choose",{"_index":1188,"title":{},"body":{"index.html":{}}}],["city",{"_index":310,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["class",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["classes",{"_index":823,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["clearerror",{"_index":380,"title":{},"body":{"injectables/ErrorService.html":{}}}],["cli",{"_index":1144,"title":{},"body":{"index.html":{}}}],["click",{"_index":568,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["click)=\"onclick",{"_index":741,"title":{},"body":{"components/TaskComponent.html":{}}}],["clickcount",{"_index":643,"title":{},"body":{"components/TaskComponent.html":{}}}],["clicking",{"_index":837,"title":{},"body":{"components/TaskComponent.html":{}}}],["close",{"_index":457,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["code",{"_index":343,"title":{},"body":{"components/ComplexFormComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["collection",{"_index":467,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["combine",{"_index":755,"title":{},"body":{"components/TaskComponent.html":{}}}],["come",{"_index":1187,"title":{},"body":{"index.html":{}}}],["command",{"_index":1181,"title":{},"body":{"index.html":{}}}],["communicate",{"_index":842,"title":{},"body":{"components/TaskComponent.html":{}}}],["communication",{"_index":1306,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["comparisons",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compile",{"_index":1166,"title":{},"body":{"index.html":{}}}],["complements",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":257,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["completed",{"_index":685,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["completely",{"_index":868,"title":{},"body":{"components/TaskComponent.html":{}}}],["complex",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["complexformcomponent",{"_index":110,"title":{"components/ComplexFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component.entereddate().length",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component.enteredsummary().length",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component.enteredtitle().length",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component.ts",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["components/header/header.component",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["components/lesson/lesson.component",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["components/task/task.model",{"_index":938,"title":{},"body":{"injectables/TaskService.html":{}}}],["computed",{"_index":432,"title":{},"body":{"components/LessonComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["concrete",{"_index":822,"title":{},"body":{"components/TaskComponent.html":{}}}],["conditional",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conditionally",{"_index":1025,"title":{},"body":{"components/TasksComponent.html":{}}}],["conditions",{"_index":355,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{}}}],["configuration",{"_index":766,"title":{},"body":{"components/TaskComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["confirm",{"_index":339,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["confirm('are",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmpassword",{"_index":302,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["confirmpassword?.value",{"_index":324,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["conjunction",{"_index":808,"title":{},"body":{"components/TaskComponent.html":{}}}],["console.error(error.message",{"_index":266,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["console.log('intercepted",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(this.form.value",{"_index":327,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["const",{"_index":231,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":148,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["container",{"_index":549,"title":{},"body":{"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{}}}],["container'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["container.component",{"_index":220,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["container.component.html",{"_index":550,"title":{},"body":{"components/PlacesContainerComponent.html":{}}}],["container.component.scss",{"_index":551,"title":{},"body":{"components/PlacesContainerComponent.html":{}}}],["container.component.ts",{"_index":548,"title":{},"body":{"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:11",{"_index":552,"title":{},"body":{"components/PlacesContainerComponent.html":{}}}],["container/places",{"_index":219,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["control",{"_index":786,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/functions.html":{}}}],["control.get('confirmpassword",{"_index":322,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["control.get('password",{"_index":321,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["control.value",{"_index":603,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["control.value.includes",{"_index":601,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["controls",{"_index":806,"title":{},"body":{"components/TaskComponent.html":{}}}],["convert",{"_index":712,"title":{},"body":{"components/TaskComponent.html":{}}}],["converted",{"_index":840,"title":{},"body":{"components/TaskComponent.html":{}}}],["coverage",{"_index":1085,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":465,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":780,"title":{},"body":{"components/TaskComponent.html":{}}}],["currentchildroute",{"_index":964,"title":{},"body":{"components/TasksComponent.html":{}}}],["cursed",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":693,"title":{},"body":{"components/TaskComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["cycle",{"_index":610,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["data",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["data.ts",{"_index":1094,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":853,"title":{},"body":{"components/TaskComponent.html":{}}}],["date",{"_index":503,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{}}}],["date().gettime().tostring",{"_index":948,"title":{},"body":{"injectables/TaskService.html":{}}}],["date:'fulldate",{"_index":731,"title":{},"body":{"components/TaskComponent.html":{}}}],["date:\\'fulldate",{"_index":910,"title":{},"body":{"components/TaskComponent.html":{}}}],["datepipe",{"_index":641,"title":{},"body":{"components/TaskComponent.html":{}}}],["debouncetime",{"_index":596,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["decides",{"_index":885,"title":{},"body":{"components/TaskComponent.html":{}}}],["declaration",{"_index":1314,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["declare",{"_index":814,"title":{},"body":{"components/TaskComponent.html":{}}}],["declared",{"_index":775,"title":{},"body":{"components/TaskComponent.html":{}}}],["decorator",{"_index":785,"title":{},"body":{"components/TaskComponent.html":{}}}],["dedicated",{"_index":1316,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["default",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["delete",{"_index":877,"title":{},"body":{"components/TaskComponent.html":{}}}],["deletes",{"_index":878,"title":{},"body":{"components/TaskComponent.html":{}}}],["delivers",{"_index":782,"title":{},"body":{"components/TaskComponent.html":{}}}],["dependencies",{"_index":774,"title":{"dependencies.html":{}},"body":{"components/TaskComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dependency",{"_index":770,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["depending",{"_index":1037,"title":{},"body":{"components/TasksComponent.html":{}}}],["deployment",{"_index":1305,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["desc",{"_index":1041,"title":{},"body":{"components/TasksComponent.html":{}}}],["descending",{"_index":1053,"title":{},"body":{"components/TasksComponent.html":{}}}],["describes",{"_index":345,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["design",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["designed",{"_index":1294,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["destroref",{"_index":178,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TasksComponent.html":{}}}],["destrotref",{"_index":582,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["destroyref",{"_index":206,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["detailed",{"_index":1192,"title":{},"body":{"index.html":{}}}],["determines",{"_index":891,"title":{},"body":{"components/TaskComponent.html":{}}}],["development",{"_index":1146,"title":{},"body":{"index.html":{}}}],["dialogel",{"_index":444,"title":{},"body":{"components/ModalComponent.html":{}}}],["dinamically",{"_index":1016,"title":{},"body":{"components/TasksComponent.html":{}}}],["directive",{"_index":101,"title":{"directives/AuthDirective.html":{},"directives/SafeLinkDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["directives",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directives/auth/auth.directive",{"_index":695,"title":{},"body":{"components/TaskComponent.html":{}}}],["directives/safe",{"_index":696,"title":{},"body":{"components/TaskComponent.html":{}}}],["directly",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directory",{"_index":1170,"title":{},"body":{"index.html":{}}}],["displaying",{"_index":908,"title":{},"body":{"components/TaskComponent.html":{}}}],["dist",{"_index":1169,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["domain",{"_index":1297,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["done",{"_index":518,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":513,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["duedate",{"_index":519,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["dummy_lessons",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dummy_lessons.find(lesson",{"_index":1048,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["dummy_tasks",{"_index":939,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dummycanmatch",{"_index":1112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1130,"title":{},"body":{"dependencies.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["e2e",{"_index":1184,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1186,"title":{},"body":{"index.html":{}}}],["each",{"_index":799,"title":{},"body":{"components/TaskComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["edit",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["effect",{"_index":157,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["elementref",{"_index":449,"title":{},"body":{"components/ModalComponent.html":{},"directives/SafeLinkDirective.html":{}}}],["elements",{"_index":747,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":294,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["emailisunique",{"_index":589,"title":{},"body":{"components/SimpleFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emailisunique(control",{"_index":602,"title":{},"body":{"components/SimpleFormComponent.html":{},"miscellaneous/functions.html":{}}}],["emailisvalid",{"_index":583,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["employee",{"_index":348,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["end",{"_index":1183,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":242,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["enter",{"_index":634,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["entereddate",{"_index":477,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["enteredsummary",{"_index":478,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["enteredtitle",{"_index":479,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["entire",{"_index":794,"title":{},"body":{"components/TaskComponent.html":{}}}],["envinjector",{"_index":179,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["environmentinjector",{"_index":208,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["err",{"_index":262,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["error",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["error/components/error/error",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"coverage.html":{}}}],["error/components/modal/modal.component.ts",{"_index":442,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["error/components/modal/modal.component.ts:11",{"_index":448,"title":{},"body":{"components/ModalComponent.html":{}}}],["error/components/modal/modal.component.ts:13",{"_index":446,"title":{},"body":{"components/ModalComponent.html":{}}}],["error/service/error.service",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["error/service/error.service.ts",{"_index":378,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["error/service/error.service.ts:10",{"_index":384,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error/service/error.service.ts:11",{"_index":382,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error/service/error.service.ts:7",{"_index":385,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error/service/error.service.ts:8",{"_index":387,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errormodalcomponent",{"_index":21,"title":{"components/ErrorModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["errorservice",{"_index":30,"title":{"injectables/ErrorService.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["estructural",{"_index":161,"title":{},"body":{"directives/AuthDirective.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{}}}],["etc",{"_index":812,"title":{},"body":{"components/TaskComponent.html":{}}}],["evaluated",{"_index":888,"title":{},"body":{"components/TaskComponent.html":{}}}],["even",{"_index":795,"title":{},"body":{"components/TaskComponent.html":{}}}],["event",{"_index":562,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["event.target",{"_index":576,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["event?.preventdefault",{"_index":579,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["eventcoalescing",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":831,"title":{},"body":{"components/TaskComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["example",{"_index":708,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["examples",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1177,"title":{},"body":{"index.html":{}}}],["executed",{"_index":989,"title":{},"body":{"components/TasksComponent.html":{}}}],["executions",{"_index":1072,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["existing",{"_index":870,"title":{},"body":{"components/TaskComponent.html":{}}}],["exit",{"_index":899,"title":{},"body":{"components/TaskComponent.html":{}}}],["export",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["exposedmodule",{"_index":238,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["expresion",{"_index":737,"title":{},"body":{"components/TaskComponent.html":{}}}],["external",{"_index":843,"title":{},"body":{"components/TaskComponent.html":{}}}],["f",{"_index":1083,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["factories",{"_index":825,"title":{},"body":{"components/TaskComponent.html":{}}}],["fah",{"_index":1061,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["false",{"_index":1066,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["favorite",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["favoriteplacescomponent",{"_index":114,"title":{"components/FavoritePlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["features",{"_index":1304,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["federation",{"_index":1301,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["fields",{"_index":876,"title":{},"body":{"components/TaskComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{}}}],["files",{"_index":1156,"title":{},"body":{"index.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["filter",{"_index":974,"title":{},"body":{"components/TasksComponent.html":{}}}],["filtered",{"_index":999,"title":{},"body":{"components/TasksComponent.html":{}}}],["filteredtasks",{"_index":994,"title":{},"body":{"components/TasksComponent.html":{}}}],["filteredtasks.sort((a",{"_index":1000,"title":{},"body":{"components/TasksComponent.html":{}}}],["filtering",{"_index":1014,"title":{},"body":{"components/TasksComponent.html":{}}}],["find",{"_index":350,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["first",{"_index":340,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TasksComponent.html":{}}}],["firstname",{"_index":304,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["following",{"_index":1180,"title":{},"body":{"index.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["forces",{"_index":988,"title":{},"body":{"components/TasksComponent.html":{}}}],["form",{"_index":285,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["form'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["form.component",{"_index":702,"title":{},"body":{"components/TaskComponent.html":{}}}],["form.component.html",{"_index":287,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["form.component.scss",{"_index":288,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["form.component.ts",{"_index":284,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["form.component.ts:21",{"_index":316,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["form.component.ts:30",{"_index":587,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:32",{"_index":591,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:42",{"_index":593,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:44",{"_index":292,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["form.component.ts:46",{"_index":595,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:50",{"_index":585,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:51",{"_index":291,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["form.component.ts:62",{"_index":586,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.invalid",{"_index":329,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["form.touched",{"_index":330,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["form/complex",{"_index":283,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["form/simple",{"_index":581,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formarray",{"_index":313,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["format",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":295,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["formcontrol('student",{"_index":312,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["formcontrol(false",{"_index":314,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["formgroup",{"_index":293,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["forms",{"_index":599,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["forms/complex",{"_index":282,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["forms/simple",{"_index":580,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":474,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["formsubscription",{"_index":627,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["formsubscription.unsubscribe",{"_index":632,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["formvalue",{"_index":624,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["found",{"_index":276,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["found.component.html",{"_index":523,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":524,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":522,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found/not",{"_index":521,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["founder",{"_index":349,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["framework",{"_index":414,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["friend",{"_index":353,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["function",{"_index":319,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functional",{"_index":1296,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["functions",{"_index":1137,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1161,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1143,"title":{},"body":{"index.html":{}}}],["getemailisvalid",{"_index":592,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["getlessontasks",{"_index":916,"title":{},"body":{"injectables/TaskService.html":{}}}],["getlessontasks(lessonid",{"_index":924,"title":{},"body":{"injectables/TaskService.html":{}}}],["getpasswordisvalid",{"_index":594,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["getselectedlesson",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["getting",{"_index":1140,"title":{"index.html":{}},"body":{}}],["giving",{"_index":1319,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["global",{"_index":789,"title":{},"body":{"components/TaskComponent.html":{}}}],["google",{"_index":351,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["great",{"_index":829,"title":{},"body":{"components/TaskComponent.html":{}}}],["guard",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["guards",{"_index":883,"title":{},"body":{"components/TaskComponent.html":{}}}],["having",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":408,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["header.component.html",{"_index":409,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":410,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":19,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["helpbuilding",{"_index":1164,"title":{},"body":{"index.html":{}}}],["here",{"_index":986,"title":{},"body":{"components/TasksComponent.html":{}}}],["host",{"_index":225,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["host/placesservice",{"_index":216,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["hostdirectives",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{}}}],["hostelementref",{"_index":556,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["hostservicemodule",{"_index":232,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["htmlanchorelement).href",{"_index":577,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["http",{"_index":464,"title":{},"body":{"components/NewRequestComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1154,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/remoteentry.js",{"_index":237,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["http://localhost:4201",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lesson.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":532,"title":{},"body":{"interfaces/Place.html":{}}}],["imagepath",{"_index":424,"title":{},"body":{"components/LessonComponent.html":{}}}],["images",{"_index":881,"title":{},"body":{"components/TaskComponent.html":{}}}],["implementation",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implemented",{"_index":1298,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["implements",{"_index":174,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/ModalComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["imported",{"_index":1315,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["in_progress",{"_index":517,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inbuild",{"_index":763,"title":{},"body":{"components/TaskComponent.html":{}}}],["includes",{"_index":1158,"title":{},"body":{"index.html":{}}}],["including",{"_index":1191,"title":{},"body":{"index.html":{}}}],["increment",{"_index":839,"title":{},"body":{"components/TaskComponent.html":{}}}],["independent",{"_index":1299,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["index",{"_index":27,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["information",{"_index":848,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":607,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["initialemailvalue",{"_index":612,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["initialvalue",{"_index":675,"title":{},"body":{"components/TaskComponent.html":{}}}],["inject",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["inject(activatedroute",{"_index":489,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["inject(destroyref",{"_index":192,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["inject(environmentinjector",{"_index":194,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["inject(errorservice",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["inject(router",{"_index":491,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(taskservice",{"_index":152,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["inject(templateref",{"_index":154,"title":{},"body":{"directives/AuthDirective.html":{}}}],["inject(viewcontainerref",{"_index":156,"title":{},"body":{"directives/AuthDirective.html":{}}}],["inject>(elementref",{"_index":563,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["injectable",{"_index":376,"title":{"injectables/ErrorService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/ErrorService.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":940,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectables",{"_index":377,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["injected",{"_index":788,"title":{},"body":{"components/TaskComponent.html":{}}}],["injecting",{"_index":819,"title":{},"body":{"components/TaskComponent.html":{}}}],["injection",{"_index":771,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["injector",{"_index":772,"title":{},"body":{"components/TaskComponent.html":{}}}],["injector.create",{"_index":817,"title":{},"body":{"components/TaskComponent.html":{}}}],["input",{"_index":158,"title":{},"body":{"directives/AuthDirective.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["input.required",{"_index":439,"title":{},"body":{"components/LessonComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{}}}],["input.required({alias",{"_index":150,"title":{},"body":{"directives/AuthDirective.html":{}}}],["inputs",{"_index":367,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{}}}],["inputtype",{"_index":1059,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["instance",{"_index":227,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["instanceof",{"_index":1028,"title":{},"body":{"components/TasksComponent.html":{}}}],["instances",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instancetype",{"_index":203,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["instead",{"_index":709,"title":{},"body":{"components/TaskComponent.html":{}}}],["integration",{"_index":1302,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["interceptor/remote",{"_index":1115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":416,"title":{"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{}},"body":{"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"coverage.html":{}}}],["interfaces",{"_index":417,"title":{},"body":{"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"overview.html":{}}}],["interop",{"_index":701,"title":{},"body":{"components/TaskComponent.html":{}}}],["interpolation",{"_index":735,"title":{},"body":{"components/TaskComponent.html":{}}}],["interval",{"_index":644,"title":{},"body":{"components/TaskComponent.html":{}}}],["interval(1000",{"_index":672,"title":{},"body":{"components/TaskComponent.html":{}}}],["intervalsignal",{"_index":645,"title":{},"body":{"components/TaskComponent.html":{}}}],["invalid",{"_index":331,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["isaddingrequest",{"_index":646,"title":{},"body":{"components/TaskComponent.html":{}}}],["isfetching",{"_index":180,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["isnewroute",{"_index":1026,"title":{},"body":{"components/TasksComponent.html":{}}}],["isnewtask",{"_index":965,"title":{},"body":{"components/TasksComponent.html":{}}}],["isolating",{"_index":802,"title":{},"body":{"components/TaskComponent.html":{}}}],["isshowingcomplexform",{"_index":647,"title":{},"body":{"components/TaskComponent.html":{}}}],["isshowingsimpleform",{"_index":648,"title":{},"body":{"components/TaskComponent.html":{}}}],["json.parse(savedform).email",{"_index":615,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["json.stringify(this.tasks",{"_index":944,"title":{},"body":{"injectables/TaskService.html":{}}}],["json.stringify(val",{"_index":630,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["karma",{"_index":1178,"title":{},"body":{"index.html":{}}}],["key",{"_index":1303,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["knowledge",{"_index":411,"title":{},"body":{"components/HeaderComponent.html":{}}}],["l1",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l2",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l3",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l4",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l5",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l6",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l7",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l8",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":341,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["lastname",{"_index":305,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["lat",{"_index":533,"title":{},"body":{"interfaces/Place.html":{}}}],["lazy",{"_index":800,"title":{},"body":{"components/TaskComponent.html":{}}}],["learn",{"_index":879,"title":{},"body":{"components/TaskComponent.html":{}}}],["leave",{"_index":574,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["lesson",{"_index":87,"title":{"interfaces/Lesson.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"coverage.html":{}}}],["lesson'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["lesson().name",{"_index":441,"title":{},"body":{"components/LessonComponent.html":{}}}],["lesson.component.html",{"_index":422,"title":{},"body":{"components/LessonComponent.html":{}}}],["lesson.component.scss",{"_index":423,"title":{},"body":{"components/LessonComponent.html":{}}}],["lesson.id",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["lesson.model",{"_index":437,"title":{},"body":{"components/LessonComponent.html":{}}}],["lessoncomponent",{"_index":20,"title":{"components/LessonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["lessonid",{"_index":480,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["lessonid)?.name",{"_index":1049,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["lessonname",{"_index":966,"title":{},"body":{"components/TasksComponent.html":{}}}],["lessons",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["level",{"_index":413,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskComponent.html":{}}}],["life",{"_index":609,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["link",{"_index":761,"title":{},"body":{"components/TaskComponent.html":{}}}],["link.directive",{"_index":697,"title":{},"body":{"components/TaskComponent.html":{}}}],["link.directive.ts",{"_index":555,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{}}}],["link.directive.ts:11",{"_index":567,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["link.directive.ts:12",{"_index":564,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["link.directive.ts:14",{"_index":561,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["link/safe",{"_index":554,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"coverage.html":{}}}],["list",{"_index":859,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["literal",{"_index":535,"title":{},"body":{"interfaces/Place.html":{},"miscellaneous/variables.html":{}}}],["little",{"_index":336,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["load",{"_index":223,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["loaded",{"_index":264,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["loading",{"_index":271,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["loadremotemodule",{"_index":229,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1148,"title":{},"body":{"index.html":{}}}],["localerror",{"_index":181,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["localstorage",{"_index":623,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["localstorage.getitem('form",{"_index":614,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["localstorage.getitem('tasks",{"_index":941,"title":{},"body":{"injectables/TaskService.html":{}}}],["localstorage.setitem('form",{"_index":629,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["localstorage.setitem('tasks",{"_index":943,"title":{},"body":{"injectables/TaskService.html":{}}}],["localy",{"_index":240,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["logic",{"_index":756,"title":{},"body":{"components/TaskComponent.html":{}}}],["login",{"_index":633,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["logo.png",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lon",{"_index":534,"title":{},"body":{"interfaces/Place.html":{}}}],["looks",{"_index":779,"title":{},"body":{"components/TaskComponent.html":{}}}],["main",{"_index":530,"title":{},"body":{"components/NotFoundComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["manages",{"_index":773,"title":{},"body":{"components/TaskComponent.html":{}}}],["managind",{"_index":834,"title":{},"body":{"components/TaskComponent.html":{}}}],["managing",{"_index":830,"title":{},"body":{"components/TaskComponent.html":{}}}],["manual",{"_index":818,"title":{},"body":{"components/TaskComponent.html":{}}}],["many",{"_index":1071,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["mark",{"_index":639,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["marked",{"_index":783,"title":{},"body":{"components/TaskComponent.html":{}}}],["match.guard.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["match/dummy",{"_index":1110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["math.random",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mecanism",{"_index":1070,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["mechanism",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":364,"title":{},"body":{"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{}}}],["met",{"_index":904,"title":{},"body":{"components/TaskComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["method",{"_index":165,"title":{},"body":{"directives/AuthDirective.html":{},"injectables/TaskService.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["mf",{"_index":1309,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["mfangular19",{"_index":1141,"title":{},"body":{"index.html":{}}}],["mfwrapperfortesting",{"_index":209,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mfwrapperfortesting.loadremotemodule",{"_index":234,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["microfrontend",{"_index":1300,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["microfrontends",{"_index":1292,"title":{"additional-documentation/microfrontends-architecture.html":{}},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["miscellaneous",{"_index":1136,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":361,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["modal.component",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["modal.component.html",{"_index":362,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":363,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/ModalComponent.html":{}}}],["modal.component.ts",{"_index":360,"title":{},"body":{"components/ErrorModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:13",{"_index":369,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts:14",{"_index":368,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts:15",{"_index":371,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts:17",{"_index":370,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal/modal.component",{"_index":372,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modalcomponent",{"_index":118,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["model",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":745,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modifying",{"_index":752,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":235,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["modules",{"_index":804,"title":{"modules.html":{}},"body":{"components/TaskComponent.html":{},"modules.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["more",{"_index":880,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["mouseevent",{"_index":560,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["multiple",{"_index":797,"title":{},"body":{"components/TaskComponent.html":{}}}],["mustcontainquestionmark",{"_index":590,"title":{},"body":{"components/SimpleFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustcontainquestionmark(control",{"_index":600,"title":{},"body":{"components/SimpleFormComponent.html":{},"miscellaneous/functions.html":{}}}],["mustmatch",{"_index":303,"title":{},"body":{"components/ComplexFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatch(control",{"_index":320,"title":{},"body":{"components/ComplexFormComponent.html":{},"miscellaneous/functions.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":764,"title":{},"body":{"components/TaskComponent.html":{}}}],["namefor",{"_index":1162,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":1153,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":1010,"title":{},"body":{"components/TasksComponent.html":{}}}],["navigationend)).subscribe",{"_index":1029,"title":{},"body":{"components/TasksComponent.html":{}}}],["necessary",{"_index":781,"title":{},"body":{"components/TaskComponent.html":{}}}],["need",{"_index":335,"title":{},"body":{"components/ComplexFormComponent.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":705,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["needs",{"_index":777,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["new",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newreq",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newrequestcomponent",{"_index":119,"title":{"components/NewRequestComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["newstatus",{"_index":717,"title":{},"body":{"components/TaskComponent.html":{},"injectables/TaskService.html":{}}}],["newtask",{"_index":947,"title":{},"body":{"injectables/TaskService.html":{}}}],["newtaskcomponent",{"_index":122,"title":{"components/NewTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newtaskdata",{"_index":514,"title":{"interfaces/NewTaskData.html":{}},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["next",{"_index":254,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["next(newreq",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":1150,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":445,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngmodel",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodel)]=\"username",{"_index":743,"title":{},"body":{"components/TaskComponent.html":{}}}],["ngoninit",{"_index":185,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["ngsubmit",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundcomponent",{"_index":124,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["notunique",{"_index":606,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["null",{"_index":325,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["number",{"_index":308,"title":{},"body":{"components/ComplexFormComponent.html":{},"interfaces/Place.html":{},"pipes/TemperaturePipe.html":{}}}],["nx",{"_index":1308,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["object",{"_index":872,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":713,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":827,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["obtain",{"_index":907,"title":{},"body":{"components/TaskComponent.html":{}}}],["obtains",{"_index":856,"title":{},"body":{"components/TaskComponent.html":{}}}],["of(null",{"_index":605,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["okay",{"_index":375,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["oldtasks",{"_index":954,"title":{},"body":{"injectables/TaskService.html":{}}}],["oldtasks.map",{"_index":958,"title":{},"body":{"injectables/TaskService.html":{}}}],["oncancel",{"_index":458,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["onchangetasksfilter",{"_index":970,"title":{},"body":{"components/TasksComponent.html":{}}}],["onchangetasksfilter(filter",{"_index":972,"title":{},"body":{"components/TasksComponent.html":{}}}],["onchangetaskstatus",{"_index":650,"title":{},"body":{"components/TaskComponent.html":{}}}],["onchangetaskstatus(taskid",{"_index":659,"title":{},"body":{"components/TaskComponent.html":{}}}],["onclearerror",{"_index":366,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["onclickobservable",{"_index":651,"title":{},"body":{"components/TaskComponent.html":{}}}],["oncloseaddrequest",{"_index":652,"title":{},"body":{"components/TaskComponent.html":{}}}],["oncompletetask",{"_index":653,"title":{},"body":{"components/TaskComponent.html":{}}}],["onconfirmleavepage",{"_index":558,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["onconfirmleavepage($event",{"_index":569,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["onconfirmleavepage(event",{"_index":559,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["one",{"_index":734,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["oninit",{"_index":175,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["onremoveplace",{"_index":393,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["onremoveplace(selectedplace",{"_index":394,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["onreset",{"_index":289,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["onselectlesson",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/LessonComponent.html":{}}}],["onselectlesson(id",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["onselectplace",{"_index":186,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["onselectplace(place",{"_index":541,"title":{},"body":{"components/PlacesComponent.html":{}}}],["onselectplace(selectedplace",{"_index":188,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["onshowcomplexform",{"_index":654,"title":{},"body":{"components/TaskComponent.html":{}}}],["onshowsimpleform",{"_index":655,"title":{},"body":{"components/TaskComponent.html":{}}}],["onstartaddrequest",{"_index":656,"title":{},"body":{"components/TaskComponent.html":{}}}],["onsubmit",{"_index":290,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{}}}],["open",{"_index":506,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["optimizes",{"_index":1172,"title":{},"body":{"index.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["output",{"_index":436,"title":{},"body":{"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{}}}],["outputs",{"_index":426,"title":{},"body":{"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{}}}],["outputtemp",{"_index":1077,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["outputtemp.tofixed(2",{"_index":1084,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["outputtype",{"_index":1062,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["outside",{"_index":608,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["overview",{"_index":1194,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1125,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":526,"title":{"additional-documentation/microfrontends-architecture.html":{}},"body":{"components/NotFoundComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["page.guard.ts",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["page/can",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paradigm",{"_index":1295,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["param",{"_index":1034,"title":{},"body":{"components/TasksComponent.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1019,"title":{},"body":{"components/TasksComponent.html":{}}}],["params.get('lessonid",{"_index":1021,"title":{},"body":{"components/TasksComponent.html":{}}}],["params.get('sort",{"_index":1040,"title":{},"body":{"components/TasksComponent.html":{}}}],["paramsinheritancestrategy",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parentparams",{"_index":495,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["parentparams?.get('lessonid",{"_index":497,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["parsefloat(value",{"_index":1076,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["partially",{"_index":874,"title":{},"body":{"components/TaskComponent.html":{}}}],["password",{"_index":300,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["password?.value",{"_index":323,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["passwordisvalid",{"_index":584,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["passwords",{"_index":299,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["patch",{"_index":873,"title":{},"body":{"components/TaskComponent.html":{}}}],["pattern",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":1173,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":897,"title":{},"body":{"components/TaskComponent.html":{}}}],["personal",{"_index":466,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["pipe",{"_index":694,"title":{"pipes/TemperaturePipe.html":{}},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":703,"title":{},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pipes/temperature/temperature.pipe",{"_index":692,"title":{},"body":{"components/TaskComponent.html":{}}}],["pipetransform",{"_index":1065,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["place",{"_index":189,"title":{"interfaces/Place.html":{}},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"coverage.html":{}}}],["place.id",{"_index":545,"title":{},"body":{"components/PlacesComponent.html":{}}}],["place.model",{"_index":217,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["place.title",{"_index":546,"title":{},"body":{"components/PlacesComponent.html":{}}}],["placepicker",{"_index":463,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["places",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["places'},{'name",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["places()!.length",{"_index":406,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places()?.length",{"_index":273,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component",{"_index":461,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["places.component.html",{"_index":176,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["places.component.scss",{"_index":177,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["places.component.ts",{"_index":173,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["places.component.ts:17",{"_index":396,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:18",{"_index":202,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:19",{"_index":198,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:20",{"_index":200,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component.ts:21",{"_index":196,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:22",{"_index":205,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:24",{"_index":204,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:25",{"_index":195,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:26",{"_index":193,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:28",{"_index":187,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:56",{"_index":190,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component.ts:58",{"_index":395,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places/available",{"_index":172,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/NewRequestComponent.html":{},"coverage.html":{}}}],["places/favorite",{"_index":392,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"components/NewRequestComponent.html":{},"coverage.html":{}}}],["places/places.component",{"_index":218,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["placescomponent",{"_index":126,"title":{"components/PlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["placescontainercomponent",{"_index":127,"title":{"components/PlacesContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["placesservice",{"_index":182,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["platform",{"_index":792,"title":{},"body":{"components/TaskComponent.html":{}}}],["please",{"_index":269,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["post",{"_index":862,"title":{},"body":{"components/TaskComponent.html":{}}}],["postal",{"_index":342,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["postalcode",{"_index":309,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["powerful",{"_index":1159,"title":{},"body":{"index.html":{}}}],["practical",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevcount",{"_index":715,"title":{},"body":{"components/TaskComponent.html":{}}}],["prevents",{"_index":903,"title":{},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["private",{"_index":144,"title":{},"body":{"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["production",{"_index":1171,"title":{},"body":{"index.html":{}}}],["products",{"_index":861,"title":{},"body":{"components/TaskComponent.html":{}}}],["progress",{"_index":719,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["project",{"_index":1142,"title":{},"body":{"index.html":{}}}],["properties",{"_index":28,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"properties.html":{}}}],["property",{"_index":738,"title":{},"body":{"components/TaskComponent.html":{}}}],["protecting",{"_index":892,"title":{},"body":{"components/TaskComponent.html":{}}}],["provide",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":388,"title":{},"body":{"injectables/ErrorService.html":{},"components/TaskComponent.html":{}}}],["providehttpclient(withinterceptors([remotea19interceptor",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":815,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["providers.if",{"_index":776,"title":{},"body":{"components/TaskComponent.html":{}}}],["providezonechangedetection",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pure",{"_index":1056,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["put",{"_index":867,"title":{},"body":{"components/TaskComponent.html":{}}}],["query",{"_index":1035,"title":{},"body":{"components/TasksComponent.html":{}}}],["queryparan",{"_index":990,"title":{},"body":{"components/TasksComponent.html":{}}}],["question",{"_index":638,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["reactive",{"_index":598,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["reactiveformsmodule",{"_index":286,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["read",{"_index":858,"title":{},"body":{"components/TaskComponent.html":{}}}],["real",{"_index":399,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["realloadremotemodule",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["receive",{"_index":846,"title":{},"body":{"components/TaskComponent.html":{}}}],["redirectcommand(router.parseurl('/a19",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":1195,"title":{},"body":{"index.html":{}}}],["references",{"_index":1193,"title":{},"body":{"index.html":{}}}],["referred",{"_index":352,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["register",{"_index":1318,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["registering",{"_index":865,"title":{},"body":{"components/TaskComponent.html":{}}}],["relativeto",{"_index":509,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["reload",{"_index":1155,"title":{},"body":{"index.html":{}}}],["remote",{"_index":245,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["remotea19interceptor",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteentry",{"_index":236,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["remoteentry.js",{"_index":230,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["remoteservicesregistry",{"_index":213,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteservicesregistry.placesservice",{"_index":246,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["removetask",{"_index":917,"title":{},"body":{"injectables/TaskService.html":{}}}],["removetask(id",{"_index":926,"title":{},"body":{"injectables/TaskService.html":{}}}],["removing",{"_index":405,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["render",{"_index":1024,"title":{},"body":{"components/TasksComponent.html":{}}}],["rendercondition",{"_index":143,"title":{},"body":{"directives/AuthDirective.html":{}}}],["rendering",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":869,"title":{},"body":{"components/TaskComponent.html":{}}}],["req",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.startswith('http",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":454,"title":{},"body":{"components/NewRequestComponent.html":{},"components/TaskComponent.html":{}}}],["request'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["request.component",{"_index":691,"title":{},"body":{"components/TaskComponent.html":{}}}],["request.component.html",{"_index":455,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request.component.scss",{"_index":456,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request.component.ts",{"_index":453,"title":{},"body":{"components/NewRequestComponent.html":{},"coverage.html":{}}}],["request.component.ts:13",{"_index":459,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request.component.ts:15",{"_index":460,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request/available",{"_index":171,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"coverage.html":{}}}],["request/favorite",{"_index":391,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["request/new",{"_index":452,"title":{},"body":{"components/NewRequestComponent.html":{},"components/TaskComponent.html":{},"coverage.html":{}}}],["request/place.model.ts",{"_index":531,"title":{},"body":{"interfaces/Place.html":{},"coverage.html":{}}}],["request/places",{"_index":547,"title":{},"body":{"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["request/places/places.component.ts",{"_index":538,"title":{},"body":{"components/PlacesComponent.html":{},"coverage.html":{}}}],["request/places/places.component.ts:12",{"_index":543,"title":{},"body":{"components/PlacesComponent.html":{}}}],["request/places/places.component.ts:13",{"_index":540,"title":{},"body":{"components/PlacesComponent.html":{}}}],["request/places/places.component.ts:15",{"_index":542,"title":{},"body":{"components/PlacesComponent.html":{}}}],["requested",{"_index":528,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["requests",{"_index":706,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":427,"title":{},"body":{"components/LessonComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":356,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{}}}],["resolve",{"_index":807,"title":{},"body":{"components/TaskComponent.html":{}}}],["resolvefn",{"_index":1011,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["resolvelessonname",{"_index":1045,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvelessonname(activatedroute",{"_index":1051,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["resolvetitle",{"_index":1050,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource",{"_index":871,"title":{},"body":{"components/TaskComponent.html":{}}}],["resources",{"_index":864,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["rest",{"_index":849,"title":{},"body":{"components/TaskComponent.html":{}}}],["results",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["retrieving",{"_index":847,"title":{},"body":{"components/TaskComponent.html":{}}}],["return",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ComplexFormComponent.html":{},"components/LessonComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["role",{"_index":311,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["route",{"_index":481,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["routeparam",{"_index":557,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["router",{"_index":482,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["routerlink",{"_index":420,"title":{},"body":{"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["routerlinkactive",{"_index":421,"title":{},"body":{"components/LessonComponent.html":{}}}],["routeroutlet",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/TasksComponent.html":{}}}],["routerstate",{"_index":1046,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":1012,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":882,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["routing",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1149,"title":{},"body":{"index.html":{}}}],["runininjectioncontext",{"_index":207,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["runininjectioncontext(this.envinjector",{"_index":241,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["runner",{"_index":1179,"title":{},"body":{"index.html":{}}}],["running",{"_index":1152,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":224,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["rxjs",{"_index":597,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rxjs.png",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s",{"_index":1052,"title":{},"body":{"components/TasksComponent.html":{}}}],["safelinkdirective",{"_index":136,"title":{"directives/SafeLinkDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["same",{"_index":243,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["savedform",{"_index":613,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["savetasks",{"_index":918,"title":{},"body":{"injectables/TaskService.html":{}}}],["saving",{"_index":852,"title":{},"body":{"components/TaskComponent.html":{}}}],["scaffolding",{"_index":1157,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1163,"title":{},"body":{"index.html":{}}}],["scope",{"_index":787,"title":{},"body":{"components/TaskComponent.html":{}}}],["security",{"_index":1068,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["see",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["segments",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/LessonComponent.html":{}}}],["selected",{"_index":425,"title":{},"body":{"components/LessonComponent.html":{}}}],["selectedfilter",{"_index":967,"title":{},"body":{"components/TasksComponent.html":{}}}],["selectedlesson",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedlessonid",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedlessontasks",{"_index":968,"title":{},"body":{"components/TasksComponent.html":{}}}],["selectedplace",{"_index":191,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["selectplace",{"_index":539,"title":{},"body":{"components/PlacesComponent.html":{}}}],["self",{"_index":162,"title":{},"body":{"directives/AuthDirective.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["send",{"_index":845,"title":{},"body":{"components/TaskComponent.html":{}}}],["sends",{"_index":863,"title":{},"body":{"components/TaskComponent.html":{}}}],["senior",{"_index":412,"title":{},"body":{"components/HeaderComponent.html":{}}}],["serveonce",{"_index":1151,"title":{},"body":{"index.html":{}}}],["server",{"_index":857,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["servers",{"_index":844,"title":{},"body":{"components/TaskComponent.html":{}}}],["service",{"_index":226,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["service/error.service",{"_index":373,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["serviceerror",{"_index":183,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["services",{"_index":803,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["services.registry",{"_index":215,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["services.registry.ts",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["services/tasks/tasks.service",{"_index":160,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["shared",{"_index":1307,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["shared/card/card.component",{"_index":438,"title":{},"body":{"components/LessonComponent.html":{},"components/TaskComponent.html":{}}}],["shared/mf",{"_index":210,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["shared/modal",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["shared/remote",{"_index":214,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["shell",{"_index":1310,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["shouldgetaccess",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["show",{"_index":707,"title":{},"body":{"components/TaskComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["showerror",{"_index":381,"title":{},"body":{"injectables/ErrorService.html":{}}}],["showerror(message",{"_index":383,"title":{},"body":{"injectables/ErrorService.html":{}}}],["sign",{"_index":357,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["signal",{"_index":199,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["signal('all",{"_index":983,"title":{},"body":{"components/TasksComponent.html":{}}}],["signal('desc",{"_index":1006,"title":{},"body":{"components/TasksComponent.html":{}}}],["signal('guest",{"_index":935,"title":{},"body":{"injectables/TaskService.html":{}}}],["signal(0",{"_index":668,"title":{},"body":{"components/TaskComponent.html":{}}}],["signal(39",{"_index":687,"title":{},"body":{"components/TaskComponent.html":{}}}],["signal(dummy_tasks",{"_index":936,"title":{},"body":{"injectables/TaskService.html":{}}}],["signal(false",{"_index":197,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["signal(undefined",{"_index":201,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["signals",{"_index":833,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["simple",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["simpleformcomponent",{"_index":130,"title":{"components/SimpleFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["singleton",{"_index":790,"title":{},"body":{"components/TaskComponent.html":{}}}],["site",{"_index":762,"title":{},"body":{"components/TaskComponent.html":{}}}],["skipself",{"_index":805,"title":{},"body":{"components/TaskComponent.html":{}}}],["sorry",{"_index":525,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["sort",{"_index":1033,"title":{},"body":{"components/TasksComponent.html":{}}}],["sortedtasks",{"_index":992,"title":{},"body":{"components/TasksComponent.html":{}}}],["sorting",{"_index":1015,"title":{},"body":{"components/TasksComponent.html":{}}}],["sortparam",{"_index":1039,"title":{},"body":{"components/TasksComponent.html":{}}}],["sorts",{"_index":998,"title":{},"body":{"components/TasksComponent.html":{}}}],["sortsignal",{"_index":969,"title":{},"body":{"components/TasksComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"index.html":{}}}],["special",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specifically",{"_index":1317,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["speed",{"_index":1174,"title":{},"body":{"index.html":{}}}],["src",{"_index":536,"title":{},"body":{"interfaces/Place.html":{}}}],["src/.../app.config.ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../can",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../complex",{"_index":1139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../dummy",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mf",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../remote",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../simple",{"_index":1138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.model.ts",{"_index":1202,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tasks.component.ts",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/dummy",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/header/header.component.ts",{"_index":407,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/components/http",{"_index":170,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewRequestComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["src/components/lesson/lesson.component.ts",{"_index":419,"title":{},"body":{"components/LessonComponent.html":{},"coverage.html":{}}}],["src/components/lesson/lesson.component.ts:13",{"_index":428,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:14",{"_index":429,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:15",{"_index":430,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:17",{"_index":435,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:21",{"_index":431,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.model.ts",{"_index":418,"title":{},"body":{"interfaces/Lesson.html":{},"coverage.html":{}}}],["src/components/new",{"_index":470,"title":{},"body":{"components/NewTaskComponent.html":{},"coverage.html":{}}}],["src/components/not",{"_index":520,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/components/reactive",{"_index":281,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/components/task/task.component.ts",{"_index":640,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["src/components/task/task.component.ts:26",{"_index":657,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:27",{"_index":680,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:28",{"_index":686,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:42",{"_index":688,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:45",{"_index":677,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:48",{"_index":679,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:49",{"_index":678,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:52",{"_index":669,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:53",{"_index":671,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:55",{"_index":673,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:56",{"_index":676,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:58",{"_index":658,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:60",{"_index":662,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:64",{"_index":660,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:83",{"_index":664,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:87",{"_index":667,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:90",{"_index":663,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:94",{"_index":666,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:98",{"_index":665,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.model.ts",{"_index":515,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/components/tasks/tasks.component.ts",{"_index":961,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/tasks/tasks.component.ts:15",{"_index":982,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:16",{"_index":981,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:17",{"_index":1008,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:19",{"_index":979,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:20",{"_index":980,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:21",{"_index":975,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:23",{"_index":1007,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:24",{"_index":976,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:25",{"_index":978,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:27",{"_index":984,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:29",{"_index":1005,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:48",{"_index":971,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:75",{"_index":973,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/decl.d.ts",{"_index":1313,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["src/directives/auth/auth.directive.ts",{"_index":141,"title":{},"body":{"directives/AuthDirective.html":{},"coverage.html":{}}}],["src/directives/auth/auth.directive.ts:10",{"_index":151,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/auth/auth.directive.ts:11",{"_index":153,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/auth/auth.directive.ts:12",{"_index":155,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/auth/auth.directive.ts:13",{"_index":149,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/safe",{"_index":553,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{}}}],["src/guards/can",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/dummy",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interceptors/remote",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/pipes/temperature/temperature.pipe.ts",{"_index":1055,"title":{},"body":{"pipes/TemperaturePipe.html":{},"coverage.html":{}}}],["src/pipes/temperature/temperature.pipe.ts:9",{"_index":1063,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["src/services/tasks/tasks.service.ts",{"_index":913,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/services/tasks/tasks.service.ts:13",{"_index":928,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:17",{"_index":925,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:20",{"_index":923,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:32",{"_index":927,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:36",{"_index":934,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:45",{"_index":931,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:6",{"_index":937,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:7",{"_index":921,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/shared/card/card.component.ts",{"_index":277,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/shared/mf",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["src/shared/modal",{"_index":359,"title":{},"body":{"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/ModalComponent.html":{},"coverage.html":{}}}],["src/shared/remote",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["src/webpack.config.js",{"_index":1312,"title":{},"body":{"additional-documentation/microfrontends-architecture.html":{}}}],["src]=\"imageurl",{"_index":740,"title":{},"body":{"components/TaskComponent.html":{}}}],["ssr",{"_index":611,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["start",{"_index":1147,"title":{},"body":{"index.html":{}}}],["started",{"_index":338,"title":{"index.html":{}},"body":{"components/ComplexFormComponent.html":{}}}],["statements",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":906,"title":{},"body":{"components/TaskComponent.html":{}}}],["status",{"_index":505,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":622,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["store",{"_index":1167,"title":{},"body":{"index.html":{}}}],["stream",{"_index":828,"title":{},"body":{"components/TaskComponent.html":{}}}],["streamed",{"_index":832,"title":{},"body":{"components/TaskComponent.html":{}}}],["street",{"_index":307,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["string",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorService.html":{},"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["structural",{"_index":744,"title":{},"body":{"components/TaskComponent.html":{}}}],["structure",{"_index":746,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["student",{"_index":346,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["styles",{"_index":753,"title":{},"body":{"components/TaskComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["sub",{"_index":251,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["sub.unsubscribe",{"_index":260,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["submitting",{"_index":851,"title":{},"body":{"components/TaskComponent.html":{}}}],["subscribe",{"_index":253,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["subscription",{"_index":1044,"title":{},"body":{"components/TasksComponent.html":{}}}],["such",{"_index":751,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["suits",{"_index":1189,"title":{},"body":{"index.html":{}}}],["summary",{"_index":501,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["sure",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":681,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["symbol",{"_index":1081,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["synchronizing",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t1",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t2",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t3",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t4",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t5",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t6",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t7",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t8",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":1022,"title":{},"body":{"components/TasksComponent.html":{}}}],["task",{"_index":473,"title":{"interfaces/Task.html":{}},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["task().duedate",{"_index":730,"title":{},"body":{"components/TaskComponent.html":{}}}],["task().summary",{"_index":732,"title":{},"body":{"components/TaskComponent.html":{}}}],["task().title",{"_index":728,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.component.html",{"_index":475,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["task.component.scss",{"_index":476,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["task.component.ts",{"_index":472,"title":{},"body":{"components/NewTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:13",{"_index":484,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:14",{"_index":493,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:15",{"_index":492,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:16",{"_index":490,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:18",{"_index":488,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:19",{"_index":487,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:20",{"_index":486,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:21",{"_index":483,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:31",{"_index":485,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.date",{"_index":951,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.id",{"_index":957,"title":{},"body":{"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["task.lessonid",{"_index":946,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.model",{"_index":690,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.status",{"_index":952,"title":{},"body":{"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["task.summary",{"_index":950,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.title",{"_index":949,"title":{},"body":{"injectables/TaskService.html":{}}}],["task/new",{"_index":471,"title":{},"body":{"components/NewTaskComponent.html":{},"coverage.html":{}}}],["task/task.component",{"_index":1013,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskauthentication",{"_index":919,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskauthentication(taskcode",{"_index":929,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskcode",{"_index":932,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskcomponent",{"_index":132,"title":{"components/TaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["taskid",{"_index":661,"title":{},"body":{"components/TaskComponent.html":{},"injectables/TaskService.html":{}}}],["tasks",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["tasks.component.html",{"_index":962,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":963,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskscomponent",{"_index":133,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["taskservice",{"_index":159,"title":{"injectables/TaskService.html":{}},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["tasksservice",{"_index":145,"title":{},"body":{"directives/AuthDirective.html":{}}}],["taskstatus",{"_index":516,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["teacher",{"_index":347,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["temperature",{"_index":649,"title":{},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["temperature:'cel':'fah",{"_index":767,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperature:'fah':'cel",{"_index":768,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperature:\\'cel\\':\\'fah",{"_index":911,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperature:\\'fah\\':\\'cel",{"_index":912,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperaturepipe",{"_index":642,"title":{"pipes/TemperaturePipe.html":{}},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["template.html",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateref",{"_index":146,"title":{},"body":{"directives/AuthDirective.html":{}}}],["templates",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["terms",{"_index":315,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["test",{"_index":212,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"index.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["test.ts",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["test@example.com",{"_index":604,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["testing",{"_index":1185,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1182,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1176,"title":{},"body":{"index.html":{}}}],["this._error.asreadonly",{"_index":386,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._error.set",{"_index":390,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._error.set(message",{"_index":389,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.activatedroute.data.subscribe(data",{"_index":1017,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.activepermission.set('fede",{"_index":959,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.activepermission.set('guest",{"_index":960,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.clickcount.update(prevcount",{"_index":714,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.close.emit",{"_index":462,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["this.currentchildroute",{"_index":977,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.currentchildroute.set(childpath",{"_index":1032,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.destroref.ondestroy",{"_index":259,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.destrotref.ondestroy",{"_index":631,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.dialogel().nativeelement.showmodal",{"_index":451,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.entereddate",{"_index":504,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.enteredsummary",{"_index":502,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.enteredtitle",{"_index":500,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.envinjector.get(hostservicemodule.placesservice",{"_index":247,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.errorservice.clearerror",{"_index":374,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["this.errorservice.error",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errorservice.showerror('problem",{"_index":267,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.form.controls.email.dirty",{"_index":617,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.controls.email.invalid",{"_index":618,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.controls.email.touched",{"_index":616,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.controls.password.dirty",{"_index":620,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.controls.password.invalid",{"_index":621,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.controls.password.touched",{"_index":619,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.invalid",{"_index":326,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["this.form.patchvalue(json.parse(formvalue",{"_index":626,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.reset",{"_index":328,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["this.form.setvalue(json.parse(formvalue",{"_index":625,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.valuechanges.pipe(debouncetime(500)).subscribe((val",{"_index":628,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.hostelementref.nativeelement.href",{"_index":575,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["this.isaddingrequest.set(false",{"_index":723,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isaddingrequest.set(true",{"_index":722,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isfetching.set(false",{"_index":258,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.isfetching.set(true",{"_index":221,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.isshowingcomplexform.set(false",{"_index":725,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isshowingcomplexform.set(true",{"_index":727,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isshowingsimpleform.set(false",{"_index":726,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isshowingsimpleform.set(true",{"_index":724,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.lesson().avatar",{"_index":434,"title":{},"body":{"components/LessonComponent.html":{}}}],["this.lessonid",{"_index":507,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.lessonid.set(id",{"_index":498,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.lessonname.set(data['lessonname",{"_index":1018,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.lessons.find((lesson",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localerror.set('the",{"_index":263,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.localerror.set(error.message",{"_index":256,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.places",{"_index":401,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.places.set(places",{"_index":255,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["this.placesservice",{"_index":249,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.placesservice.addplacetouserplaces(selectedplace).subscribe",{"_index":265,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["this.placesservice.loadavailableplaces",{"_index":252,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["this.placesservice.loadeduserplaces",{"_index":402,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.placesservice.loaduserplaces",{"_index":403,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.placesservice.removeuserplace(selectedplace).subscribe",{"_index":404,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.rendercondition",{"_index":167,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.route",{"_index":510,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1020,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.route.parent?.snapshot.parammap",{"_index":496,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.route.queryparammap.subscribe(params",{"_index":1038,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.route.snapshot.firstchild?.routeconfig?.path",{"_index":1031,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.routeparam",{"_index":578,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["this.router.events.pipe(filter(event",{"_index":1027,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.router.navigate",{"_index":508,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.savetasks",{"_index":955,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.select.emit(this.lesson().id",{"_index":440,"title":{},"body":{"components/LessonComponent.html":{}}}],["this.selectedfilter",{"_index":995,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.selectedfilter.set(filter",{"_index":1043,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.selectedlessonid",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectplace.emit(place",{"_index":544,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.sortsignal",{"_index":993,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.sortsignal.set(sortparam",{"_index":1042,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.task().status",{"_index":682,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.tasks().filter((task",{"_index":945,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.set(json.parse(tasks",{"_index":942,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.set(this.tasks().filter((task",{"_index":956,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.update((oldtasks",{"_index":953,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.taskservice.addtask({title",{"_index":499,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.taskservice.getlessontasks(this.lessonid",{"_index":997,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskservice.getlessontasks(this.lessonid()).filter(task",{"_index":996,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskservice.removetask(this.task().id",{"_index":721,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskservice.updatetaskstatus(taskid",{"_index":720,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.tasksservice.activepermission",{"_index":166,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.tasksservice.taskauthentication(true",{"_index":163,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.viewcontainerref.clear",{"_index":169,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.viewcontainerref.createembeddedview(this.templateref",{"_index":168,"title":{},"body":{"directives/AuthDirective.html":{}}}],["those",{"_index":895,"title":{},"body":{"components/TaskComponent.html":{}}}],["throughout",{"_index":791,"title":{},"body":{"components/TaskComponent.html":{}}}],["time",{"_index":400,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["title",{"_index":365,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesContainerComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":820,"title":{},"body":{"components/TaskComponent.html":{}}}],["toobservable",{"_index":698,"title":{},"body":{"components/TaskComponent.html":{}}}],["toobservable(this.clickcount",{"_index":670,"title":{},"body":{"components/TaskComponent.html":{}}}],["toogle",{"_index":1036,"title":{},"body":{"components/TasksComponent.html":{}}}],["tools",{"_index":1160,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tosignal",{"_index":699,"title":{},"body":{"components/TaskComponent.html":{}}}],["tosignal(this.interval",{"_index":674,"title":{},"body":{"components/TaskComponent.html":{}}}],["track",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/PlacesComponent.html":{},"components/TasksComponent.html":{}}}],["transform",{"_index":1057,"title":{},"body":{"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["transform(value",{"_index":1058,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":222,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["tslib",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["turns",{"_index":1067,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["two",{"_index":742,"title":{},"body":{"components/TaskComponent.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["typealiases",{"_index":1200,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1075,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["types",{"_index":855,"title":{},"body":{"components/TaskComponent.html":{}}}],["typical",{"_index":900,"title":{},"body":{"components/TaskComponent.html":{}}}],["undefined",{"_index":1073,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["unfortunately",{"_index":275,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["unit",{"_index":1175,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":248,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["unsaved",{"_index":901,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":358,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/TaskComponent.html":{}}}],["update",{"_index":398,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["updates",{"_index":875,"title":{},"body":{"components/TaskComponent.html":{}}}],["updatetaskstatus",{"_index":920,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskstatus(taskid",{"_index":933,"title":{},"body":{"injectables/TaskService.html":{}}}],["url",{"_index":527,"title":{},"body":{"components/NotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":250,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["useclass",{"_index":824,"title":{},"body":{"components/TaskComponent.html":{}}}],["used",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{}}}],["usefactory",{"_index":826,"title":{},"body":{"components/TaskComponent.html":{}}}],["useful",{"_index":801,"title":{},"body":{"components/TaskComponent.html":{}}}],["user",{"_index":866,"title":{},"body":{"components/TaskComponent.html":{}}}],["users",{"_index":860,"title":{},"body":{"components/TaskComponent.html":{}}}],["uses",{"_index":736,"title":{},"body":{"components/TaskComponent.html":{}}}],["usevalue",{"_index":821,"title":{},"body":{"components/TaskComponent.html":{}}}],["using",{"_index":710,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["val",{"_index":1074,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["valid",{"_index":635,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["validators",{"_index":296,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["validators.email",{"_index":298,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["validators.minlength(6",{"_index":301,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["validators.required",{"_index":297,"title":{},"body":{"components/ComplexFormComponent.html":{},"components/SimpleFormComponent.html":{}}}],["value",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":711,"title":{},"body":{"components/TaskComponent.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["variable",{"_index":704,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1203,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":816,"title":{},"body":{"components/TaskComponent.html":{}}}],["version",{"_index":415,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{},"properties.html":{}}}],["via",{"_index":228,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["view",{"_index":757,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":450,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewchild.required>('dialog",{"_index":447,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewcontainerref",{"_index":147,"title":{},"body":{"directives/AuthDirective.html":{}}}],["visit",{"_index":468,"title":{},"body":{"components/NewRequestComponent.html":{},"index.html":{}}}],["visited",{"_index":469,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["void",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ComplexFormComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["wait",{"_index":272,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["want",{"_index":573,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["wantstoleave",{"_index":571,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["way",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{}}}],["welcome",{"_index":333,"title":{},"body":{"components/ComplexFormComponent.html":{}}}],["whenever",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["whether",{"_index":886,"title":{},"body":{"components/TaskComponent.html":{}}}],["window.confirm('do",{"_index":572,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["withcomponentinputbinding",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withrouterconfig",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":684,"title":{},"body":{"components/TaskComponent.html":{}}}],["wrapper",{"_index":211,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/microfrontends-architecture.html":{}}}],["xxxx=\"ngmodel",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1064,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["zone.js",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root-angular-19\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeaderComponent\n                                LessonComponent\n                                ErrorModalComponent\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                errorService\n                            \n                            \n                                lessons\n                            \n                            \n                                    Optional\n                                selectedLessonId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedLesson\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectLesson\n                        \n                    \n                \n            \n            \n                \nonSelectLesson(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.errorService.error\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ErrorService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DUMMY_LESSONS\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedLessonId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedLesson\n                    \n                \n\n                \n                    \n                        getselectedLesson()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { DUMMY_LESSONS } from \"../assets/dummy-data\"\n\nimport { Component, inject } from '@angular/core';\nimport { HeaderComponent } from \"../components/header/header.component\";\nimport { LessonComponent } from \"../components/lesson/lesson.component\";\nimport { ErrorService } from '../shared/modal-error/service/error.service';\nimport { ErrorModalComponent } from '../shared/modal-error/components/error/error-modal.component';\nimport { RouterOutlet } from '@angular/router';\n@Component({\n  selector: 'app-root-angular-19',\n  standalone: true,\n  imports: [HeaderComponent, LessonComponent, ErrorModalComponent, RouterOutlet ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  hostDirectives: [] // Automatically applies directives from the array whenever the component is used.\n})\nexport class AppComponent {\n  lessons = DUMMY_LESSONS;\n  selectedLessonId? = '';\n  errorService = inject(ErrorService);\n  error = this.errorService.error;\n\n  get selectedLesson(): { id: string; name: string; avatar: string } {\n    return this.lessons.find((lesson) => lesson.id === this.selectedLessonId)!;\n  }\n\n  onSelectLesson(id: string) {\n    this.selectedLessonId = id;\n  }\n}\n\n    \n\n    \n        @if (error()) {\n  \n}\n\n  \n  \n    \n      Select a lesson to see their tasks, but be aware because you have a 3% chance of a cursed guard blocking your way:\n    \n    \n      @for (lesson of lessons; track lesson.id) {\n        \n          \n          \n        \n      }\n    \n    \n      @if (selectedLesson) {\n        \n      }\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (error()) {  }              Select a lesson to see their tasks, but be aware because you have a 3% chance of a cursed guard blocking your way:              @for (lesson of lessons; track lesson.id) {                                          }              @if (selectedLesson) {              }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AuthDirective.html":{"url":"directives/AuthDirective.html","title":"directive - AuthDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AuthDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/auth/auth.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appAuth]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                renderCondition\n                            \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                    Private\n                                templateRef\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/directives/auth/auth.directive.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        renderCondition\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required({alias: 'appAuth'})\n                    \n                \n                    \n                        \n                                Defined in src/directives/auth/auth.directive.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/directives/auth/auth.directive.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        templateRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TemplateRef)\n                    \n                \n                    \n                        \n                                Defined in src/directives/auth/auth.directive.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        viewContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ViewContainerRef)\n                    \n                \n                    \n                        \n                                Defined in src/directives/auth/auth.directive.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, effect, inject, input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TaskService } from '../../services/tasks/tasks.service';\n\n@Directive({\n  selector: '[appAuth]',\n  standalone: true\n})\nexport class AuthDirective { // Estructural self directive\n\n  renderCondition = input.required({alias: 'appAuth'});\n  private tasksService = inject(TaskService);\n  private templateRef =inject(TemplateRef);\n  private viewContainerRef = inject(ViewContainerRef);\n\n  constructor() {\n    this.tasksService.taskAuthentication(true); // Simple auth method\n\n    effect(() => {\n      if (this.tasksService.activePermission() === this.renderCondition()) {\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n      } else {\n        this.viewContainerRef.clear();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvailablePlacesComponent.html":{"url":"components/AvailablePlacesComponent.html","title":"component - AvailablePlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvailablePlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/available-places/available-places.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-available-places\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                PlacesComponent\n                                PlacesContainerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./available-places.component.html\n            \n\n\n\n            \n                styleUrl\n                ./available-places.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroRef\n                            \n                            \n                                    Private\n                                envInjector\n                            \n                            \n                                errorService\n                            \n                            \n                                isFetching\n                            \n                            \n                                localError\n                            \n                            \n                                places\n                            \n                            \n                                    Private\n                                placesService\n                            \n                            \n                                serviceError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSelectPlace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/available-places/available-places.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectPlace\n                        \n                    \n                \n            \n            \n                \nonSelectPlace(selectedPlace: Place)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/available-places/available-places.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedPlace\n                                            \n                                                            Place\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        envInjector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EnvironmentInjector)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ErrorService)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFetching\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        places\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        placesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InstanceType<>\n\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit, signal, runInInjectionContext, EnvironmentInjector, Type } from '@angular/core';\nimport { mfWrapperForTesting } from '../../../shared/mf-wrapper-test';\nimport { RemoteServicesRegistry } from '../../../shared/remote-services.registry';\nimport type { PlacesService } from 'host/PlacesService';\nimport { Place } from '../place.model';\nimport { PlacesComponent } from '../places/places.component';\nimport { PlacesContainerComponent } from '../places-container/places-container.component';\nimport { ErrorService } from '../../../shared/modal-error/service/error.service';\n\n@Component({\n  selector: 'app-available-places',\n  standalone: true,\n  imports: [PlacesComponent, PlacesContainerComponent],\n  templateUrl: './available-places.component.html',\n  styleUrl: './available-places.component.scss'\n})\nexport class AvailablePlacesComponent implements OnInit {\n  places = signal(undefined);\n  isFetching = signal(false);\n  localError = signal('');\n  errorService = inject(ErrorService);\n  serviceError = signal('');\n\n  private placesService!: InstanceType;\n  private envInjector = inject(EnvironmentInjector);\n  private destroRef = inject(DestroyRef);\n\n  async ngOnInit() {\n    this.isFetching.set(true);\n    try {\n// -- Load in runtime the host service instance via loadRemoteModule from remoteEntry.js ------------------------------------------------\n      const hostServiceModule = await mfWrapperForTesting.loadRemoteModule(\n        { type: 'module', remoteEntry: 'http://localhost:4200/remoteEntry.js', exposedModule: './PlacesService' }\n      );\n// -- runInInjectionContext allows to instance localy the host service via EnvironmentInjector  -----------------------------------------\n      runInInjectionContext(this.envInjector, () => {\n// -- RemoteServicesRegistry ensures the same instance between components of the remote -------------------------------------------------\n        RemoteServicesRegistry.placesService ??= this.envInjector.get(hostServiceModule.PlacesService as unknown as Type);\n        this.placesService = RemoteServicesRegistry.placesService!;\n      });\n// -- Use of the host service -----------------------------------------------------------------------------------------------------------\n      const sub = this.placesService.loadAvailablePlaces()\n        .subscribe({\n          next: (places: Place[]) => this.places.set(places),\n          error: (error: Error) => { this.localError.set(error.message) },\n          complete: () => this.isFetching.set(false)\n        });\n      this.destroRef.onDestroy(() => sub.unsubscribe());\n// --------------------------------------------------------------------------------------------------------------------------------------\n    } catch (err) {\n      this.localError.set('The remote service could not be loaded.');\n      this.isFetching.set(false);\n    }\n  }\n\n  onSelectPlace(selectedPlace: Place) {\n    const sub = this.placesService.addPlaceToUserPlaces(selectedPlace).subscribe({\n      error: (error: Error) => {\n        console.error(error.message);\n        this.errorService.showError('Problem adding place, please try again.')\n      }\n    });\n    this.destroRef.onDestroy(() => sub.unsubscribe());\n  }\n}\n\n    \n\n    \n        \n  @if (localError()) {\n    {{ localError() }}\n  }\n  @if (isFetching() && !localError()) {\n    Loading the available places, please wait.\n  }\n  @if (places()) {\n    \n  } @else if (places() && places()?.length === 0) {\n    Unfortunately, no places could be found.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (localError()) {    {{ localError() }}  }  @if (isFetching() && !localError()) {    Loading the available places, please wait.  }  @if (places()) {      } @else if (places() && places()?.length === 0) {    Unfortunately, no places could be found.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AvailablePlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/card/card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  standalone: true,\n  imports: [],\n  templateUrl: './card.component.html',\n  styleUrl: './card.component.scss'\n})\nexport class CardComponent {\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComplexFormComponent.html":{"url":"components/ComplexFormComponent.html","title":"component - ComplexFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ComplexFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/reactive-forms/complex-form/complex-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-complex-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./complex-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./complex-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onReset\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onReset\n                        \n                    \n                \n            \n            \n                \nonReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/reactive-forms/complex-form/complex-form.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/reactive-forms/complex-form/complex-form.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', {validators: [Validators.required, Validators.email]}),\n    passwords: new FormGroup({\n      password: new FormControl('', {validators: [Validators.required, Validators.minLength(6)]}),\n      confirmPassword: new FormControl('', {validators: [Validators.required, Validators.minLength(6)]}),\n    }, {validators: [mustMatch]}),\n    firstName: new FormControl('', {validators: [Validators.required]}),\n    lastName: new FormControl('', {validators: [Validators.required]}),\n    address: new FormGroup({\n      street: new FormControl('', {validators: [Validators.required]}),\n      number: new FormControl('', {validators: [Validators.required]}),\n      postalCode: new FormControl('', {validators: [Validators.required]}),\n      city: new FormControl('', {validators: [Validators.required]}),\n    }),\n    role: new FormControl('student', {validators: [Validators.required]}),\n    source: new FormArray([\n      new FormControl(false),\n      new FormControl(false),\n      new FormControl(false),\n    ]),\n    terms: new FormControl(false, {validators: [Validators.required]}),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/reactive-forms/complex-form/complex-form.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AbstractControl, FormArray, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\nfunction mustMatch(control: AbstractControl) {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  if (password?.value !== confirmPassword?.value) {\n    return { mustMatch: true };\n  }\n  return null;\n}\n\n@Component({\n  selector: 'app-complex-form',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './complex-form.component.html',\n  styleUrl: './complex-form.component.scss'\n})\nexport class ComplexFormComponent {\n  form = new FormGroup({\n    email: new FormControl('', {validators: [Validators.required, Validators.email]}),\n    passwords: new FormGroup({\n      password: new FormControl('', {validators: [Validators.required, Validators.minLength(6)]}),\n      confirmPassword: new FormControl('', {validators: [Validators.required, Validators.minLength(6)]}),\n    }, {validators: [mustMatch]}),\n    firstName: new FormControl('', {validators: [Validators.required]}),\n    lastName: new FormControl('', {validators: [Validators.required]}),\n    address: new FormGroup({\n      street: new FormControl('', {validators: [Validators.required]}),\n      number: new FormControl('', {validators: [Validators.required]}),\n      postalCode: new FormControl('', {validators: [Validators.required]}),\n      city: new FormControl('', {validators: [Validators.required]}),\n    }),\n    role: new FormControl('student', {validators: [Validators.required]}),\n    source: new FormArray([\n      new FormControl(false),\n      new FormControl(false),\n      new FormControl(false),\n    ]),\n    terms: new FormControl(false, {validators: [Validators.required]}),\n  });\n\n  onSubmit() {\n    if (this.form.invalid) {\n      console.log(this.form.value);\n      return\n    }\n  };\n\n  onReset() {this.form.reset()};\n}\n\n    \n\n    \n        \n\n  @if (form.invalid && form.touched) {\n    Invalid form - please check your input data.\n  }\n\n  Welcome on board!\n  We just need a little bit of data from you to get you started 🚀\n\n  \n    Email\n    \n  \n\n  \n    \n      Password\n      \n    \n    \n      Confirm Password\n      \n    \n  \n  \n  \n    \n      \n        First Name\n        \n      \n      \n        Last Name\n        \n      \n    \n\n    \n      Your Address\n      \n        \n          Street\n          \n        \n        \n          Number\n          \n        \n      \n      \n        \n          Postal Code\n          \n        \n        \n          City\n          \n        \n      \n    \n  \n  \n  \n    \n      What best describes your role?\n      \n        Student\n        Teacher\n        Employee\n        Founder\n        Other\n      \n    \n  \n\n  \n    How did you find us?\n    \n      \n      Google\n    \n    \n      \n      Referred by friend\n    \n    \n      \n      Other\n    \n  \n\n  \n    \n      \n        \n        I agree to the terms and conditions\n      \n    \n  \n\n  \n    Reset\n    Sign up\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (form.invalid && form.touched) {    Invalid form - please check your input data.  }  Welcome on board!  We just need a little bit of data from you to get you started 🚀      Email                  Password                    Confirm Password                                  First Name                            Last Name                            Your Address                        Street                                    Number                                                Postal Code                                    City                                            What best describes your role?              Student        Teacher        Employee        Founder        Other                  How did you find us?                Google                    Referred by friend                    Other                                  I agree to the terms and conditions                  Reset    Sign up  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'ComplexFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorModalComponent.html":{"url":"components/ErrorModalComponent.html","title":"component - ErrorModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/modal-error/components/error/error-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ModalComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./error-modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./error-modal.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorService\n                            \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClearError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                        \n                            \n                                    Defined in src/shared/modal-error/components/error/error-modal.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                        \n                            \n                                    Defined in src/shared/modal-error/components/error/error-modal.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClearError\n                        \n                    \n                \n            \n            \n                \nonClearError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/components/error/error-modal.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ErrorService)\n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/components/error/error-modal.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/shared/modal-error/components/error/error-modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/shared/modal-error/components/error/error-modal.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, input } from '@angular/core';\nimport { ModalComponent } from \"../modal/modal.component\";\nimport { ErrorService } from '../../service/error.service';\n\n@Component({\n    selector: 'app-error-modal',\n    standalone: true,\n    templateUrl: './error-modal.component.html',\n    styleUrl: './error-modal.component.scss',\n    imports: [ModalComponent]\n})\nexport class ErrorModalComponent {\n  title = input();\n  message = input();\n  private errorService = inject(ErrorService);\n\n  onClearError() {\n    this.errorService.clearError();\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title() }}\n    {{ message() }}\n\n    \n      Okay\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title() }}    {{ message() }}          Okay      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/modal-error/service/error.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _error\n                            \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearError\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearError\n                        \n                    \n                \n            \n            \n                \nclearError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/service/error.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/service/error.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/service/error.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._error.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/service/error.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  private _error = signal('');\n  error = this._error.asReadonly();\n\n  showError(message: string) { this._error.set(message) };\n  clearError() { this._error.set('') };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritePlacesComponent.html":{"url":"components/FavoritePlacesComponent.html","title":"component - FavoritePlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FavoritePlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/favorite-places/favorite-places.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorite-places\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                PlacesContainerComponent\n                                PlacesComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./favorite-places.component.html\n            \n\n\n\n            \n                styleUrl\n                ./favorite-places.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroRef\n                            \n                            \n                                    Private\n                                envInjector\n                            \n                            \n                                errorService\n                            \n                            \n                                isFetching\n                            \n                            \n                                localError\n                            \n                            \n                                places\n                            \n                            \n                                    Private\n                                placesService\n                            \n                            \n                                serviceError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onRemovePlace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/favorite-places/favorite-places.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemovePlace\n                        \n                    \n                \n            \n            \n                \nonRemovePlace(selectedPlace: Place)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/favorite-places/favorite-places.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedPlace\n                                            \n                                                            Place\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        envInjector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EnvironmentInjector)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ErrorService)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFetching\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        places\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        placesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InstanceType<>\n\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit, signal, runInInjectionContext, EnvironmentInjector, Type } from '@angular/core';\nimport { mfWrapperForTesting } from '../../../shared/mf-wrapper-test';\nimport { RemoteServicesRegistry } from '../../../shared/remote-services.registry';\nimport type { PlacesService } from 'host/PlacesService';\nimport { Place } from '../place.model';\nimport { PlacesComponent } from '../places/places.component';\nimport { PlacesContainerComponent } from '../places-container/places-container.component';\nimport { ErrorService } from '../../../shared/modal-error/service/error.service';\n@Component({\n  selector: 'app-favorite-places',\n  standalone: true,\n  imports: [PlacesContainerComponent, PlacesComponent],\n  templateUrl: './favorite-places.component.html',\n  styleUrl: './favorite-places.component.scss'\n})\nexport class FavoritePlacesComponent implements OnInit {\n  localError = signal('');\n  errorService = inject(ErrorService);\n  serviceError = signal('');\n\n  places = signal(undefined);\n  isFetching = signal(false);\n\n  private placesService!: InstanceType;\n  private envInjector = inject(EnvironmentInjector);\n  private destroRef = inject(DestroyRef);\n\n  async ngOnInit() {\n    this.isFetching.set(true);\n    try {\n// -- Load in runtime the host service instance via loadRemoteModule from remoteEntry.js ------------------------------------------------\n      const hostServiceModule = await mfWrapperForTesting.loadRemoteModule(\n        { type: 'module', remoteEntry: 'http://localhost:4200/remoteEntry.js', exposedModule: './PlacesService' }\n      );\n// -- runInInjectionContext allows to instance localy the host service via EnvironmentInjector  -----------------------------------------\n      runInInjectionContext(this.envInjector, () => {\n// -- RemoteServicesRegistry ensures the same instance between components of the remote -------------------------------------------------\n        RemoteServicesRegistry.placesService ??= this.envInjector.get(hostServiceModule.PlacesService as unknown as Type);\n        this.placesService = RemoteServicesRegistry.placesService!;\n      });\n// -- With this asigment I can update in real time the places ---------------------------------------------------------------------------\n      this.places = this.placesService.loadedUserPlaces;\n// -- Use of the host service -----------------------------------------------------------------------------------------------------------\n      const sub = this.placesService.loadUserPlaces()\n        .subscribe({\n          error: (error: Error) => { this.localError.set(error.message) },\n          complete: () => { this.isFetching.set(false) }\n        });\n      this.destroRef.onDestroy(() => sub.unsubscribe());\n// --------------------------------------------------------------------------------------------------------------------------------------\n    } catch (err) {\n      this.localError.set('The remote service could not be loaded.');\n      this.isFetching.set(false);\n      RemoteServicesRegistry.placesService = null;\n    }\n  }\n\n  onRemovePlace(selectedPlace: Place) {\n    const sub = this.placesService.removeUserPlace(selectedPlace).subscribe({\n      error: (error: Error) => {\n        console.error(error.message);\n        this.errorService.showError('Problem removing place, please try again.')\n      }\n    });\n    this.destroRef.onDestroy(() => sub.unsubscribe());\n  }\n}\n\n    \n\n    \n        \n  @if (localError()) {\n    {{ localError() }}\n  }\n  @if (isFetching() && !localError()) {\n    Loading your favorite places, please wait.\n  }\n  @if (places() && places()!.length > 0) {\n    \n  } @else if (places() && places()!.length === 0 && !isFetching()) {\n    Unfortunately, no places could be found.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (localError()) {    {{ localError() }}  }  @if (isFetching() && !localError()) {    Loading your favorite places, please wait.  }  @if (places() && places()!.length > 0) {      } @else if (places() && places()!.length === 0 && !isFetching()) {    Unfortunately, no places could be found.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoritePlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n\n}\n\n    \n\n    \n        \n  \n  \n    Knowledge of Angular 19\n    \n      Senior-level knowledge with the Angular framework and version 19\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Knowledge of Angular 19          Senior-level knowledge with the Angular framework and version 19      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Lesson.html":{"url":"interfaces/Lesson.html","title":"interface - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/lesson/lesson.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Lesson {\n  id: string;\n  avatar: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LessonComponent.html":{"url":"components/LessonComponent.html","title":"component - LessonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LessonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/lesson/lesson.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lesson\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CardComponent\n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./lesson.component.html\n            \n\n\n\n            \n                styleUrl\n                ./lesson.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imagePath\n                            \n                            \n                                lesson\n                            \n                            \n                                select\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectLesson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lesson\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lesson\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/lesson/lesson.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/lesson/lesson.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        select\n                    \n                \n                        \n                            \n                                    Defined in src/components/lesson/lesson.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectLesson\n                        \n                    \n                \n            \n            \n                \nonSelectLesson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/lesson/lesson.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 'assets/mf-angular-19/' + this.lesson().avatar;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/lesson/lesson.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lesson\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/lesson/lesson.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/lesson/lesson.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/lesson/lesson.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, input, output } from '@angular/core';\nimport { type Lesson } from \"./lesson.model\";\nimport { CardComponent } from \"../../shared/card/card.component\";\nimport { RouterLink, RouterLinkActive } from '@angular/router';\n@Component({\n  selector: 'app-lesson',\n  standalone: true,\n  imports: [CardComponent, RouterLink, RouterLinkActive],\n  templateUrl: './lesson.component.html',\n  styleUrl: './lesson.component.scss'\n})\nexport class LessonComponent {\n  lesson = input.required();\n  selected = input.required();\n  select = output();\n\n  imagePath = computed(() => {\n    return 'assets/mf-angular-19/' + this.lesson().avatar;\n  });\n\n  onSelectLesson() {\n    this.select.emit(this.lesson().id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ lesson().name }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ lesson().name }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'LessonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/modal-error/components/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./modal.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dialogEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/components/modal/modal.component.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogEl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild.required>('dialog')\n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/components/modal/modal.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, viewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  standalone: true,\n  imports: [],\n  templateUrl: './modal.component.html',\n  styleUrl: './modal.component.scss'\n})\nexport class ModalComponent implements AfterViewInit {\n  private dialogEl = viewChild.required>('dialog');\n\n  ngAfterViewInit(): void {\n    this.dialogEl().nativeElement.showModal();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewRequestComponent.html":{"url":"components/NewRequestComponent.html","title":"component - NewRequestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewRequestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/new-request/new-request.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-request\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AvailablePlacesComponent\n                                FavoritePlacesComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./new-request.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-request.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                        \n                            \n                                    Defined in src/components/http-request/new-request/new-request.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/new-request/new-request.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/http-request/new-request/new-request.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, output } from '@angular/core';\nimport { AvailablePlacesComponent } from '../available-places/available-places.component';\nimport { FavoritePlacesComponent } from '../favorite-places/favorite-places.component';\n\n@Component({\n  selector: 'app-new-request',\n  standalone: true,\n  imports: [AvailablePlacesComponent, FavoritePlacesComponent],\n  templateUrl: './new-request.component.html',\n  styleUrl: './new-request.component.scss'\n})\nexport class NewRequestComponent {\n  close = output();\n\n  onCancel() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    PlacePicker\n    \n      Close HTTP request\n    \n  \n  \n    Create your personal collection of places you would like to visit or you have visited.\n  \n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      PlacePicker          Close HTTP request            Create your personal collection of places you would like to visit or you have visited.              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewRequestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewTaskComponent.html":{"url":"components/NewTaskComponent.html","title":"component - NewTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/new-task/new-task.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-task\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./new-task.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-task.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                enteredDate\n                            \n                            \n                                enteredSummary\n                            \n                            \n                                enteredTitle\n                            \n                            \n                                lessonId\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                taskService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/components/new-task/new-task.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                        \n                            \n                                    Defined in src/components/new-task/new-task.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/new-task/new-task.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enteredDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enteredSummary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enteredTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, effect, inject, output, signal } from '@angular/core';\nimport { ActivatedRoute, RouterLink, Router} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { TaskService } from '../../services/tasks/tasks.service';\n@Component({\n  selector: 'app-new-task',\n  standalone: true,\n  imports: [FormsModule, RouterLink],\n  templateUrl: './new-task.component.html',\n  styleUrl: './new-task.component.scss'\n})\nexport class NewTaskComponent {\n  close = output();\n  taskService = inject(TaskService);\n  private router = inject(Router);\n  private route = inject(ActivatedRoute);\n\n  lessonId = signal('');\n  enteredTitle = signal('');\n  enteredSummary = signal('');\n  enteredDate = signal('');\n\n  constructor() {\n    effect(() => {\n      const parentParams = this.route.parent?.snapshot.paramMap;\n      const id = parentParams?.get('lessonId');\n      if (id) this.lessonId.set(id);\n    });\n  }\n\n  onSubmit() {\n    this.taskService.addTask({title: this.enteredTitle(), summary: this.enteredSummary(), date: this.enteredDate(), status: 'OPEN'}, this.lessonId());\n    this.router.navigate(['../'], {relativeTo: this.route});\n  };\n}\n\n    \n\n    \n        \n  Add Task\n  \n    Cancel\n    Create\n  \n\n\n\n  \n    Title\n    \n  \n  \n    Summary\n    \n  \n  \n    Due Date\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add Task      Cancel    Create        Title            Summary            Due Date      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewTaskData.html":{"url":"interfaces/NewTaskData.html","title":"interface - NewTaskData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewTaskData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/task/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type TaskStatus = 'OPEN' | 'IN_PROGRESS' | 'DONE';\n\nexport interface Task {\n  id: string;\n  lessonId: string;\n  title: string;\n  summary: string;\n  dueDate: string;\n  status: string;\n}\n\nexport interface NewTaskData {\n  title: string;\n  summary: string;\n  date: string;\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss'\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n  Sorry! Page not found\n  The URL you requested could not be found.\n  Back to main page\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sorry! Page not found  The URL you requested could not be found.  Back to main page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Place.html":{"url":"interfaces/Place.html","title":"interface - Place","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Place\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/http-request/place.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lon\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Place {\n  id: string;\n  title: string;\n  image: {\n    src: string;\n    alt: string;\n  };\n  lat: number;\n  lon: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlacesComponent.html":{"url":"components/PlacesComponent.html","title":"component - PlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/places/places.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-places\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./places.component.html\n            \n\n\n\n            \n                styleUrl\n                ./places.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                places\n                            \n                            \n                                selectPlace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectPlace\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectPlace\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectPlace\n                    \n                \n                        \n                            \n                                    Defined in src/components/http-request/places/places.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectPlace\n                        \n                    \n                \n            \n            \n                \nonSelectPlace(place: Place)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/places/places.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                place\n                                            \n                                                            Place\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        places\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/places/places.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectPlace\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/http-request/places/places.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input, output } from '@angular/core';\nimport { Place } from '../place.model';\n\n@Component({\n  selector: 'app-places',\n  standalone: true,\n  imports: [],\n  templateUrl: './places.component.html',\n  styleUrl: './places.component.scss'\n})\nexport class PlacesComponent {\n  places = input.required();\n  selectPlace = output();\n\n  onSelectPlace(place: Place) {\n    this.selectPlace.emit(place);\n  }\n}\n\n    \n\n    \n        \n  @for (place of places(); track place.id) {\n    \n      \n        \n        {{ place.title }}\n      \n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (place of places(); track place.id) {                          {{ place.title }}            }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlacesContainerComponent.html":{"url":"components/PlacesContainerComponent.html","title":"component - PlacesContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlacesContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/places-container/places-container.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-places-container\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./places-container.component.html\n            \n\n\n\n            \n                styleUrl\n                ./places-container.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/http-request/places-container/places-container.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/http-request/places-container/places-container.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'app-places-container',\n  standalone: true,\n  imports: [],\n  templateUrl: './places-container.component.html',\n  styleUrl: './places-container.component.scss'\n})\nexport class PlacesContainerComponent {\n  title = input.required();\n}\n\n    \n\n    \n        \n  {{ title() }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title() }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlacesContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SafeLinkDirective.html":{"url":"directives/SafeLinkDirective.html","title":"directive - SafeLinkDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  SafeLinkDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/safe-link/safe-link.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        a[appSafeLink]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hostElementRef\n                            \n                            \n                                routeParam\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onConfirmLeavePage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmLeavePage\n                        \n                    \n                \n            \n            \n                \nonConfirmLeavePage(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/directives/safe-link/safe-link.directive.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hostElementRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(ElementRef)\n                    \n                \n                    \n                        \n                                Defined in src/directives/safe-link/safe-link.directive.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeParam\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('', {alias: 'appSafeLink'})\n                    \n                \n                    \n                        \n                                Defined in src/directives/safe-link/safe-link.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, inject, input } from '@angular/core';\n@Directive({\n  selector: 'a[appSafeLink]',\n  standalone: true,\n  host: {\n    '(click)': 'onConfirmLeavePage($event)'\n  }\n})\nexport class SafeLinkDirective { // Atribute self directive\n\n  routeParam = input('', {alias: 'appSafeLink'});\n  private hostElementRef = inject>(ElementRef);\n\n  onConfirmLeavePage(event: MouseEvent) {\n    const wantsToLeave = window.confirm('Do you want to leave the app?');\n\n    if (wantsToLeave) {\n      const address = this.hostElementRef.nativeElement.href;\n      // const address = (event.target as HTMLAnchorElement).href;\n      this.hostElementRef.nativeElement.href = address + this.routeParam();\n      // (event.target as HTMLAnchorElement).href = address + this.routeParam();\n      return;\n    }\n\n    event?.preventDefault();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleFormComponent.html":{"url":"components/SimpleFormComponent.html","title":"component - SimpleFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/reactive-forms/simple-form/simple-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./simple-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./simple-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destrotRef\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    emailIsValid\n                                \n                                \n                                    passwordIsValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destrotRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', {\n      validators: [Validators.required, Validators.email],\n      asyncValidators: [emailIsUnique],\n    }),\n    password: new FormControl('', {\n      validators: [Validators.required, Validators.minLength(6), mustContainQuestionMark],\n    }),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        emailIsValid\n                    \n                \n\n                \n                    \n                        getemailIsValid()\n                    \n                \n                            \n                                \n                                    Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        passwordIsValid\n                    \n                \n\n                \n                    \n                        getpasswordIsValid()\n                    \n                \n                            \n                                \n                                    Defined in src/components/reactive-forms/simple-form/simple-form.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, DestroyRef, inject, OnInit } from '@angular/core';\nimport { ReactiveFormsModule, AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime, of } from 'rxjs';\n\n// Reactive forms\nfunction mustContainQuestionMark(control: AbstractControl) {\n  if (control.value.includes('?')) { return null };\n  return { mustContainQuestionMark: true };\n}\nfunction emailIsUnique(control: AbstractControl) {\n  if (control.value !== 'test@example.com') { return of(null) };\n  return of({ notUnique: true });\n}\n/*\n  Load the initial value of the form outside the life cycle of the component only if not is a SSR app.\n  let initialEmailValue = '';\n  const savedForm = localStorage.getItem('form');\n  if (savedForm) { initialEmailValue = JSON.parse(savedForm).email };\n*/\n//\n\n@Component({\n  selector: 'app-simple-form',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './simple-form.component.html',\n  styleUrl: './simple-form.component.scss'\n})\nexport class SimpleFormComponent implements OnInit {\n  private destrotRef = inject(DestroyRef);\n\n  form = new FormGroup({\n    email: new FormControl('', {\n      validators: [Validators.required, Validators.email],\n      asyncValidators: [emailIsUnique],\n    }),\n    password: new FormControl('', {\n      validators: [Validators.required, Validators.minLength(6), mustContainQuestionMark],\n    }),\n  });\n\n  get emailIsValid() {\n    return this.form.controls.email.touched && this.form.controls.email.dirty && this.form.controls.email.invalid;\n  }\n\n  get passwordIsValid() {\n    return this.form.controls.password.touched && this.form.controls.password.dirty && this.form.controls.password.invalid;\n  }\n\n  ngOnInit(): void {\n    // Reactive forms: Storage the form value from localStorage\n    const formValue = localStorage.getItem('form');\n    if (formValue) {\n      // this.form.setValue(JSON.parse(formValue));\n      this.form.patchValue(JSON.parse(formValue));\n    }\n    // Reactive forms: Storage the form value into localStorage\n    const formSubscription = this.form.valueChanges.pipe(debounceTime(500)).subscribe((val) => localStorage.setItem('form', JSON.stringify(val)));\n    this.destrotRef.onDestroy(() => formSubscription.unsubscribe());\n  }\n\n  onSubmit() {\n    console.log(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  Login\n\n  \n    \n      Email\n      \n    \n\n    \n      Password\n      \n    \n\n    Login\n  \n\n  @if (emailIsValid) {\n    Please enter a valid email.\n  }\n  @if (passwordIsValid) {\n    \n      Please enter a valid password, at least 6 characters and a question mark.\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Login            Email                    Password              Login    @if (emailIsValid) {    Please enter a valid email.  }  @if (passwordIsValid) {          Please enter a valid password, at least 6 characters and a question mark.      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/task/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lessonId\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lessonId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lessonId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type TaskStatus = 'OPEN' | 'IN_PROGRESS' | 'DONE';\n\nexport interface Task {\n  id: string;\n  lessonId: string;\n  title: string;\n  summary: string;\n  dueDate: string;\n  status: string;\n}\n\nexport interface NewTaskData {\n  title: string;\n  summary: string;\n  date: string;\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskComponent.html":{"url":"components/TaskComponent.html","title":"component - TaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/task/task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CardComponent\n                            DatePipe\n                            TemperaturePipe\n                                SafeLinkDirective\n                                AuthDirective\n                                NewRequestComponent\n                                SimpleFormComponent\n                                ComplexFormComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickCount\n                            \n                            \n                                clickCount$\n                            \n                            \n                                interval$\n                            \n                            \n                                intervalSignal\n                            \n                            \n                                isAddingRequest\n                            \n                            \n                                isShowingComplexForm\n                            \n                            \n                                isShowingSimpleForm\n                            \n                            \n                                task\n                            \n                            \n                                    Private\n                                taskService\n                            \n                            \n                                taskStatus\n                            \n                            \n                                temperature\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTaskStatus\n                            \n                            \n                                onClickObservable\n                            \n                            \n                                onCloseAddRequest\n                            \n                            \n                                onCompleteTask\n                            \n                            \n                                onShowComplexForm\n                            \n                            \n                                onShowSimpleForm\n                            \n                            \n                                onStartAddRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/task/task.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeTaskStatus\n                        \n                    \n                \n            \n            \n                \nonChangeTaskStatus(taskId: string, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickObservable\n                        \n                    \n                \n            \n            \n                \nonClickObservable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseAddRequest\n                        \n                    \n                \n            \n            \n                \nonCloseAddRequest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCompleteTask\n                        \n                    \n                \n            \n            \n                \nonCompleteTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onShowComplexForm\n                        \n                    \n                \n            \n            \n                \nonShowComplexForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onShowSimpleForm\n                        \n                    \n                \n            \n            \n                \nonShowSimpleForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStartAddRequest\n                        \n                    \n                \n            \n            \n                \nonStartAddRequest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clickCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickCount$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toObservable(this.clickCount)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interval$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : interval(1000)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intervalSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.interval$, {initialValue: 0})\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddingRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isShowingComplexForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isShowingSimpleForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/components/task/task.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    switch (this.task().status) {\n      case 'OPEN':\n        return 'Open';\n      case 'IN_PROGRESS':\n        return 'Working on it';\n      case 'DONE':\n        return 'Completed';\n      default:\n        return 'Open';\n    }\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(39)\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, input, OnInit, signal } from '@angular/core';\nimport { DatePipe } from \"@angular/common\";\nimport { interval } from \"rxjs\";\n\nimport { type Task, type TaskStatus } from \"./task.model\";\nimport { CardComponent } from \"../../shared/card/card.component\";\nimport { NewRequestComponent } from \"../http-request/new-request/new-request.component\";\nimport { TaskService } from '../../services/tasks/tasks.service';\nimport { TemperaturePipe } from '../../pipes/temperature/temperature.pipe'; // Custom Pipe for temperature\nimport { AuthDirective } from '../../directives/auth/auth.directive'; // Estructural self directive\nimport { SafeLinkDirective } from '../../directives/safe-link/safe-link.directive'; // Atribute self directive\nimport { toObservable, toSignal } from '@angular/core/rxjs-interop';\nimport { SimpleFormComponent } from '../reactive-forms/simple-form/simple-form.component';\nimport { ComplexFormComponent } from '../reactive-forms/complex-form/complex-form.component';\n@Component({\n  selector: 'app-task',\n  standalone: true,\n  imports: [\n    CardComponent, DatePipe, TemperaturePipe, SafeLinkDirective, AuthDirective, NewRequestComponent, SimpleFormComponent, ComplexFormComponent\n  ],\n  templateUrl: './task.component.html',\n  styleUrl: './task.component.scss',\n  hostDirectives: [] // Automatically applies directives from the array whenever the component is used.\n})\nexport class TaskComponent implements OnInit {\n  task = input.required();\n  private taskService = inject(TaskService);\n  taskStatus = computed(() => {\n    switch (this.task().status) {\n      case 'OPEN':\n        return 'Open';\n      case 'IN_PROGRESS':\n        return 'Working on it';\n      case 'DONE':\n        return 'Completed';\n      default:\n        return 'Open';\n    }\n  });\n\n  // Pipes: Variable needed for the temperature Pipe.\n  temperature = signal(39);\n\n  // HTTP Requests: To show the http request component.\n  isAddingRequest = signal(false);\n\n  // Reactive Forms: To show the simple or complex form component.\n  isShowingSimpleForm = signal(false);\n  isShowingComplexForm = signal(false);\n\n  // RxJS: toObservable example\n  clickCount = signal(0);\n  clickCount$ = toObservable(this.clickCount); // Instead of using effect on the constructor to reset the signal values ​​we can convert it to observable\n  // RxJS:  toSignal example\n  interval$ = interval(1000);\n  intervalSignal = toSignal(this.interval$, {initialValue: 0});\n\n  ngOnInit(): void {}\n\n  onClickObservable(){\n    this.clickCount.update(prevCount => prevCount + 1);\n  }\n\n  onChangeTaskStatus(taskId: string, status: string) {\n    let newStatus: TaskStatus = 'OPEN';\n\n    switch (status) {\n      case 'open':\n        newStatus = 'OPEN';\n        break;\n      case 'in-progress':\n        newStatus = 'IN_PROGRESS';\n        break;\n      case 'done':\n        newStatus = 'DONE';\n        break;\n      default:\n        break;\n    }\n\n    this.taskService.updateTaskStatus(taskId, newStatus);\n  }\n  onCompleteTask() {\n    this.taskService.removeTask(this.task().id);\n  }\n  // Open and close the http request component.\n  onStartAddRequest() {\n    this.isAddingRequest.set(true);\n  }\n  onCloseAddRequest() {\n    this.isAddingRequest.set(false);\n  }\n  // Open and close the simple or complex form component.\n  onShowSimpleForm() {\n    this.isShowingSimpleForm.set(true);\n    this.isShowingComplexForm.set(false);\n  }\n  onShowComplexForm() {\n    this.isShowingSimpleForm.set(false);\n    this.isShowingComplexForm.set(true);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ task().title }}\n        {{ taskStatus() }}\n      \n      \n        \n          Open\n          In-Progress\n          Completed\n        \n        \n          Change Status\n        \n      \n      Complete\n    \n\n    {{ task().dueDate | date:'fullDate'}}\n    {{ task().summary }}\n\n    @if (task().title === 'Data biding') {\n      \n        One-way: Interpolation uses: {{ expresion }}\n        One-way: Property binding uses: [src]=\"imageUrl\"\n        One-way: Event binding uses: (click)=\"onClick()\"\n        Two-way: Biding uses: [(ngModel)]=\"username\" \n      \n    }\n    @if (task().title === 'Directives') {\n      \n        Structural directives: Modify the structure of the DOM, adding or removing elements.\n        Attribute directives: Change the appearance or behavior of an element, such as modifying styles or attributes.\n        Components: These are directives with their own template, that is, they combine logic and view, and are the basis of any Angular application.\n        \n          \n            \n              Example of a structural directive called \"*appAuth\" and an attribute directive called \"appSafeLink\":\n              Link to Angular site!\n            \n          \n        \n      \n    }\n    @if (task().title === 'Pipes') {\n      \n        Example of the inbuild \"DatePipe\" and a custom pipe named \"temperature\" that can accept up to two configuration attributes:\n        \n          Custom pipe: {{ temperature() | temperature:'cel':'fah' }}  {{ temperature() | temperature:'fah':'cel' }}\n          In build pipe: {{ task().dueDate | date:'fullDate'}}\n        \n      \n    }\n    @if (task().title === 'Dependency Injection') {\n      \n        Angular has an Injector that manages dependencies declared as providers.If a component or service needs another class, Angular\n         looks for that class in the injection tree, creates it (if necessary), and delivers it.\n         Any class marked with the &#64;Injectable() decorator can be a dependency.\n         \n          Angular allows you to control the scope of the injected instance:\n          \n            providedIn: 'root': Global singleton, available throughout the application and Only one instance.\n            providedIn: 'platform' (Advanced): Available across the entire platform, even beyond multiple Angular apps on the same page.\n            providedIn: 'any': A new instance for each lazy-loaded module and useful for isolating services between modules.\n            providedIn: 'self' / SkipSelf (advanced): Controls which level of the Angular injector to resolve the dependency and used in\n              conjunction with &#64;Optional, &#64;Self, &#64;SkipSelf, etc.\n          \n        \n         In addition to providedIn, Angular also allows you to declare providers in various places: &#64;Injectable( providedIn: 'root' ),\n           providers: [] in a component, providers: [] in a module and Injector.create()\n          Manual or advanced injection: Injecting custom tokens, injecting values ​​(useValue), Injecting concrete classes (useClass) and\n        Injecting factories (useFactory)\n      \n    }\n    @if (task().title === 'RxJS') {\n      \n        Observables are values on a stream of data and are great for managing events or streamed data.\n        Signals are values on a container and are great for managind the applicationstate. \n        This is the example of an buld in observable: {{intervalSignal()}}\n        This is the example of an custom observable by clicking the button: {{clickCount()}}\n      \n      \n        Click to increment the signal converted into observable!\n      \n    }\n    @if (task().title === 'HTTP Requests') {\n      \n        \n          HTTP Requests in Angular allow your application to communicate with external servers to send or receive data, such as:\n          \n            Retrieving information from a REST API, Submitting forms, Saving data to a database, Authentication, etc. \n          \n        \n        \n          Types of HTTP Requests:\n          \n            GET: Obtains data from the server. Used to read information, such as a list of users or products.\n            POST: Sends data to the server. Used to create new resources (for example, registering a user).\n            PUT: Completely replaces an existing resource. Used when you want to update an entire object.\n            PATCH: Partially updates a resource. Use it when you only want to change some fields of the object.\n            DELETE: Deletes a resource from the server.\n          \n        \n      \n      @if (isAddingRequest()) {\n        \n      }\n      \n        Click on me to learn more about HTTP requests with images!\n      \n    }\n    @if (task().title === 'Routes') {\n      \n        \n          Guards types\n          \n            CanMatch: Decides whether a route can be used by the router before it is even evaluated whether it can be activated or loaded.\n            CanActivate: Determines whether a route can be activated. This is useful for protecting routes that should only be accessible to authenticated users or those with certain permissions.\n            CanDeactivate: Controls whether a user can exit a route. The most typical example is unsaved data.\n            CanLoad: Prevents a lazy-loaded module from loading if certain conditions are not met.\n          \n        \n        \n          Data types in the guards\n          \n            data: Allows you to associate custom static information with a route.\n            resolve: Allows you to obtain necessary data before a route is activated. Ensures that the information is available before displaying the associated component.\n          \n        \n      \n    }\n    @if (task().title === 'Reactive Forms') {\n      \n        \n          Click to show the simple form\n        \n        \n          Click to show the complex form\n        \n      \n      \n        @if (isShowingSimpleForm()) {}\n        @if (isShowingComplexForm()) {}\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ task().title }}        {{ taskStatus() }}                              Open          In-Progress          Completed                          Change Status                    Complete        {{ task().dueDate | date:\\'fullDate\\'}}    {{ task().summary }}    @if (task().title === \\'Data biding\\') {              One-way: Interpolation uses: {{ expresion }}        One-way: Property binding uses: [src]=\"imageUrl\"        One-way: Event binding uses: (click)=\"onClick()\"        Two-way: Biding uses: [(ngModel)]=\"username\"           }    @if (task().title === \\'Directives\\') {              Structural directives: Modify the structure of the DOM, adding or removing elements.        Attribute directives: Change the appearance or behavior of an element, such as modifying styles or attributes.        Components: These are directives with their own template, that is, they combine logic and view, and are the basis of any Angular application.                                            Example of a structural directive called \"*appAuth\" and an attribute directive called \"appSafeLink\":              Link to Angular site!                                        }    @if (task().title === \\'Pipes\\') {              Example of the inbuild \"DatePipe\" and a custom pipe named \"temperature\" that can accept up to two configuration attributes:                  Custom pipe: {{ temperature() | temperature:\\'cel\\':\\'fah\\' }}  {{ temperature() | temperature:\\'fah\\':\\'cel\\' }}          In build pipe: {{ task().dueDate | date:\\'fullDate\\'}}                  }    @if (task().title === \\'Dependency Injection\\') {              Angular has an Injector that manages dependencies declared as providers.If a component or service needs another class, Angular         looks for that class in the injection tree, creates it (if necessary), and delivers it.         Any class marked with the @Injectable() decorator can be a dependency.                   Angular allows you to control the scope of the injected instance:                      providedIn: \\'root\\': Global singleton, available throughout the application and Only one instance.            providedIn: \\'platform\\' (Advanced): Available across the entire platform, even beyond multiple Angular apps on the same page.            providedIn: \\'any\\': A new instance for each lazy-loaded module and useful for isolating services between modules.            providedIn: \\'self\\' / SkipSelf (advanced): Controls which level of the Angular injector to resolve the dependency and used in              conjunction with @Optional, @Self, @SkipSelf, etc.                           In addition to providedIn, Angular also allows you to declare providers in various places: @Injectable( providedIn: \\'root\\' ),           providers: [] in a component, providers: [] in a module and Injector.create()          Manual or advanced injection: Injecting custom tokens, injecting values ​​(useValue), Injecting concrete classes (useClass) and        Injecting factories (useFactory)          }    @if (task().title === \\'RxJS\\') {              Observables are values on a stream of data and are great for managing events or streamed data.        Signals are values on a container and are great for managind the applicationstate.         This is the example of an buld in observable: {{intervalSignal()}}        This is the example of an custom observable by clicking the button: {{clickCount()}}                    Click to increment the signal converted into observable!          }    @if (task().title === \\'HTTP Requests\\') {                        HTTP Requests in Angular allow your application to communicate with external servers to send or receive data, such as:                      Retrieving information from a REST API, Submitting forms, Saving data to a database, Authentication, etc.                                     Types of HTTP Requests:                      GET: Obtains data from the server. Used to read information, such as a list of users or products.            POST: Sends data to the server. Used to create new resources (for example, registering a user).            PUT: Completely replaces an existing resource. Used when you want to update an entire object.            PATCH: Partially updates a resource. Use it when you only want to change some fields of the object.            DELETE: Deletes a resource from the server.                              @if (isAddingRequest()) {              }              Click on me to learn more about HTTP requests with images!          }    @if (task().title === \\'Routes\\') {                        Guards types                      CanMatch: Decides whether a route can be used by the router before it is even evaluated whether it can be activated or loaded.            CanActivate: Determines whether a route can be activated. This is useful for protecting routes that should only be accessible to authenticated users or those with certain permissions.            CanDeactivate: Controls whether a user can exit a route. The most typical example is unsaved data.            CanLoad: Prevents a lazy-loaded module from loading if certain conditions are not met.                                    Data types in the guards                      data: Allows you to associate custom static information with a route.            resolve: Allows you to obtain necessary data before a route is activated. Ensures that the information is available before displaying the associated component.                            }    @if (task().title === \\'Reactive Forms\\') {                        Click to show the simple form                          Click to show the complex form                            @if (isShowingSimpleForm()) {}        @if (isShowingComplexForm()) {}          }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/tasks/tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePermission\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                getLessonTasks\n                            \n                            \n                                removeTask\n                            \n                            \n                                    Private\n                                saveTasks\n                            \n                            \n                                taskAuthentication\n                            \n                            \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/tasks/tasks.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(task: NewTaskData, lessonId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            NewTaskData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLessonTasks\n                        \n                    \n                \n            \n            \n                \ngetLessonTasks(lessonId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTask\n                        \n                    \n                \n            \n            \n                \nremoveTask(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskAuthentication\n                        \n                    \n                \n            \n            \n                \ntaskAuthentication(taskCode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskCode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTaskStatus\n                        \n                    \n                \n            \n            \n                \nupdateTaskStatus(taskId: string, newStatus: TaskStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newStatus\n                                            \n                                                            TaskStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('guest')\n                    \n                \n                    \n                        \n                                Defined in src/services/tasks/tasks.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(DUMMY_TASKS)\n                    \n                \n                    \n                        \n                                Defined in src/services/tasks/tasks.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from \"@angular/core\";\nimport { NewTaskData, TaskStatus, Task } from \"../../components/task/task.model\";\nimport { DUMMY_TASKS } from \"../../assets/dummy-data\";\n@Injectable({providedIn: 'root'})\nexport class TaskService {\n  tasks = signal(DUMMY_TASKS);\n  activePermission = signal('guest');\n\n  constructor() {\n    const tasks = localStorage.getItem('tasks');\n    if (tasks) { this.tasks.set(JSON.parse(tasks)) };\n  }\n  private saveTasks() {\n    localStorage.setItem('tasks', JSON.stringify(this.tasks()));\n  }\n\n  getLessonTasks(lessonId: string) {\n    return this.tasks().filter((task: Task) => task.lessonId === lessonId);\n  }\n  addTask(task: NewTaskData, lessonId: string) {\n    const newTask: Task = {\n      id: new Date().getTime().toString(),\n      lessonId: lessonId,\n      title: task.title,\n      summary: task.summary,\n      dueDate: task.date,\n      status: task.status\n    };\n    this.tasks.update((oldTasks) => [...oldTasks, newTask]);\n    this.saveTasks();\n  }\n  removeTask(id: string) {\n    this.tasks.set(this.tasks().filter((task: Task) => task.id !== id));\n    this.saveTasks();\n  }\n  updateTaskStatus(taskId: string, newStatus: TaskStatus) {\n    this.tasks.update((oldTasks) =>\n      oldTasks.map(\n        (task => task.id === taskId ? {...task, status: newStatus} : task)\n      )\n    );\n  }\n\n  // Estructural directive method\n  taskAuthentication(taskCode: boolean) {\n    if (taskCode) {\n      this.activePermission.set('fede');\n    } else {\n      this.activePermission.set('guest');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/tasks/tasks.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                TaskComponent\n                            RouterLink\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tasks.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activatedRoute\n                            \n                            \n                                currentChildRoute\n                            \n                            \n                                isNewTask\n                            \n                            \n                                lessonId\n                            \n                            \n                                lessonName\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                selectedFilter\n                            \n                            \n                                selectedLessonTasks\n                            \n                            \n                                sortSignal\n                            \n                            \n                                    Private\n                                taskService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChangeTasksFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/components/tasks/tasks.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeTasksFilter\n                        \n                    \n                \n            \n            \n                \nonChangeTasksFilter(filter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/tasks/tasks.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChildRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNewTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.currentChildRoute() === 'new')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessonName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('all')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLessonTasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    // Accessing the \"sortSignal\" here (at the beginning) forces the computed to be executed when the queryParan changes.\n    const sortedTasks = this.sortSignal();\n    const filteredTasks = (() => {\n      switch (this.selectedFilter()) {\n        case 'open':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'OPEN');\n        case 'in-progress':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'IN_PROGRESS');\n        case 'done':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'DONE');\n        default:\n          return this.taskService.getLessonTasks(this.lessonId());\n      }\n    })();\n    // Sorts the filtered tasks by status and returns them.\n    return filteredTasks.sort((a, b) => {\n      return sortedTasks === 'asc' ? a.id.localeCompare(b.id) : b.id.localeCompare(a.id);\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('desc')\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        taskService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TaskService)\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, signal } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, NavigationEnd, ResolveFn, Router, RouterLink, RouterOutlet, RouterStateSnapshot } from '@angular/router';\nimport { TaskComponent } from \"../task/task.component\";\nimport { TaskService } from '../../services/tasks/tasks.service';\nimport { DUMMY_LESSONS } from \"../../assets/dummy-data\"\nimport { filter } from 'rxjs';\n@Component({\n  selector: 'app-tasks',\n  standalone: true,\n  imports: [TaskComponent, RouterLink, RouterOutlet],\n  templateUrl: './tasks.component.html',\n  styleUrl: './tasks.component.scss'\n})\nexport class TasksComponent {\n  private router = inject(Router);\n  private route = inject(ActivatedRoute);\n  private taskService = inject(TaskService);\n\n  lessonId = signal('');\n  lessonName = signal('');\n  private activatedRoute = inject(ActivatedRoute);\n\n  sortSignal = signal('desc');\n  currentChildRoute = signal('');\n  isNewTask = computed(() => this.currentChildRoute() === 'new');\n\n  private selectedFilter = signal('all');\n\n  selectedLessonTasks = computed(() => {\n    // Accessing the \"sortSignal\" here (at the beginning) forces the computed to be executed when the queryParan changes.\n    const sortedTasks = this.sortSignal();\n    const filteredTasks = (() => {\n      switch (this.selectedFilter()) {\n        case 'open':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'OPEN');\n        case 'in-progress':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'IN_PROGRESS');\n        case 'done':\n          return this.taskService.getLessonTasks(this.lessonId()).filter(task => task.status === 'DONE');\n        default:\n          return this.taskService.getLessonTasks(this.lessonId());\n      }\n    })();\n    // Sorts the filtered tasks by status and returns them.\n    return filteredTasks.sort((a, b) => {\n      return sortedTasks === 'asc' ? a.id.localeCompare(b.id) : b.id.localeCompare(a.id);\n    });\n  }); // Filtering and Sorting the tasks into this computed signal.\n\n  constructor() {\n    // Get the lessonName from the route data dinamically.\n    this.activatedRoute.data.subscribe(data => this.lessonName.set(data['lessonName']));\n\n    // Get the lessonId from the route params. No destroRef needed because of route it self.\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('lessonId');\n      if (id) this.lessonId.set(id);\n    });\n\n    // Takes the first child route \"new\" to render conditionally the add task form using isNewRoute and currentChildRoute signals.\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      const childPath = this.route.snapshot.firstChild?.routeConfig?.path;\n      this.currentChildRoute.set(childPath ?? '');\n    });\n\n    // Get the sort param from the query params and toogle it depending on the value.\n    this.route.queryParamMap.subscribe(params => {\n      const sortParam = params.get('sort');\n      if (sortParam === 'asc' || sortParam === 'desc') {\n        this.sortSignal.set(sortParam);\n      }\n    });\n  } // No destroRef needed because of route it self.\n\n  onChangeTasksFilter(filter: string) {\n    this.selectedFilter.set(filter);\n  }\n}\n\n// No subscription needed on ActivatedRouteSnapshot because of route it self.\nexport const resolveLessonName: ResolveFn = (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  const lessonId = activatedRoute.paramMap.get('lessonId');\n  return DUMMY_LESSONS.find(lesson => lesson.id === lessonId)?.name || '';\n};\n\nexport const resolveTitle: ResolveFn = (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  return resolveLessonName(activatedRoute, routerState) + ' tasks';\n};\n\n    \n\n    \n        \n  \n  @if (!isNewTask()) {\n    \n      {{ lessonName() }}'s Tasks\n      \n        \n          All\n          Open\n          In-Progress\n          Completed\n        \n      \n      \n        \n          Sort {{ sortSignal() === 'asc' ? 'Descending' : 'Ascending' }}\n        \n        Add Task\n      \n    \n\n    \n      @for (task of selectedLessonTasks(); track task.id) {\n        \n          \n        \n      }\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (!isNewTask()) {          {{ lessonName() }}\\'s Tasks                        All          Open          In-Progress          Completed                                      Sort {{ sortSignal() === \\'asc\\' ? \\'Descending\\' : \\'Ascending\\' }}                Add Task                    @for (task of selectedLessonTasks(); track task.id) {                                }      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-19'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ComplexFormComponent', 'selector': 'app-complex-form'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TemperaturePipe.html":{"url":"pipes/TemperaturePipe.html","title":"pipe - TemperaturePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TemperaturePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/temperature/temperature.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        temperature\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number | null, inputType: \"cel\" | \"fah\", outputType?: \"cel\" | \"fah\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/pipes/temperature/temperature.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                inputType\n                                            \n                                                        \"cel\" | \"fah\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                outputType\n                                            \n                                                        \"cel\" | \"fah\"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n  name: 'temperature',\n  standalone: true,\n  pure: true // When pure is false, turns off the default security chache mecanism, which prevents too many pipe executions.\n})\nexport class TemperaturePipe implements PipeTransform {\n\n  transform(value: string | number | null, inputType: 'cel' | 'fah', outputType?: 'cel' | 'fah') {\n    if (value === null || value === undefined) { return value; }\n    if (value === '') { return value; }\n\n    let val: number;\n\n    if (typeof value === 'string') { val = parseFloat(value) } else { val = value };\n\n    let outputTemp: number;\n\n    if (inputType === 'cel' && outputType === 'fah') {\n      outputTemp = val * (9 / 5) + 32;\n    } else if (inputType === 'fah' && outputType === 'cel') {\n      outputTemp = (val - 32) * (5 / 9);\n    } else {\n      outputTemp = val;\n    }\n\n    let symbol: 'ºC' | 'ºF';\n\n    if (!outputType) { symbol = inputType === 'cel' ? 'ºC' : 'ºF' } else { symbol = outputType === 'cel' ? 'ºC' : 'ºF' };\n\n    return `${outputTemp.toFixed(2)} ${symbol}`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/assets/dummy-data.ts\n            \n            variable\n            DUMMY_LESSONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/assets/dummy-data.ts\n            \n            variable\n            DUMMY_TASKS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/http-request/available-places/available-places.component.ts\n            \n            component\n            AvailablePlacesComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/http-request/favorite-places/favorite-places.component.ts\n            \n            component\n            FavoritePlacesComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/http-request/new-request/new-request.component.ts\n            \n            component\n            NewRequestComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/http-request/place.model.ts\n            \n            interface\n            Place\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/components/http-request/places-container/places-container.component.ts\n            \n            component\n            PlacesContainerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/http-request/places/places.component.ts\n            \n            component\n            PlacesComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/lesson/lesson.component.ts\n            \n            component\n            LessonComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/components/lesson/lesson.model.ts\n            \n            interface\n            Lesson\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/new-task/new-task.component.ts\n            \n            component\n            NewTaskComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/reactive-forms/complex-form/complex-form.component.ts\n            \n            component\n            ComplexFormComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/components/reactive-forms/complex-form/complex-form.component.ts\n            \n            function\n            mustMatch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/reactive-forms/simple-form/simple-form.component.ts\n            \n            component\n            SimpleFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/components/reactive-forms/simple-form/simple-form.component.ts\n            \n            function\n            emailIsUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/reactive-forms/simple-form/simple-form.component.ts\n            \n            function\n            mustContainQuestionMark\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/task/task.component.ts\n            \n            component\n            TaskComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/components/task/task.model.ts\n            \n            interface\n            NewTaskData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/task/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/components/task/task.model.ts\n            \n            type alias\n            TaskStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/components/tasks/tasks.component.ts\n            \n            variable\n            resolveLessonName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/tasks/tasks.component.ts\n            \n            variable\n            resolveTitle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/directives/auth/auth.directive.ts\n            \n            directive\n            AuthDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/directives/safe-link/safe-link.directive.ts\n            \n            directive\n            SafeLinkDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/guards/can-leave-edit-page/can-leave-edit-page.guard.ts\n            \n            variable\n            canLeaveEditPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/guards/dummy-can-match/dummy-can-match.guard.ts\n            \n            variable\n            dummyCanMatch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/interceptors/remote-a19-interceptor/remote-a19.interceptor.ts\n            \n            variable\n            remoteA19Interceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/temperature/temperature.pipe.ts\n            \n            pipe\n            TemperaturePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/tasks/tasks.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/mf-wrapper-test.ts\n            \n            variable\n            mfWrapperForTesting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/modal-error/components/error/error-modal.component.ts\n            \n            component\n            ErrorModalComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/modal-error/components/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/modal-error/service/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/shared/remote-services.registry.ts\n            \n            variable\n            RemoteServicesRegistry\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            emailIsUnique   (src/.../simple-form.component.ts)\n                        \n                        \n                            mustContainQuestionMark   (src/.../simple-form.component.ts)\n                        \n                        \n                            mustMatch   (src/.../complex-form.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/reactive-forms/simple-form/simple-form.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailIsUnique\n                        \n                    \n                \n            \n            \n                \nemailIsUnique(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mustContainQuestionMark\n                        \n                    \n                \n            \n            \n                \nmustContainQuestionMark(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/components/reactive-forms/complex-form/complex-form.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mustMatch\n                        \n                    \n                \n            \n            \n                \nmustMatch(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMfAngular19\nThis project was generated using Angular CLI version 19.2.8.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../task.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/task/task.model.ts\n    \n    \n        \n            \n                \n                    \n                    TaskStatus\n                \n            \n            \n                \n                        \"OPEN\" | \"IN_PROGRESS\" | \"DONE\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            canLeaveEditPage   (src/.../can-leave-edit-page.guard.ts)\n                        \n                        \n                            DUMMY_LESSONS   (src/.../dummy-data.ts)\n                        \n                        \n                            DUMMY_TASKS   (src/.../dummy-data.ts)\n                        \n                        \n                            dummyCanMatch   (src/.../dummy-can-match.guard.ts)\n                        \n                        \n                            mfWrapperForTesting   (src/.../mf-wrapper-test.ts)\n                        \n                        \n                            remoteA19Interceptor   (src/.../remote-a19.interceptor.ts)\n                        \n                        \n                            RemoteServicesRegistry   (src/.../remote-services.registry.ts)\n                        \n                        \n                            resolveLessonName   (src/.../tasks.component.ts)\n                        \n                        \n                            resolveTitle   (src/.../tasks.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(\n      routes,\n      withComponentInputBinding(),\n      withRouterConfig({ paramsInheritanceStrategy: 'always' }),\n    ),\n    provideHttpClient(withInterceptors([remoteA19Interceptor]))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/guards/can-leave-edit-page/can-leave-edit-page.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canLeaveEditPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CanDeactivateFn\n\n                    \n                \n                \n                    \n                        Default value : (component: NewTaskComponent) => {\n  if (\n    component.enteredTitle().length > 0 ||\n    component.enteredSummary().length > 0 ||\n    component.enteredDate().length > 0\n  ) {\n    return confirm('Are you sure to leave with unsaved changes?');\n  }\n  return true;\n}\n                    \n                \n\n\n        \n    \n\n    src/assets/dummy-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DUMMY_LESSONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 'l1',\n    name: 'Data biding',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l2',\n    name: 'Directives',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l3',\n    name: 'Pipes',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l4',\n    name: 'Dependency Injection',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l5',\n    name: 'Observables - RxJS',\n    avatar: 'rxjs.png',\n  },\n  {\n    id: 'l6',\n    name: 'HTTP Requests',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l7',\n    name: 'Routes',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l8',\n    name: 'Reactive Forms',\n    avatar: 'angular-logo.png',\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DUMMY_TASKS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 't1',\n    lessonId: 'l1',\n    title: 'Data biding',\n    summary: 'It is the mechanism that allows synchronizing data between the model (component.ts) and the view (template.html):',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't2',\n    lessonId: 'l2',\n    title: 'Directives',\n    summary: 'Special classes that allow you to modify the behavior, appearance or structure of the elements in the DOM of an application.',\n    dueDate: '2025-12-31',\n    status: 'DONE'\n  },\n  {\n    id: 't3',\n    lessonId: 'l3',\n    title: 'Pipes',\n    summary: 'Tools that allow you to transform and format data directly in HTML templates, without modifying the original value in the component.',\n    dueDate: '2025-12-31',\n    status: 'IN_PROGRESS'\n  },\n  {\n    id: 't4',\n    lessonId: 'l4',\n    title: 'Dependency Injection',\n    summary: 'It is a design pattern that allows you to automatically provide instances of classes (dependencies) that other objects (such as components or services) need to function, without having to create them directly.',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't5',\n    lessonId: 'l5',\n    title: 'RxJS',\n    summary: 'Information, comparisons and examples of RxJS, observable pattern:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't6',\n    lessonId: 'l6',\n    title: 'HTTP Requests',\n    summary: 'Information and examples of HTTP requests, also with observable pattern:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't7',\n    lessonId: 'l7',\n    title: 'Routes',\n    summary: 'Information and examples in code of routing ans its complements:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n    {\n    id: 't8',\n    lessonId: 'l8',\n    title: 'Reactive Forms',\n    summary: 'Practical example of a form with the implementation of: ngSubmit, ngModel, required, #XXXX=\"ngModel\", conditional rendering and conditional classes:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/guards/dummy-can-match/dummy-can-match.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dummyCanMatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanMatchFn\n\n                    \n                \n                \n                    \n                        Default value : (route, segments) => {\n  const router = inject(Router);\n  const shouldGetAccess = Math.random();\n  if (shouldGetAccess  You do not have access');\n  return new RedirectCommand(router.parseUrl('/a19'));\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/mf-wrapper-test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mfWrapperForTesting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { loadRemoteModule: realLoadRemoteModule }\n                    \n                \n\n\n        \n    \n\n    src/interceptors/remote-a19-interceptor/remote-a19.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        remoteA19Interceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const apiHost = 'http://localhost:4201';\n  let newReq = req;\n  if (!req.url.startsWith('http')) {\n    newReq = req.clone({ url: apiHost + req.url });\n  }\n  console.log('Intercepted by remoteA19Interceptor');\n  return next(newReq);\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/remote-services.registry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RemoteServicesRegistry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/components/tasks/tasks.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolveLessonName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResolveFn\n\n                    \n                \n                \n                    \n                        Default value : (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  const lessonId = activatedRoute.paramMap.get('lessonId');\n  return DUMMY_LESSONS.find(lesson => lesson.id === lessonId)?.name || '';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResolveFn\n\n                    \n                \n                \n                    \n                        Default value : (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  return resolveLessonName(activatedRoute, routerState) + ' tasks';\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/microfrontends-architecture.html":{"url":"additional-documentation/microfrontends-architecture.html","title":"additional-page - Microfrontends Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMicrofrontends Architecture\nThis application is designed following the microfrontends paradigm. Each functional domain is implemented as an independent microfrontend, using Module Federation for dynamic integration of Angular modules.\nKey Features\n\nRemote module loading (Remote Module Federation)\nIndependent deployment for each microfrontend\nCommunication between microfrontends via custom events and shared services\nIntegration with Nx\n\nStructure\n\n/mf-angular-shell: Main microfrontend (host)\n/mf-angular-19: Functional microfrontend with Angular 19\n/mf-angular-16: Functional microfrontend with Angular 16\n\nConfiguration files\n\n/src/webpack.config.js: Configuration of the routes that this remote app will show.\n/src/decl.d.ts: Declaration the host service module to be imported into the dependency injection.\n/src/shared/mf-wrapper-test.ts: Dedicated wrapper to test the service loaded from the host app.\n/src/shared/remote-services.registry.ts: Specifically register the service by giving it an instance type.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
